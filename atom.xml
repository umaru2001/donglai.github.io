<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>海祇岛的珊瑚森林</title>
  
  <subtitle>海星来来の人云亦云</subtitle>
  <link href="https://blog.pengdonglai.com/atom.xml" rel="self"/>
  
  <link href="https://blog.pengdonglai.com/"/>
  <updated>2024-10-06T12:04:45.792Z</updated>
  <id>https://blog.pengdonglai.com/</id>
  
  <author>
    <name>海星来来</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>N2 日语部分语法点归总（1）</title>
    <link href="https://blog.pengdonglai.com/2024/09/17/japanese-grammar-3/"/>
    <id>https://blog.pengdonglai.com/2024/09/17/japanese-grammar-3/</id>
    <published>2024-09-17T02:35:41.000Z</published>
    <updated>2024-10-06T12:04:45.792Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><button class="btn-small waves-effect waves-light" id="toggleButton">变更测试模式</button></p><script>  let usingHeimu = true;  document.getElementById('toggleButton').addEventListener('click', () => {    usingHeimu = !usingHeimu;    const spans = document.querySelectorAll('span.heimu, span.no-heimu');    spans.forEach(span => {      if (usingHeimu) {        span.classList.remove('no-heimu');        span.classList.add('heimu');      } else {        span.classList.remove('heimu');        span.classList.add('no-heimu');      }    });  });</script><blockquote><p>本文来自于 bilibili UP 主 <a href="https://space.bilibili.com/548121510">当当_suzu</a> 的 <a href="https://www.bilibili.com/video/BV1yY411b7zY">N2 系列视频</a>，这套视频是我见过 N2 系列语法视频中讲的最全的版本，如果有可能大家请尽可能支持原作者！</p><p>本文内容来自于该系列视频讲义。如有侵犯著作权的行为请联系我及时删除。</p></blockquote><h2 id="知识点快速过"><a href="#知识点快速过" class="headerlink" title="知识点快速过"></a>知识点快速过</h2><h3 id="表示评价、判断"><a href="#表示评价、判断" class="headerlink" title="表示评价、判断"></a>表示评价、判断</h3><table><thead><tr><th>含义&#x2F;假名类</th><th>はず</th><th>わけ</th><th>もの</th><th>べき&#x2F;こと</th><th>包含汉字词</th><th>其它</th></tr></thead><tbody><tr><td>应该</td><td>はずだ（有把握的推测）</td><td>わけだ（自然而然的）</td><td>ものだ（道理，常识）</td><td>べきだ（主张）、ことだ（劝告，要求）</td><td>と見える（可见，看来）</td><td>でなくてなんだろう（不是..又是什么呢？）</td></tr><tr><td>一定，表肯定</td><td></td><td></td><td>というものだ “才真是”，表肯定强调</td><td></td><td>に相違ない、に決まっている、に違いない</td><td>にほかならない（正是、不外乎）</td></tr><tr><td>确实是</td><td></td><td></td><td>ものがある 确实是（有这样的特性）</td><td></td><td></td><td></td></tr><tr><td>不应该</td><td>はずがない</td><td>わけがない（没有可能）</td><td>ものではない 不该（违反常识）</td><td></td><td></td><td></td></tr><tr><td>不可能</td><td></td><td></td><td>ものか 表强烈否定，“怎么可能”</td><td></td><td></td><td></td></tr><tr><td>并不是，并非</td><td></td><td>わけではない・わけでもない（并不是、并非）</td><td>というものではない 并不是</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>というわけではない</td><td></td><td></td><td></td><td></td></tr><tr><td>不能</td><td></td><td>わけにはいかない 不能（受到约束和限制）</td><td></td><td></td><td></td><td></td></tr><tr><td>令人…的是</td><td></td><td></td><td></td><td>ことに</td><td></td><td></td></tr><tr><td>不必</td><td></td><td></td><td></td><td>ことはない</td><td></td><td></td></tr><tr><td>只不过</td><td></td><td></td><td></td><td></td><td></td><td>にすぎない（只不过，强调程度低）</td></tr></tbody></table><p>表示语气：</p><ul><li>～ものだ 表示感叹；</li><li>～たいものだ 表示强烈的愿望；「真想」</li><li>～たものだ 表回忆，过去经常，「总是」</li><li>～のではない（だろか）か &#x3D;&#x3D;否定+疑问（表肯定）&#x3D;&#x3D; …吧（委婉语气）</li></ul><p>表示比较：</p><ul><li>～ほど～ない 没那么…</li><li>～ほど～はない 没有比…更…</li></ul><h3 id="表示时间"><a href="#表示时间" class="headerlink" title="表示时间"></a>表示时间</h3><table><thead><tr><th><strong>正好要</strong></th><th><strong>正在做</strong></th><th><strong>刚做完</strong></th><th><strong>同时做（一件事情在做时）</strong></th><th><strong>一…就</strong></th><th><strong>…之后</strong></th><th><strong>…的时候（值此之际）</strong></th><th><strong>每次（表示频率）</strong></th></tr></thead><tbody><tr><td>～ところだ</td><td>～（ている）ところだ</td><td>～（た）ところ</td><td>～ついでに<br>顺便做某事</td><td>～か～ないかのうちに<br>刚一…就（要完未完之时）</td><td>～うえで</td><td>～にあたって<br>～にあたり</td><td>～たびに</td></tr><tr><td>～ところだ（に、へ）</td><td>～最中<br>正在…的时候（鼎盛期）</td><td></td><td>～うちに<br>趁着（不用于未来）<br>在…的过程中</td><td>～かと思うと<br>～かと思うったら<br>一…就（出乎意料）<br>原以为…（出乎意料）</td><td>～て以来</td><td>～際、～に際し<br>に際して</td><td>（N3）～ごとに</td></tr><tr><td>～ところを<br>即将（表示不利状况）<br>表示尊敬</td><td></td><td></td><td></td><td>～た途端（に）</td><td>～てはじめて</td><td>～をきっかけにして</td><td>（N3）～おきに</td></tr><tr><td></td><td></td><td></td><td></td><td>～次第<br>一…就、取决于…</td><td></td><td>～を契機として<br>～を機に</td><td></td></tr></tbody></table><h2 id="前置知识：活用接续概念"><a href="#前置知识：活用接续概念" class="headerlink" title="前置知识：活用接续概念"></a>前置知识：活用接续概念</h2><h3 id="体言VS用言"><a href="#体言VS用言" class="headerlink" title="体言VS用言"></a>体言VS用言</h3><p>日语中，用言和体言的区别，最根本的区别就是两者内容和用法不同，</p><p>体言：名词、代名词、数词</p><p>用言：动词，形容词，形容动词</p><p>体言的特点：</p><p>1、体言是没有活用（即词尾变化）的独立词。</p><p>2、体言可以后接助词が（は、も等）构成主语，这是体言最大的特点。</p><p>3、体言可以后接助词构成连体修饰语、连用修饰语等，还可以后接断定助动词だ（です）等构成谓语。</p><p>4、体言前面可以加连体修饰语。</p><p>用言的特点：</p><p>1、用言是 有活用（即词尾变化）的独立词。</p><p>2、用言 可以单独构成谓语，这是用言最大的特点。</p><p>3、用言 可以通过自身的词尾变化构成连体修饰语、连用修饰语。</p><p>4、用言前面可以加连用修饰语。</p><h3 id="活用形简述"><a href="#活用形简述" class="headerlink" title="活用形简述"></a>活用形简述</h3><p>简体形、终止形、连体形、连用形、中顿形指的并非某种具体的形式，而是根据接续功能的不同，把一系列活用形式汇总到一起的总称。他们的接续功能如下：</p><ul><li><p>简体形，是用来体现词的核心部分。</p></li><li><p>终止形，是用来放到句末来结句。</p></li><li><p>连体形，是用来修饰名词。</p></li><li><p>连用形，是用来连接其他用言（具体包括动词、形容词、形容动词）。</p></li><li><p>中顿形，是用来连接后半句话。</p></li></ul><p>对于动词而言，“简体形”具体包括：表非过去肯定的辞书形、表过去肯定的た形、表非过去否定的ない形、以及表过去否定的なかった形，共四种。因为这四种形式均可以放在句末结句，也可以直接放在名词前做定语，所以“终止形”即“简体形”，“连体形”也为“简体形”。而动词的“连用形”和“中顿形”一致，ます形去ます和て形均可使用。</p><p>对于形容词而言，简体形同样是四种。因为这四种形式均可以放在句末结句，也可以直接放在名词前做定语，所以“终止形”即“简体形”，“连体形”也为“简体形”。连用形和中顿形是く或くて。</p><p>对于形容动词而言，简体形是词干本身，终止形是词干+だ・である，以及引申出的过去和否定。而连体形是词干+な，连用形和中顿形是で、であり。</p><p>对于名词而言，简体形是词干本身，终止形是词干+だ・である，以及由此引申出的过去和否定。而连体形最常用的是词干+の，也会遇到词干+だった或である的情况，连用形和中顿形是词干+で・であり。</p><h2 id="第一部分：判断、評価"><a href="#第一部分：判断、評価" class="headerlink" title="第一部分：判断、評価"></a>第一部分：判断、評価</h2><h3 id="1-～はずだ"><a href="#1-～はずだ" class="headerlink" title="1. ～はずだ"></a>1. ～はずだ</h3><p>接続：連体形、名詞＋の</p><p>意味：应该（有把握的推测）</p><p>例文：</p><p>会議は2時に始まるはずです。<span class="heimu">会议应该2点开始。</span></p><p>妹は今年卒業のはずです。<span class="heimu">妹妹应该今年毕业了。</span></p><p><span class="heimu">そのこともう彼に話しましたから、彼は知っているはずだ。</span>那件事情已经跟他说过了，他应该知道。</p><h3 id="2-～はずがない"><a href="#2-～はずがない" class="headerlink" title="2. ～はずがない"></a>2. ～はずがない</h3><p>接続：連体形</p><p>意味：不应该</p><p>例文：</p><p>夏休み中だから、彼女は忙しいはずがない。<span class="heimu">现在放暑假，她不应该很忙。</span></p><p><span class="heimu">あの人は日本に10年も住んでいるから、日本語が分からないはずがない。</span>那个人在日本住了10年，不可能不懂日语。</p><h3 id="3-～わけだ"><a href="#3-～わけだ" class="headerlink" title="3. ～わけだ"></a>3. ～わけだ</h3><p>接続：連体形</p><p>意味：应该（自然而然的应该）；难怪</p><p>例文：</p><p>10年もう日本にいたから、日本語が上手なわけだ。<span class="heimu">在日本也10年了，日语应该很熟练了。</span></p><p><span class="heimu">子供さえわかるような問題だったので、自然にすぐ答えられたわけです。</span>是个连孩子都明白的问题，自然立刻就回答上来了。</p><h3 id="4-～わけがない"><a href="#4-～わけがない" class="headerlink" title="4. ～わけがない"></a>4. ～わけがない</h3><p>&#x3D;&#x3D;わけない</p><p>接続：連体形</p><p>意味：没有可能这样</p><p>例文：</p><p>そんなやさしい彼がそんなことをするわけがない。<span class="heimu">他那么温柔，没有可能做这种事。</span></p><p><span class="heimu">とても難し問題ので、誰にも答えられるわけがない。</span>是个非常难的问题，所以谁都不可能答得出来。</p><h3 id="5-～わけではない・わけでもない"><a href="#5-～わけではない・わけでもない" class="headerlink" title="5. ～わけではない・わけでもない"></a>5. ～わけではない・わけでもない</h3><p>接続：連体形</p><p>意味：并不是、并非</p><p>例文：</p><p>お酒が嫌いなわけでもないが、医者に注意されたので飲まないことにしている。<span class="heimu">并不是不喜欢酒，只是医生要求注意不能喝。</span></p><p><span class="heimu">このクラスの学生は全員まじめに勉強するわけではない。</span>这个班的学生并非都好好学习。</p><h3 id="6-～というわけではない"><a href="#6-～というわけではない" class="headerlink" title="6. ～というわけではない"></a>6. ～というわけではない</h3><p>接続：用言辞書型、体言</p><p>意味：并不是</p><p>例文：</p><p>n+次第：取决于</p><p>必ずしも：并非，不一定；后面会经常搭配表示「未必」的固定搭配。</p><p>能力次第に。必ずしも大学卒というわけではない。<span class="heimu">根据能力，而未必是（根据）大学毕业。</span></p><p><span class="heimu">参加したくないというわけでわないが、時間がないです。</span>并不是不想参加，只是没有时间。</p><h3 id="7-～わけにはいかない"><a href="#7-～わけにはいかない" class="headerlink" title="7. ～わけにはいかない"></a>7. ～わけにはいかない</h3><p>～ないわけにはいかない 不得不…</p><p>接続：連体形</p><p>意味：不能（受到约束和限制）</p><p>例文：</p><p>風邪ひいたが、最近仕事忙しいので、会社を休むわけにはいかない。<span class="heimu">虽然感冒了，但是最近工作很忙，所以不能向公司请假。</span></p><p><span class="heimu">約束したので、行かないわけにはいかない。</span>因为已经约定好了，所以不能不去。</p><h3 id="8-～ものだ"><a href="#8-～ものだ" class="headerlink" title="8. ～ものだ"></a>8. ～ものだ</h3><p>接続：連体形</p><p>（1）意味：应该（道理，常识，习惯）</p><p>例文：</p><p>良薬は口に苦しいものだ。<span class="heimu">好的药应该就是苦的。良药苦口。</span></p><p><span class="heimu">人のお宅へ伺う時は、電話をしてからいくものだ。</span>到别人家拜访的时候，就应该先打电话。</p><p>（2）意味：表示感叹</p><p>例文：</p><p>時間の経つは速いものだ。<span class="heimu">时间过得真快啊！</span></p><p><span class="heimu">すごいものだ。</span>真厉害啊！</p><p>（3）意味：表示强烈的愿望，「真想」</p><p>接続：～たいものだ</p><p>例文：</p><p>子供の頃から、大きくなったら宇宙旅行をしたいものだと思っていた。<span class="heimu">小孩子的时候，想着长大之后去宇宙旅行啊！</span></p><p><span class="heimu">早く国へ帰って家族に会いたいものだ。</span>真想早点回国跟家人见面啊！</p><p>（4）意味：表回忆，「总是」</p><p>接続：～たものだ</p><p>例文：</p><p>おばあさんは昔よくこう言ったものです。<span class="heimu">奶奶过去经常这样说。</span></p><p><span class="heimu">昔はよくあの公園へ散歩に行ったものだ。</span>过去经常在那个公园散步。</p><h3 id="9-～ものではない"><a href="#9-～ものではない" class="headerlink" title="9. ～ものではない"></a>9. ～ものではない</h3><p>接続：連体形</p><p>意味：不该（违反常识）</p><p>例文：</p><p>人の悪口をいうもんじゃない。<span class="heimu">我们不该说别人的坏话。</span></p><p><span class="heimu">先生に対してそんなことを言うものではない。</span>不要对老师说那种话。</p><h3 id="10-～というものだ"><a href="#10-～というものだ" class="headerlink" title="10. ～というものだ"></a>10. ～というものだ</h3><p>接続：用言辞書型、体言</p><p>意味：「才真是」，表肯定强调</p><p>例文：</p><p>自分のことだけでなく、他人のことも考えてやることのできる人、それが大人というものです。<span class="heimu">不仅是自己的事情，能够考虑其他人做的事情的人，才真的是一个大人了。</span></p><p>てやる&#x3D;てあげる</p><p><span class="heimu">成績のいい学生にいろいろチャンス、不公平というものだ。</span>只给成绩好的学生各种机会，就是不公平。</p><h3 id="11-～というものではない"><a href="#11-～というものではない" class="headerlink" title="11. ～というものではない"></a>11. ～というものではない</h3><p>接続：用言辞書型、体言</p><p>意味：并不是</p><p>例文：</p><p>言葉の勉強は、文法がわかればいいというものではない。<span class="heimu">学习语言并不是学习文法就够了</span></p><p><span class="heimu">お金があれば、何でも買えるというものではない。</span>有钱并不是什么都能买到。</p><h3 id="12-～ものか"><a href="#12-～ものか" class="headerlink" title="12. ～ものか"></a>12. ～ものか</h3><p>PK：ものの（虽然）・ものだ・ものを</p><p>接続：用言辞書型</p><p>意味：表强烈否定，「怎么可能」</p><p>例文：</p><p>あんなまずい店には二度といくものか。<span class="heimu">那种难吃的店怎么能去吃第二次？</span></p><p><span class="heimu">あんなひとは恋人ができるものか。</span>那种人怎么会有对象？</p><h3 id="13-～ものがある"><a href="#13-～ものがある" class="headerlink" title="13. ～ものがある"></a>13. ～ものがある</h3><p>接続：連体形</p><p>意味：确实是（有这样的特性）</p><p>例文：</p><p>昨日見た映画はとても感動するものがあります。<span class="heimu">昨天看的电影确实很感动啊。</span></p><p><span class="heimu">さすがに大作家で、どの作品もすばらしいものがある。</span>不愧是大作家，每部作品都很出色。</p><h3 id="14-～べきだ"><a href="#14-～べきだ" class="headerlink" title="14. ～べきだ"></a>14. ～べきだ</h3><p>接続：用言辞書型、する＋べき（だ）&#x3D;すべき（だ）</p><p>意味：应该（说话人的主张建议）</p><p>例文：&#x3D;&#x3D;やるべきこと&#x3D;&#x3D;</p><p>学生はまず勉強すべきだ。<span class="heimu">学生应该好好学习。</span></p><p><span class="heimu">親に対して、こんな失礼なことを言うべきではない。</span>不能对父母说这种无礼的话。</p><h3 id="15-～ことだ"><a href="#15-～ことだ" class="headerlink" title="15. ～ことだ"></a>15. ～ことだ</h3><p>接続：連体形（可以省略だ）</p><p>意味：应该（劝告，要求）</p><p>例文：</p><p>合格したければ、よく勉強することだ。<span class="heimu">如果想合格，就要好好学习。</span></p><p><span class="heimu">上手になりたければ、しかり練習することだ。</span>想变得出色的话，就要认真练习了。</p><h3 id="16-～ことに"><a href="#16-～ことに" class="headerlink" title="16. ～ことに"></a>16. ～ことに</h3><p>接続：形容詞・形容詞連体形、動詞た形</p><p>意味：令人…的是</p><p>例文：</p><p>困ったことに、あの人の名前がどうしても思い出せなかった。<span class="heimu">无论如何都想不起来那个人的名字了。</span></p><p><span class="heimu">不思議なことに、会社をやめたら、よく眠れるようになった。</span>令人不可思议的是，辞职后睡眠变好了。</p><h3 id="17-～ことはない"><a href="#17-～ことはない" class="headerlink" title="17. ～ことはない"></a>17. ～ことはない</h3><p>接続：連体形</p><p>意味：不必</p><p>例文：</p><p>何も心配することはありません。<span class="heimu">什么也不必担心。</span></p><p><span class="heimu">そのぐらいことで怒ることはないでしょう。</span>什么程度的事情也不必发火呀！（那么点小事情也不必发火呀！）</p><h3 id="18-～ほど～ない"><a href="#18-～ほど～ない" class="headerlink" title="18. ～ほど～ない"></a>18. ～ほど～ない</h3><p>接続：連体形、体言</p><p>意味：没那么…</p><p>例文：&#x3D;&#x3D;AほどＢない&#x3D;&#x3D;   &#x3D;&#x3D;没A那么B&#x3D;&#x3D;</p><p>今年の夏は暑いが、去年ほどではない。<span class="heimu">今年的夏天好热，没去年那么热。</span></p><p><span class="heimu">想像したほどおもしろくない。</span>没有想象中有趣。</p><h3 id="19-～ほど～はない"><a href="#19-～ほど～はない" class="headerlink" title="19. ～ほど～はない"></a>19. ～ほど～はない</h3><p>接続：体言</p><p>意味：没有比…更…</p><p>例文：</p><p>健康ほど大切なものはない。<span class="heimu">没有比健康更重要的了。</span></p><p><span class="heimu">彼女ほど綺麗な人はいない。</span>没有比她更漂亮的人了。</p><h3 id="20-～と見える"><a href="#20-～と見える" class="headerlink" title="20. ～と見える"></a>20. ～と見える</h3><p>接続：用言辞書型、体言</p><p>意味：可见，看来</p><p>例文：</p><p>彼は赤い顔をしていて、相当怒っていると見える。<span class="heimu">他的脸变得红起来了，看起来像是非常生气了。</span></p><p><span class="heimu">雨が降ったと見える。</span>看得出来下雨了。</p><h3 id="21-～にすぎない"><a href="#21-～にすぎない" class="headerlink" title="21. ～にすぎない"></a>21. ～にすぎない</h3><p>（重要）</p><p>接続：用言辞書型、体言</p><p>意味：只不过 &#x3D;&#x3D;强调程度低&#x3D;&#x3D;</p><p>例文：</p><p>収入は二万円にすぎない。<span class="heimu">收入只不过就两万日元而已。</span></p><p><span class="heimu">ピアノは趣味として練習しているにすぎない。</span>只不过在作为兴趣练习钢琴。</p><h3 id="22-～にほかならない"><a href="#22-～にほかならない" class="headerlink" title="22. ～にほかならない"></a>22. ～にほかならない</h3><p>含义&#x3D;&#x3D;ほかない</p><p>ＰＳ：&#x3D;&#x3D;～（より）ほかはない&#x3D;&#x3D; &#x3D;&#x3D;只好&#x3D;&#x3D;</p><p>接続：体言</p><p>意味：正是，不外乎</p><p>例文：</p><p>彼に成功をもたらしたものは、今までの努力にほかならない。<span class="heimu">为他带来成功的，正是迄今为止的努力。</span><br><span class="heimu">彼が子供に厳しいのは、子供を深く愛しているにほかならない。</span>他对孩子严厉，正是因为他深深地爱着孩子。</p><h3 id="23-～でなくてなんだろう"><a href="#23-～でなくてなんだろう" class="headerlink" title="23. ～でなくてなんだろう"></a>23. ～でなくてなんだろう</h3><p>接続：体言</p><p>意味：不是…又是什么呢？</p><p>例文：</p><p>これが愛でなくてなんだろう。<span class="heimu">这不是爱又是什么呢。</span></p><p><span class="heimu">これは命ではなんだろう。</span>这不是命又是什么呢。</p><h3 id="24-～に相違ない"><a href="#24-～に相違ない" class="headerlink" title="24. ～に相違ない"></a>24. ～に相違ない</h3><p>接続：用言辞書型、体言</p><p>意味：一定（书面语）</p><p>例文：</p><p>私が見たのはこの人に相違ありません。<span class="heimu">我一定要见到那个人。</span></p><h3 id="25-～に決まっている"><a href="#25-～に決まっている" class="headerlink" title="25. ～に決まっている"></a>25. ～に決まっている</h3><p>接続：用言辞書型、体言</p><p>意味：一定（语气更强）</p><p>例文：</p><p>あの人のいうことは噓に決まっている。<span class="heimu">他说的话肯定是骗人的。</span></p><h3 id="26-～に違いない"><a href="#26-～に違いない" class="headerlink" title="26. ～に違いない"></a>26. ～に違いない</h3><p>接続：用言辞書型、体言</p><p>意味：一定（语气略弱且主观）</p><p>例文：</p><p>あの男は人の話になんでも「はいはい」と言っている。日本人に違いない。<span class="heimu">那个男人对别人的话什么都说“是是”。一定是日本人。</span></p><p>&#x3D;&#x3D;PS：24～26意思相近且考得多&#x3D;&#x3D;</p><h3 id="27-～のではない（だろか）か"><a href="#27-～のではない（だろか）か" class="headerlink" title="27. ～のではない（だろか）か"></a>27. ～のではない（だろか）か</h3><p>&#x3D;&#x3D;否定+疑问（表肯定）&#x3D;&#x3D;</p><p>接続：連体形</p><p>意味：…吧（委婉语气）</p><p>例文：</p><p>いったん失敗をしたら、また失敗をするのではないかと考えになる。<span class="heimu">一旦失败了，就会担心说会不会再失败。</span></p><p><span class="heimu">田中さんは昨日来たかな？ 来たんじゃないかと思うけど。</span>昨晚田中来了吗？我是觉得来了的。</p><h2 id="第二部分：時間"><a href="#第二部分：時間" class="headerlink" title="第二部分：時間"></a>第二部分：時間</h2><h3 id="1-～ところだ"><a href="#1-～ところだ" class="headerlink" title="1. ～ところだ"></a>1. ～ところだ</h3><p>接続：動詞辞書型</p><p>意味：正好要… 日语没有将来时，这里全部都用原型。</p><p>例文：</p><p>いま行くところだ。<span class="heimu">现在就要走了。</span></p><p><span class="heimu">これから食事にするところだ。</span>现在就要开饭。</p><h3 id="2-～（ている）ところだ"><a href="#2-～（ている）ところだ" class="headerlink" title="2. ～（ている）ところだ"></a>2. ～（ている）ところだ</h3><p>接続：て型</p><p>意味：正在…</p><p>例文：</p><p>今読んでいるところだ。<span class="heimu">现在正在读呢。</span></p><p><span class="heimu">娘は餃子を作っているところだ。</span>女儿正在做饺子。</p><h3 id="3-～（た）ところ"><a href="#3-～（た）ところ" class="headerlink" title="3. ～（た）ところ"></a>3. ～（た）ところ</h3><p>表示强调动作、事实上的刚刚</p><p>&#x3D;&#x3D;～たばかり（区别：心理上认为的刚刚）</p><p>接続：た型</p><p>意味：（1）刚刚（2）顺接（对应于转折、让步），自然而然的过渡</p><p> 例文：</p><p>今帰ってきたところです。<span class="heimu">现在刚回来。</span></p><p><span class="heimu">おわったところです。</span>现在刚结束。</p><h3 id="4-～ところに"><a href="#4-～ところに" class="headerlink" title="4. ～ところに"></a>4. ～ところに</h3><p>接続：連体形</p><p>意味：正要…时，…（在做什么事的时候，被打断了）</p><p>例文：</p><p>新聞を読もうとしたところに、電話がかかってきた。<span class="heimu">我正要读新闻的时候，电话来了。</span></p><p>もうとした：た的「将来时」用法。</p><p><span class="heimu">私が出かけるところに、彼が来た。</span>我正要出门的时候，他来了。</p><h3 id="5-～ところへ"><a href="#5-～ところへ" class="headerlink" title="5. ～ところへ"></a>5. ～ところへ</h3><p>接続：ている型・連体形</p><p>意味：正要…时，…（被打断）</p><p>PS：4、5（～ところに、～ところへ）意思一致。</p><p>例文：</p><p>どうしたらいいかと迷っているところへ、彼がやってきました。<span class="heimu">正当我不知道要怎么做的时候，他来了。</span></p><p><span class="heimu">出かけようとしているところへ、友達が来た。</span>正当我要出门的时候，朋友们来了。</p><h3 id="6-～ところを"><a href="#6-～ところを" class="headerlink" title="6. ～ところを"></a>6. ～ところを</h3><p>（1）接続：連体形</p><p>意味：正要…时，…（表示不利的情况）</p><p>例文：</p><p>授業でスマホを使っているところを先生に見られてしまった。<span class="heimu">上课的时候使用手机被老师发现了。</span></p><p><span class="heimu">こっそりお酒を飲んでいたところを、彼女に見つかった。</span>正在偷偷喝酒的时候被她发现了。</p><p>（2）接続：連体形、名詞＋の</p><p>意味：在…时（表恭敬）</p><p>例文：</p><p>お忙しいところを邪魔します。<span class="heimu">在您百忙之中。</span></p><p><span class="heimu">お休みのところを、わざわざおいでくださいまして、ありがとうございました。</span>您休息的时候还特意来一趟，非常感谢。</p><h3 id="7-～最中"><a href="#7-～最中" class="headerlink" title="7. ～最中"></a>7. ～最中</h3><p>接続：連体形、名詞＋の</p><p>意味：正在…的时候（鼎盛期）</p><p>例文：</p><p>今は暑い最中だ。<span class="heimu">现在是最热的时候。</span></p><p><span class="heimu">相談している最中だ。</span>现在正在商量。</p><h3 id="8-～たびに"><a href="#8-～たびに" class="headerlink" title="8. ～たびに"></a>8. ～たびに</h3><p>接続：連体形、名詞＋の</p><p>意味：每当、每次</p><p>例文：</p><p>この写真を見るたびに、大学時代を思い出す。<span class="heimu">每当看到这张照片，就会想起大学时光。</span></p><p><span class="heimu">あの人は來るたびに、文句を言う。</span>那个人每次来都要抱怨。</p><h3 id="9-～ついでに"><a href="#9-～ついでに" class="headerlink" title="9. ～ついでに"></a>9. ～ついでに</h3><p>接続：連体形、名詞＋の</p><p>意味：…的时候，顺便…</p><p>一般来说会有两件事情，ついでに之前，相连的事件不是「顺便做的事情」而是决定了发生的时间节点。ついでに后面接入的才是「顺便」的意思。</p><p>例文：</p><p>散歩のついでに、買い物をしてきた。<span class="heimu">散步的时候，顺便去买点东西。</span></p><p><span class="heimu">銀行に行くついでに、手紙を出す。</span>去银行的时候，顺便寄出了一封信。</p><h3 id="10-～うちに"><a href="#10-～うちに" class="headerlink" title="10. ～うちに"></a>10. ～うちに</h3><p>（1）接続：連体形、名詞＋の</p><p>意味：趁着（不用于未来）</p><p>例文：</p><p>温かいうちに食べてください。<span class="heimu">趁着东西温暖的时候赶紧吃了。</span></p><p><span class="heimu">若いうちにしっかり勉強しなさい。</span>趁着年轻的时候好好学习。</p><p>（2）接続：連体形、名詞＋の</p><p>意味：在…的过程中（发生自然而然的变化）</p><p>与中に（なかに）的区别是：中に表示「结果」，而うちに表示过程。都能翻译成…中。</p><p>例文：</p><p>話しているうちに外は暗くなりました。<span class="heimu">在说话的时候外面天暗下来了。</span></p><p><span class="heimu">本を読んでいるうちに、眠くなった。</span>看着看着书睡着了。</p><h3 id="11-～か～ないかのうちに"><a href="#11-～か～ないかのうちに" class="headerlink" title="11. ～か～ないかのうちに"></a>11. ～か～ないかのうちに</h3><p>接続：動詞辞書型</p><p>意味：刚一…就（要完未完之时）</p><p>例文：</p><p>一つの仕事が終わるか終わらないかのうちに、次の仕事がきた。<span class="heimu">一件工作刚做完的时候，下一件工作就来了。</span></p><p><span class="heimu">終わるか終わらないかのうちに、雨が降り出した。</span>比赛刚一结束就下起了雨。</p><h3 id="12-と思うと"><a href="#12-と思うと" class="headerlink" title="12. と思うと"></a>12. と思うと</h3><p>～かと思うと・～かと思うったら</p><p>（1）接続：た型</p><p>意味：一…就（出乎意料）</p><p>例文：</p><p>雨が降ったかと思うと、すぐ止んだ。<span class="heimu">雨刚一下，就停止了。</span></p><p><span class="heimu">花は咲いたと思うと、もう散ってしまた。</span>花刚一开，就凋谢了。</p><p>（2）接続：連体形、名詞</p><p>意味：原以为…（出乎意料）</p><p>例文：</p><p>彼はもう北京へ行ったかと思ったら、まだいかないでいた。<span class="heimu">原以为他也去北京了，没想到他还没去。</span></p><p><span class="heimu">京都は静かなところかと思ったら、東京と同じだ。</span>原来以为京都很安静，没想到和东京一样。</p><h3 id="13-～た途端（に）"><a href="#13-～た途端（に）" class="headerlink" title="13. ～た途端（に）"></a>13. ～た途端（に）</h3><p>接続：た型</p><p>意味：一…就</p><p>例文：</p><p>部屋に入った途端、電話が鳴りました。<span class="heimu">一进入房间，电话声就响起来了。</span></p><p><span class="heimu">教室に着いた途端、忘れ物にきづいた。</span>一到教室的时候，就发现自己忘带东西了。</p><h3 id="14-～うえで"><a href="#14-～うえで" class="headerlink" title="14. ～うえで"></a>14. ～うえで</h3><p>&#x3D;&#x3D;上で</p><p>接続：た型、名詞＋の</p><p>意味：…之后 &#x3D;&#x3D; …基础上</p><p>例文：</p><p>両親と話し合った上で決める。<span class="heimu">结合父母的话，在此基础上考虑。</span></p><p><span class="heimu">調査した上で、レポートを書き始めた。</span>取决于调查结果，开始写报告。</p><h3 id="15-～次第"><a href="#15-～次第" class="headerlink" title="15. ～次第"></a>15. ～次第</h3><p>（1）接続：&#x3D;&#x3D;ます型去ます&#x3D;&#x3D;</p><p>意味：一…就 &#x3D;&#x3D;强调将来&#x3D;&#x3D;</p><p>例文：</p><p>スケジュールを決まり次第、すぐ連絡いたします。<span class="heimu">我一决定这个日程表，就立刻联系你。</span></p><p><span class="heimu">手紙が届き次第、すぐに来てください。</span>收到信之后，就请赶紧过来。</p><p>（2）接続：体言</p><p>意味：取决于…</p><p>例文：</p><p>天気次第だ。<span class="heimu">取决于天气。</span></p><p><span class="heimu">できるかどうかはきみの努力次第だ。</span>是否能做，取决于你的努力。</p><h3 id="16-～て以来"><a href="#16-～て以来" class="headerlink" title="16. ～て以来"></a>16. ～て以来</h3><p>接続：て型</p><p>意味：自…以来（以前项为起点一直持续）</p><p>例文：</p><p>別れて以来、五年も経ってしまった。<span class="heimu">分别以来，都已经过了五年了。</span></p><p><span class="heimu">入学して以来、一度も休んだことはない。</span>入学以后一次都没请过假。</p><h3 id="17-～てはじめて"><a href="#17-～てはじめて" class="headerlink" title="17. ～てはじめて"></a>17. ～てはじめて</h3><p>（重要）</p><p>接続：て型</p><p>意味：…以后，才（前项是后项的条件）隐含了一个变化的意义。</p><p>例文：</p><p>別れてはじめて、君のありがたみがわかる。<span class="heimu">自从分开之后，才知道你的可贵。</span></p><p><span class="heimu">病気になってはいじめて、体が大切であることを知った。</span>生病之后，才知道健康的可贵。</p><h3 id="18-～にあたって・～にあたり"><a href="#18-～にあたって・～にあたり" class="headerlink" title="18. ～にあたって・～にあたり"></a>18. ～にあたって・～にあたり</h3><p>接続：動詞辞書型、名詞</p><p>意味：值此之际（书面）</p><p>例文：</p><p>新年にあたり、心からの祝いを表します。<span class="heimu">值此新年，表达发自内心的祝福。</span></p><p><span class="heimu">卒業にあたって、先生は私たちにいろいろ話してくれた。</span>毕业的时候，老师向我们说了很多。</p><h3 id="19-～際"><a href="#19-～際" class="headerlink" title="19. ～際"></a>19. ～際</h3><p>接続：連体形、名詞＋の</p><p>意味：…的时候</p><p>例文：</p><p>ご使用の際に、説明書よく読んでください。<span class="heimu">使用的时候，请读说明书。</span></p><p><span class="heimu">会った際に渡します。</span>见面的时候交给你。</p><h3 id="20-～に際し、に際して"><a href="#20-～に際し、に際して" class="headerlink" title="20. ～に際し、に際して"></a>20. ～に際し、に際して</h3><p>接続：連体形、名詞</p><p>意味：当…之际（直面）</p><p>例文：</p><p>卒業に際して、先生に心からお礼を申し上げます。<span class="heimu">毕业的时候，对老师发自内心的表示感谢。</span></p><p><span class="heimu">出発に際して、考えを変えました。</span>临出发前改变了自己的想法。</p><h3 id="21-きっかけ、契機"><a href="#21-きっかけ、契機" class="headerlink" title="21. きっかけ、契機"></a>21. きっかけ、契機</h3><p>～をきっかけにして・～を契機として・～を機に</p><p>機、契機（けいき）、きっかけ都有中文中「契机」的意思。</p><p>接続：体言</p><p>意味：以…为契机，借…机</p><p>例文：</p><p>あの事件をきっかけに戦争が始まった。<span class="heimu">借着那件事件，战争开始了。</span></p><p><span class="heimu">このチャンスを契機として、彼と知り合った。</span>借此机会认识了他。</p><h2 id="第三部分：逆接"><a href="#第三部分：逆接" class="headerlink" title="第三部分：逆接"></a>第三部分：逆接</h2><p>什么是逆接：</p><p>顺接：て、たら等表示「前一件事情结束，后一件事情顺其自然的开始」。</p><p>逆接则刚好相反。比如说「转折」：か，此时后面一个句子表达的意思和前一个句子完全不一样。</p><p>通过逆接「关键词」，可以有效帮我们猜测出前后句子的含义。</p><h3 id="1-～といっても"><a href="#1-～といっても" class="headerlink" title="1. ～といっても"></a>1. ～といっても</h3><p>接続：普通形</p><p>意味：虽说</p><p>例文：</p><p>安いといっても、10万円はかかるでしょう。<span class="heimu">虽然说很便宜，但是还是花了10万日元啊。</span></p><p><span class="heimu">成績がよくなったといっても、読解の成績だけだ。</span>虽然说成绩提高了，但也只是阅读成绩。</p><h3 id="2-～からといって"><a href="#2-～からといって" class="headerlink" title="2. ～からといって"></a>2. ～からといって</h3><p>接続：連体形</p><p>意味：虽说（后项和とは限らない等否定词呼应）</p><p>例文：</p><p>とは限らない：未必</p><p>先生だからといって、なんでも知っているとは限らない。<span class="heimu">虽然说是老师，但是知道的知识还是有限的。（未必什么都知道）</span></p><p><span class="heimu">お酒はあまり飲まないからといって、嫌いだというわけではない。</span>虽然说不怎么喝酒，但也并不是讨厌。</p><h3 id="3-～ながら"><a href="#3-～ながら" class="headerlink" title="3. ～ながら"></a>3. ～ながら</h3><p>（1）一边…一边（2）虽然但是（3）n+ながら</p><p>接続：ます型去ます</p><p>意味：虽然…但是…</p><p>例文：</p><p>やるやると言いながら、結局何もしない。<span class="heimu">虽然说着要做，最后却也什么都没做。</span></p><p>なかなか：轻易、颇，很，非常相当。</p><p><span class="heimu">あの人は小さいながら、なかなか力がある。</span>那个人虽然身材瘦小，但也却很有力气。</p><h3 id="4-～つつ（も）"><a href="#4-～つつ（も）" class="headerlink" title="4. ～つつ（も）"></a>4. ～つつ（も）</h3><p>PS：3和4，意思用法一致。</p><p>接続：ます型去ます</p><p>意味：虽然…但是…</p><p>例文：</p><p>そう言いつつも、彼女は決して行かないのだ。<span class="heimu">虽然这样说了，但是她却决定不去了。</span></p><p><span class="heimu">タバコをやめようとおもいつつ、いまだに成功していない。</span>虽然想着早点戒烟，但到现在也没有成功。</p><h3 id="5-～ものの"><a href="#5-～ものの" class="headerlink" title="5. ～ものの"></a>5. ～ものの</h3><p>接続：連体形</p><p>意味：虽然…但是…（消极）</p><p>例文：</p><p>大学は出たものの、就職先が見つからない。<span class="heimu">虽然说上了大学，但是也找不到工作。</span></p><p><span class="heimu">日本に来たものの、日本語が分からなくて、困っている。</span>尽管来日本了，但是还是不懂日语，感觉很困扰。</p><p>からには：既然。</p><h3 id="6-～にもかかわらず"><a href="#6-～にもかかわらず" class="headerlink" title="6. ～にもかかわらず"></a>6. ～にもかかわらず</h3><p>接続：動詞連体形、形容動詞＋てある・形容動詞＋なの</p><p>意味：尽管</p><p>例文：</p><p>周りは静かなのにもかかわらず、全然眠れなかった。<span class="heimu">尽管周围很安静，但还是完全睡不着。</span></p><p><span class="heimu">大雨にもかかわらず、試合は続いている。</span>尽管下大雨，比赛还是持续进行。</p><h3 id="7-～たところが"><a href="#7-～たところが" class="headerlink" title="7. ～たところが"></a>7. ～たところが</h3><p>（重要）</p><p>接続：た型</p><p>意味：可是、但是（表示意外的转折）</p><p>例文：</p><p>ブロポーズに行ったところが、彼女は留守だった。<span class="heimu">去求婚，但是她不在。</span></p><p><span class="heimu">財布をあけたところが、お金は入っていなかった。</span>打开了钱包，但是没有钱。</p><h3 id="8-～たところで"><a href="#8-～たところで" class="headerlink" title="8. ～たところで"></a>8. ～たところで</h3><p>接続：た型</p><p>意味：即使…也（不）&#x2F;（不过）</p><p>例文：</p><p>今更＝今までに</p><p>今更謝ったところで、許さないだろう。<span class="heimu">即使是现在道歉，也不会被原谅了吧。</span></p><p>前面经常加表示「程度」的副词，增强「即使」的意思。例如：たとえ、どんなに、いくら、どれだけ</p><p><span class="heimu">いくら待ったところで、彼は来ないでしょう。</span>即便怎么等，他也不会来了。</p><h3 id="9-～くせに"><a href="#9-～くせに" class="headerlink" title="9. ～くせに"></a>9. ～くせに</h3><p>のに</p><p>需要前后为同一个主语。</p><p>接続：連体形、名詞＋の</p><p>意味：明明…却…（抱怨语气类似のに）</p><p>例文：</p><p>自分で何もやらないくせに、人のやり方に文句ばかり言う。<span class="heimu">自己明明什么都没有干，但是却抱怨其他人做的不好。</span></p><p>装作：ふりをする</p><p><span class="heimu">知っているくせに、知らないふりをする。</span>明明什么都知道，却装作不知道。</p><h3 id="10-～わりに（は）"><a href="#10-～わりに（は）" class="headerlink" title="10. ～わりに（は）"></a>10. ～わりに（は）</h3><p>（重要）</p><p>&#x3D;割に</p><p>接続：連体形、名詞＋の</p><p>意味：前后项相比不相匹配，「但…」</p><p>例文：</p><p>日本は狭いわりには、人口が多い。<span class="heimu">日本的领土很小，但是人却很多。</span></p><p><span class="heimu">たくさん食べたわりには、太らない。</span>吃了很多，但是却不饱。</p><h3 id="11-～にしては"><a href="#11-～にしては" class="headerlink" title="11. ～にしては"></a>11. ～にしては</h3><p>接続：連体形、体言</p><p>意味：作为…而言，就…来说（与前项标准不太匹配）</p><p>例句：</p><p>うまい：除开「美味的；可口的」，还有「进展顺利的；幸运的」的含义。</p><p>彼は日本に来てただ半年にしては、日本語が非常にうまいです。<span class="heimu">他作为「来日本就半年的一个人」，就这个而言日语已经非常好了「进展很顺利」。</span></p><p><span class="heimu">博士にしては、あまりものが知らない人だ。</span>作为博士而言，知道的太少了。</p><h3 id="12-～反面・半面"><a href="#12-～反面・半面" class="headerlink" title="12. ～反面・半面"></a>12. ～反面・半面</h3><p>接続：連体形</p><p>意味：叙述同一事物两个不同的侧面</p><p>例文：</p><p>輸送に便利な反面、時間がかかる。<span class="heimu">输送便利的方面，花费了（过多的）时间。</span></p><p><span class="heimu">あの先生は学生に厳しい反面、やさしいところもある。</span>那个老师在学生面前严厉的反面，在某些地方也非常温柔。</p><h2 id="随机二次元（可能含NSFW）"><a href="#随机二次元（可能含NSFW）" class="headerlink" title="随机二次元（可能含NSFW）?"></a>随机二次元（可能含NSFW）?</h2><div align="center"><img src="../../../../loading2.svg" data-original="https://moe.starfishdl.site/api/setu/v1"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="日语学习" scheme="https://blog.pengdonglai.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="日本語" scheme="https://blog.pengdonglai.com/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
    <category term="语法" scheme="https://blog.pengdonglai.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>N2 日语部分语法点归总（2）</title>
    <link href="https://blog.pengdonglai.com/2024/09/17/japanese-grammar-4/"/>
    <id>https://blog.pengdonglai.com/2024/09/17/japanese-grammar-4/</id>
    <published>2024-09-17T02:35:41.000Z</published>
    <updated>2024-10-06T12:04:45.766Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><button class="btn-small waves-effect waves-light" id="toggleButton">变更测试模式</button></p><script>  let usingHeimu = true;  document.getElementById('toggleButton').addEventListener('click', () => {    usingHeimu = !usingHeimu;    const spans = document.querySelectorAll('span.heimu, span.no-heimu');    spans.forEach(span => {      if (usingHeimu) {        span.classList.remove('no-heimu');        span.classList.add('heimu');      } else {        span.classList.remove('heimu');        span.classList.add('no-heimu');      }    });  });</script><blockquote><p>本文来自于 bilibili UP 主 <a href="https://space.bilibili.com/548121510">当当_suzu</a> 的 <a href="https://www.bilibili.com/video/BV1yY411b7zY">N2 系列视频</a>，这套视频是我见过 N2 系列语法视频中讲的最全的版本，如果有可能大家请尽可能支持原作者！</p><p>本文内容来自于该系列视频讲义。如有侵犯著作权的行为请联系我及时删除。</p></blockquote><h2 id="第四部分：状態"><a href="#第四部分：状態" class="headerlink" title="第四部分：状態"></a>第四部分：状態</h2><h3 id="1-～てならない"><a href="#1-～てならない" class="headerlink" title="1. ～てならない"></a>1. ～てならない</h3><p>（意义差距大）てはならない &#x3D;&#x3D; 禁止 &#x3D;&#x3D;</p><p>接続：て型</p><p>意味：…得不得了</p><p>例文：</p><p>お腹が痛くてならない。<span class="heimu">肚子非常痛。</span></p><p><span class="heimu">両親に会いたくてならない。</span>非常想见父母。</p><h3 id="2-～てたまらない"><a href="#2-～てたまらない" class="headerlink" title="2. ～てたまらない"></a>2. ～てたまらない</h3><p>接続：て型</p><p>意味：…得不得了</p><p>例文：</p><p>一人で日本に来て、今は寂しくてたまらない。<span class="heimu">一个人来到日本，现在非常寂寞。</span></p><p><span class="heimu">試合に勝って、嬉しくてたまらない。</span>比赛胜利了，开心的不得了。</p><h3 id="3-～てしかたがない・てしょうがない"><a href="#3-～てしかたがない・てしょうがない" class="headerlink" title="3. ～てしかたがない・てしょうがない"></a>3. ～てしかたがない・てしょうがない</h3><p>接続：て型</p><p>意味：…得不得了</p><p>例文：</p><p>北京の夏は暑くてしかたがない。<span class="heimu">北京的夏天热的不得了。</span></p><p><span class="heimu">私の家は学校に遠く、不便でしかたがない。</span>我家到学校很远，非常不方便。</p><p>PS：1～3意思一致，用法相近</p><p>しかたがない（仕方がない）&#x3D;&#x3D; しようがない（仕様がない）均为「没办法」的含义。</p><p>动词的ます型去ます+よう，表示「方法」。しようがない可以这么记忆。</p><h3 id="4-～てはいられない"><a href="#4-～てはいられない" class="headerlink" title="4. ～てはいられない"></a>4. ～てはいられない</h3><p>接続：て型</p><p>可以这么记忆：ている的可能型：ていられる⇒ていられない</p><p>意味：不能（暗示要做另外一件事）</p><p>例文：</p><p>子供の不行儀に対して、黙ってはいられない。<span class="heimu">对小孩子不礼貌的行为，不能沉默。</span></p><p><span class="heimu">もうすぐＮ2試験だから、のんびり遊んではいられない。</span>马上就要N2考试了，不能自由自在的玩耍了。</p><p>のんびり：无忧无虑，自由自在。</p><h3 id="5-～てばかりいる"><a href="#5-～てばかりいる" class="headerlink" title="5. ～てばかりいる"></a>5. ～てばかりいる</h3><p>接続：て型</p><p>ばかり：一味地… 这个相当于ている中间插入ばかり。</p><p>意味：一个劲儿的做…</p><p>例文：</p><p>あの人はいつも怒ってばかりいる。<span class="heimu">那个人一个劲的在生气。</span></p><p><span class="heimu">もうすぐＮ2試験だから、遊んでばかりいられない。</span>马上就要N2考试了，不能一个劲的玩耍了。</p><h3 id="6-～ばかりだ"><a href="#6-～ばかりだ" class="headerlink" title="6. ～ばかりだ"></a>6. ～ばかりだ</h3><p>接続：連体形</p><p>意味：光是；不断（消极）；只要</p><p>例文：</p><p>彼女はなにも言わず、泣くばかりだ。<span class="heimu">她什么也不说，就一个劲的哭。</span></p><p>祖母の病状は悪化するばかりだ。<span class="heimu">祖母的病情在不断恶化。</span></p><p>今はただ祈るばかりだ。<span class="heimu">现在只能一个劲的祈祷了。</span></p><p><span class="heimu">ここの景色の美しさをただ褒めるばかりだ。</span>对于这里的景色我只有赞叹了。</p><h3 id="7-～ずにはいられない"><a href="#7-～ずにはいられない" class="headerlink" title="7. ～ずにはいられない"></a>7. ～ずにはいられない</h3><p>接続：ない型</p><p>双重否定：ずに为否定。いられない：不能。表示为不能不。</p><p>&#x3D;&#x3D; ないではいられません</p><p>意味：不能不…（情感油然而生、情不自禁）</p><p>例文：</p><p>この映画を見て、誰も感動せずにはいられないでしょう。<span class="heimu">看完这部电影后，无论是谁都不得不感动吧。</span></p><p><span class="heimu">こんなひどいことをされて、怒らないではいられません。</span>遇到如此过分的事情，怎能不生气。</p><p>怒る：おこる</p><p>する的被动形される再变て形「被做了」翻译成遇到大概。</p><h3 id="8-～一方だ"><a href="#8-～一方だ" class="headerlink" title="8. ～一方だ"></a>8. ～一方だ</h3><p>接続：連体形</p><p>意味：一直，越来越</p><p>例文：</p><p>最近家賃が増える一方だ。<span class="heimu">最近房租一个劲地增长。</span></p><p><span class="heimu">どういうわけか、最近私が太る一方だ。</span>不知道什么原因，最近我一个劲的发胖。</p><h3 id="9-～つもりだ"><a href="#9-～つもりだ" class="headerlink" title="9. ～つもりだ"></a>9. ～つもりだ</h3><p>重要！</p><p>接続：連体形、名詞＋の&#x3D;&#x3D;ている、た接続時&#x3D;&#x3D;&#x3D;&#x3D;翻译为：自以为；就当作&#x3D;&#x3D;</p><p>意味：自以为；就当作，（N4N5）打算</p><p>例文：</p><p>本人はおもしろいつもりだろうが、他の人にはその冗談はわからなかった。<span class="heimu">虽然本人自以为很有趣，但是大家对这个玩笑并不是很理解。</span></p><p>旅行したつもりで、お金を銀行に入れた。<span class="heimu">就当作自己去旅游了，把钱存银行了吧。</span></p><p><span class="heimu">先生になったつもりで、この教科書をもう一度読みなおしなさい。</span>就把自己当老师，把这本教科书重新读一遍吧！</p><p>読み直す：よむおす，重读。</p><h3 id="10-～ようとする"><a href="#10-～ようとする" class="headerlink" title="10. ～ようとする"></a>10. ～ようとする</h3><p>接続：意向形</p><p>意味：打算做将要做</p><p>例文：</p><p>彼女笑顔は忘れようとしても忘れられません。<span class="heimu">当我打算要忘掉她的笑颜的时候却怎么也忘不掉。</span></p><p><span class="heimu">出かけようとしたところに、電話がかかって来た。</span>准备出门的时候，电话响了。</p><h3 id="11-～ながら"><a href="#11-～ながら" class="headerlink" title="11. ～ながら"></a>11. ～ながら</h3><p>接続：ます型去ます；名詞</p><p>意味：一边一边；原封不动</p><p>例文：</p><p>お茶を飲みながら話しましょう。<span class="heimu">一边喝茶一边说话。</span></p><p>皮ながら食べる。<span class="heimu">连着皮一起吃。</span></p><p><span class="heimu">テレビを見ながら、食事をしてはいけない。</span>不要一边吃饭一边看电视。</p><h3 id="12-～つつ"><a href="#12-～つつ" class="headerlink" title="12. ～つつ"></a>12. ～つつ</h3><p>接続：ます型去ます</p><p>意味：一边一边</p><p>例文：</p><p>お酒を飲みつつ、月見をする。<span class="heimu">一边喝酒，一边赏月。</span></p><p><span class="heimu">アルバイトをしつつ、大学に通っている。</span>一边打工一边上大学。</p><h3 id="13-～つつある"><a href="#13-～つつある" class="headerlink" title="13. ～つつある"></a>13. ～つつある</h3><p>接続：ます型去ます</p><p>意义：ている（宏观）</p><p>例文：</p><p>あの都市の様子は変わりつつある。<span class="heimu">那个城市的样子一直在变。</span></p><p><span class="heimu">自然が破壊されたつつある。</span>自然环境一直遭到破坏。</p><h3 id="14-～ば～ほど"><a href="#14-～ば～ほど" class="headerlink" title="14. ～ば～ほど"></a>14. ～ば～ほど</h3><p>接続：ば型～辞書形</p><p>意味：越…越</p><p>例文：</p><p>煮れば煮るほど、柔らかくなる。<span class="heimu">越煮就会变得越柔软。</span></p><p><span class="heimu">外国語は練習すればするほど、うまくなる。</span>外语越练习就会变得越熟练。</p><h3 id="15-～中を"><a href="#15-～中を" class="headerlink" title="15. ～中を"></a>15. ～中を</h3><p>接続：連体形、名詞＋の</p><p>意味：…之中</p><p>例文：</p><p>お忙しい中をよくいらっしゃいました。<span class="heimu">感谢您百忙之中欢迎光临。</span></p><p><span class="heimu">雨の中を帰ってきた。</span>冒着雨归来了。</p><h3 id="16-～きり"><a href="#16-～きり" class="headerlink" title="16. ～きり"></a>16. ～きり</h3><p>重要！</p><p>接続：た型</p><p>意味：…以后（再没做过）&#x3D;&#x3D;还有接续的话，表以后&#x3D;&#x3D;</p><p>例文：</p><p>彼はアメリカへいったきり、帰ってこない。<span class="heimu">他去美国后，就再也没回来了。</span></p><p>作为（语义上的）句尾结束，表再没做过：</p><p>三年前に会ったきりだ。<span class="heimu">三年前见过后再也没见过。</span></p><p><span class="heimu">去年東京に行ったきり、まだ電話をしてくれない。</span>去年去过东京后，还没有来过电话。</p><p>末に：经过…最后，深思熟虑后得出来的结果。</p><h3 id="17-～かのようだ"><a href="#17-～かのようだ" class="headerlink" title="17. ～かのようだ"></a>17. ～かのようだ</h3><p>接続：名詞＋てある、辞書形（形容動詞語幹）</p><p>意味：仿佛…似的</p><p>まるで：简直…好像。和かのようだ结合用的比较多。</p><p>例文：</p><p>深刻な顔をして、まるで世界の終わりがくるかのようだ。<span class="heimu">一脸严肃，仿佛世界末日就要来临。</span></p><p>もてなし：持て成し，接待，宽待的意思。</p><p><span class="heimu">自分の子供が帰ってきたかのようだ、母は友達を親切にもてなしてくれた。</span>仿佛自己的儿子回来一样，母亲亲切的招待了朋友。</p><h3 id="18-～ふりをする"><a href="#18-～ふりをする" class="headerlink" title="18. ～ふりをする"></a>18. ～ふりをする</h3><p>接続：連体形</p><p>意味：装作</p><p>例文：</p><p>寝たふりをしないで、速く起きて。<span class="heimu">别装作睡觉了，快速爬起来！了。</span></p><p><span class="heimu">彼はいつも忙しいそうなふりをしています。</span>他总是装出一副很忙的样子。</p><h3 id="19-～ところだった"><a href="#19-～ところだった" class="headerlink" title="19. ～ところだった"></a>19. ～ところだった</h3><p>重要！</p><p>接続：辞書形</p><p>意味：险些，差点</p><p>もう少しで、もうちょっとで：表示「差一点」的意思，经常在前面加这个作为表示。</p><p>例文：</p><p>トラック： truck 卡车、track 田径运动</p><p>ぶつかる：撞上，正当，赶上，适逢</p><p>もう少しで走ったトラックとぶつかるところだった。<span class="heimu">我差点撞上了一辆行驶的卡车。</span></p><p><span class="heimu">もうちょっとでけがをするところだった。</span>差一点就受伤了。</p><h3 id="20-～ことになっている・～こととなっている"><a href="#20-～ことになっている・～こととなっている" class="headerlink" title="20. ～ことになっている・～こととなっている"></a>20. ～ことになっている・～こととなっている</h3><p>接続：連体形</p><p>意味：规定（客观）</p><p>同：ことにする 表示「决定，主观上的」</p><p>例文：</p><p>両国の首脳会議は来月四日に開くことになっている。<span class="heimu">两国的首脑会议规定在下个月四日召开。</span></p><p><span class="heimu">鈴木さんとの約束では9時までに東京駅に行くことになっている。</span>和铃木先生约定了9点前去东京车站。</p><h3 id="21-～ようになっている"><a href="#21-～ようになっている" class="headerlink" title="21. ～ようになっている"></a>21. ～ようになっている</h3><p>接続：連体形</p><p>意味：对机器？结构进行客观描述。感觉翻译的时候，等同于不需要进行翻译。</p><p>例文：</p><p>ひとりで：自然的</p><p>この人工衛星はひとりでに速度を緩め、軌道を離れて、地上に降下するようになっている。<span class="heimu">这个人工卫星自然的速度降下来，偏离轨道，降落到地上来。</span></p><p><span class="heimu">何か故障があった場合、その機械はひとりでに電源が切れるようになっている。</span>如果出现了什么故障，那个机械会自动切断电源。</p><h2 id="第五部分：原因、結果"><a href="#第五部分：原因、結果" class="headerlink" title="第五部分：原因、結果"></a>第五部分：原因、結果</h2><p>原因有好的，有不好的；结果也有好的，也有不好的。</p><h3 id="1-～おかげて"><a href="#1-～おかげて" class="headerlink" title="1. ～おかげて"></a>1. ～おかげて</h3><p>接続：連体形、名詞＋の</p><p>意味：多亏（积极原因）</p><p>例文：</p><p>あの人のおかげて、私たちは幸せに暮らせるのだ。<span class="heimu">多亏了那个人，我们才能幸福的生活。</span></p><p><span class="heimu">毎日練習したおかげて、上手になりました。</span>多亏了每天练习，进步很快。</p><h3 id="2-～せいで"><a href="#2-～せいで" class="headerlink" title="2. ～せいで"></a>2. ～せいで</h3><p>接続：連体形、名詞＋の</p><p>意味：都怪（消极原因）</p><p>例文：</p><p>あなたのせいで、私は先生に𠮟られました。<span class="heimu">因为你，我被老师批评了。</span></p><p><span class="heimu">雨のせいで、試合は中止になった。</span>因为下雨，比赛中止了。</p><h3 id="3-～せいか"><a href="#3-～せいか" class="headerlink" title="3. ～せいか"></a>3. ～せいか</h3><p>重要！</p><p>接続：連体形、名詞＋の</p><p>意味：也许是因为</p><p>例文：</p><p>熱のせいか、頭がフラフラしている。<span class="heimu">也许是因为发烧，头摇摇晃晃的。</span></p><p><span class="heimu">暑さのせいか、ぜんぜん食欲がない。</span>也许是因为热，完全没有食欲。</p><h3 id="4-～ために"><a href="#4-～ために" class="headerlink" title="4. ～ために"></a>4. ～ために</h3><p>接続：連体形、名詞＋の</p><p>意味：由于，原因</p><p>例文：</p><p>病気のために、学校を休んだ。<span class="heimu">因为生病，向学校请假了。</span></p><p><span class="heimu">無理をして授業に出席したために、風邪がもっと悪くなってしまた。</span>由于勉强出席上课，感冒变得更严重了。</p><h3 id="5-～だけに"><a href="#5-～だけに" class="headerlink" title="5. ～だけに"></a>5. ～だけに</h3><p>接続：連体形、体言</p><p>意味：正因为，结果与原因相匹配（积极，也可消极）</p><p>例文：</p><p>重大な事柄だけに、もう一度検討する必要がある。<span class="heimu">正因为是重大的事情，所以有必要再研究一下。</span></p><p><span class="heimu">頑張っただけに、今回の満点はさぞ嬉しいでしょう。</span>正因为努力了，这次考试满分一定很开心吧。</p><h3 id="6-～だけあって、だけのことはある"><a href="#6-～だけあって、だけのことはある" class="headerlink" title="6. ～だけあって、だけのことはある"></a>6. ～だけあって、だけのことはある</h3><p>接続：連体形、体言</p><p>意味：不愧是，值得（积极）</p><p>例文：</p><p>さうがに彼だけあって、テレビも修理できる。<span class="heimu">不愧是他，还会修电视。</span></p><p><span class="heimu">故宮は世界でも有名なところで、行ってみるだけのことはある。</span>故宫是世界闻名的地方，值得一去。</p><h3 id="7-～ばかりに"><a href="#7-～ばかりに" class="headerlink" title="7. ～ばかりに"></a>7. ～ばかりに</h3><p>接続：連体形</p><p>意味：都是因为…才（消极）</p><p>例文：</p><p>油断したばかりに、事故を起こしてしまった。<span class="heimu">正因为疏忽大意，才引起了事故。</span></p><p>油断：漫不经心，粗心大意</p><p><span class="heimu">学歴がないばかりに、大手会社に入れないのだ。</span>因为没有学历，所以进不了大公司。</p><h3 id="8-～ことから"><a href="#8-～ことから" class="headerlink" title="8. ～ことから"></a>8. ～ことから</h3><p>接続：連体形</p><p>意味：因为（前项是判断依据）</p><p>例文：</p><p>二人の顔が似ていることから、親子ではないかと思った。<span class="heimu">因为两个人长得很像，所以我想应该是父子吧？</span></p><p><span class="heimu">この通りは政府機関が多いことから、官庁街と呼ばれている。</span>这条街因为政府机关多，所以被称为官厅街。</p><h3 id="9-～ところから"><a href="#9-～ところから" class="headerlink" title="9. ～ところから"></a>9. ～ところから</h3><p>接続：連体形</p><p>意味：因为（前项是判断依据）</p><p>例文：</p><p>あまり頭を使いすぎたことから、こんな病気になってしまった。<span class="heimu">由于过度使用脑力，才得了这样的病。</span></p><p><span class="heimu">彼は何でも知っているところから、「百科辞書」というあだ名で呼ばれている。</span>因为他什么都知道，所以被称为「百科词典」。</p><h3 id="10-～ことだから"><a href="#10-～ことだから" class="headerlink" title="10. ～ことだから"></a>10. ～ことだから</h3><p>接続：名詞＋の</p><p>意味：既然是（他）（表达该名词具有的特点）</p><p>例文：</p><p>真面目な田中さんのことだから、きっと試験に合格しますよ。<span class="heimu">既然是认真的田中，考试一定会合格的。</span></p><p><span class="heimu">彼のことだから、どうせ時間通りに来ないだろう。</span>既然是他的话，反正不会按时来的。</p><p>どうせ： 终归，归根到底、反正，横竖</p><p>時間通り（に）：按时，准时</p><h3 id="11-～もの（もん）"><a href="#11-～もの（もん）" class="headerlink" title="11. ～もの（もん）"></a>11. ～もの（もん）</h3><p>接続：だ、です</p><p>整个句子的句尾…</p><p>意味：因为（撒娇抱怨语气）</p><p>例文：</p><p>だって：句中でも、句首なぜなら（何故なら）、句尾という</p><p>なぜなら放在句首，后面接续表示「原因」，通常前面半句表示「之所以」，表原因所产生的结论。</p><p>だって、先生がそうおっしゃたんだもの。<span class="heimu">是因为是老师这么说的呀。</span></p><p><span class="heimu">だって、重いんだもの。</span>所以说太重了嘛。</p><h3 id="12-～ものだから"><a href="#12-～ものだから" class="headerlink" title="12. ～ものだから"></a>12. ～ものだから</h3><p>&#x3D;&#x3D;ものですから</p><p>接続：連体形</p><p>意味：因为（主观强调原因理由）</p><p>经常带有「辩解」的语气。</p><p>例文：</p><p>この小説の主人公が大好きものですから、もう何度も読みました。<span class="heimu">因为很喜欢这部小说的主人公，所以已经看了好几遍了。</span></p><p><span class="heimu">眠い、夕べ遅くまで仕事をしていたものですから。</span>好困啊，因为昨晚工作到很晚。</p><h3 id="13-～につき"><a href="#13-～につき" class="headerlink" title="13. ～につき"></a>13. ～につき</h3><p>接続：体言</p><p>意味：因为（用于书面语，公文等）</p><p>例文：</p><p>工事中につき、立ち入り禁止。<span class="heimu">正在施工，禁止入内。</span></p><p><span class="heimu">大雨につき、今日の試合は中止になった。</span>由于下大雨，今天的比赛中止了。</p><h3 id="14-～以上は"><a href="#14-～以上は" class="headerlink" title="14. ～以上は"></a>14. ～以上は</h3><p>接続：連体形</p><p>意味：既然</p><p>例文：</p><p>諦める：断念，死心。</p><p>お金がない以上、諦めるしかない。<span class="heimu">既然没钱，就只好作罢。</span></p><p><span class="heimu">約束した以上は、守らなければならない。</span>既然约定好了，就不得不守约。</p><h3 id="15-～うえは"><a href="#15-～うえは" class="headerlink" title="15. ～うえは"></a>15. ～うえは</h3><p>上は。由于うえ有其他意思，需要做区分（仅表示うえ读音）：</p><p>上で：1. 在…之后 2. 在什么领域</p><p>上に：1. 加之</p><p>接続：連体形</p><p>意味：既然（语气更重）</p><p>例文：</p><p>引き受ける：对付、承担，负责、保证、照料、继承</p><p>引き受けた上は、全力を尽くさなければいけない。<span class="heimu">既然保证下来了，就不得不全力以赴。</span></p><h3 id="16-～からには、からは"><a href="#16-～からには、からは" class="headerlink" title="16. ～からには、からは"></a>16. ～からには、からは</h3><p>接続：連体形</p><p>意味：既然</p><p>例文：</p><p>試合にでる：参加比赛</p><p>試合にでるからには、勝ってほしい。<span class="heimu">既然要参加比赛，就要赢。</span></p><p>PS：14～16 意思和用法一致</p><h3 id="17-～あまり"><a href="#17-～あまり" class="headerlink" title="17. ～あまり"></a>17. ～あまり</h3><p>N5 语法：あまり…ない：表示不太…</p><p>还有一个表示「多余」的意思。</p><p>接続：連体形、名詞＋の</p><p>意味：由于过于…（前接有感情色彩的词）</p><p>例文：</p><p>心配のあまり、眠れなかった。<span class="heimu">由于过于担心，睡不着。</span></p><p><span class="heimu">働きすぎたあまり、とうとう倒れてしまった。</span>由于过度劳作，终于倒下了。</p><h3 id="18-～あまりの～に、あまりの～で"><a href="#18-～あまりの～に、あまりの～で" class="headerlink" title="18. ～あまりの～に、あまりの～で"></a>18. ～あまりの～に、あまりの～で</h3><p>和上面的区别是，这个放在句首。</p><p>接続：名詞</p><p>意味：由于过于…</p><p>例文：</p><p>あまりの悲しさに、病気になってしまった。<span class="heimu">由于过于悲伤，生病了。</span></p><p><span class="heimu">あまりの人出で、諦めた。</span>由于太多人，所以放弃了。</p><h3 id="19-～あげく"><a href="#19-～あげく" class="headerlink" title="19. ～あげく"></a>19. ～あげく</h3><p>接続：た型、名詞＋の</p><p>意味：…的结果（消极结果）</p><p>例文：</p><p>散々：厉害；严重（程度副词用于加深程度）、狼狈，凄惨，七零八落</p><p>散々迷ったあげく、結局Ｂ大学にした。<span class="heimu">犹豫了很长时间，最后去了B大学。</span></p><p>考えに考えた：思来想去，想来想去。</p><p><span class="heimu">考えに考えたあげく、会社を辞めることにした。</span>想来想去，最后决定辞职了。</p><h3 id="20-～末"><a href="#20-～末" class="headerlink" title="20. ～末"></a>20. ～末</h3><p>接続：た型、名詞＋の</p><p>意味：结果（消极，积极）</p><p>例文：</p><p>相談の末、一緒にやることにした。<span class="heimu">谈完之后，决定要一起做。</span></p><p><span class="heimu">いろいろ考えた末、行くことにした。</span>考虑了很多，最后决定去。</p><h2 id="第六部分：対象、関係"><a href="#第六部分：対象、関係" class="headerlink" title="第六部分：対象、関係"></a>第六部分：対象、関係</h2><h3 id="1-～において"><a href="#1-～において" class="headerlink" title="1. ～において"></a>1. ～において</h3><p>接続：体言</p><p>意味：相当于で</p><p>例文：</p><p>卒業式は学生にセンターにおいて行われます。</p><p>2020年オリンピック大会は東京において、開催されました。</p><h3 id="2-～における＋n"><a href="#2-～における＋n" class="headerlink" title="2. ～における＋ｎ"></a>2. ～における＋ｎ</h3><p>接続：体言</p><p>意味：相当于で、作定语</p><p>例文：</p><p>学校における教育は子どもにとっていかに大切であるか。</p><p>各分野における発展を期待している。</p><h3 id="3-～に関して"><a href="#3-～に関して" class="headerlink" title="3. ～に関して"></a>3. ～に関して</h3><p>接続：体言</p><p>意味：关于…</p><p>例文：</p><p>両方は国際問題に関して意見を交換した。</p><p>教育改革に関して論文を発表した。</p><h3 id="4-～について"><a href="#4-～について" class="headerlink" title="4. ～について"></a>4. ～について</h3><p>接続：体言&#x3D;&#x3D;结尾时+の＋ｎ&#x3D;&#x3D;</p><p>意味：关于…</p><p>例文：</p><p>この問題について詳しく説明していただきたいです。</p><p>田中先生は日本のことについていろいろ話してくれました。</p><h3 id="5-～に対して・に対する"><a href="#5-～に対して・に対する" class="headerlink" title="5. ～に対して・に対する"></a>5. ～に対して・に対する</h3><p>接続：体言</p><p>意味：对于；与…相对</p><p>例文：</p><p>客に対してこのような言葉使いをしてはいけない。</p><p>父は厳しいに対して、母は優しい。</p><p> 学校は教師に対する要求は厳しい。</p><h3 id="6-～に比べて"><a href="#6-～に比べて" class="headerlink" title="6. ～に比べて"></a>6. ～に比べて</h3><p>接続：体言</p><p>意味：与…相比</p><p>例文：</p><p>今年の夏は去年に比べて、少し涼しいようです。</p><h3 id="PS：に対して有两个个主语，に比べて只有一个主语"><a href="#PS：に対して有两个个主语，に比べて只有一个主语" class="headerlink" title="ＰＳ：に対して有两个个主语，に比べて只有一个主语"></a>ＰＳ：に対して有两个个主语，に比べて只有一个主语</h3><h3 id="7-～にとって"><a href="#7-～にとって" class="headerlink" title="7. ～にとって"></a>7. ～にとって</h3><p>接続：体言&#x3D;&#x3D;结尾时+の＋ｎ&#x3D;&#x3D;</p><p>意味：对…来说</p><p>例文：</p><p>これは子どもにとって貴重な経験だ。</p><p>私にとっての第一印象は町の狭いことです。</p><h3 id="8-～によって"><a href="#8-～によって" class="headerlink" title="8. ～によって"></a>8. ～によって</h3><p>接続：体言</p><p>意味：因…而（原因）；表依据；表示施加动作的人</p><p>例文：</p><p>先生によって、教え方が違います。</p><p>成績によって、クラスを分ける。</p><p>この小説は魯迅先生によって書かれたのだ。</p><p>地方によって、風俗習慣を違う。</p><h3 id="9-～によっては"><a href="#9-～によっては" class="headerlink" title="9. ～によっては"></a>9. ～によっては</h3><p>接続：体言</p><p>意味：根据前项也会出现后项的情况，“根据…有时”</p><p>例文：</p><p>場合によっては、スケジュールは変更するかもしれない。</p><p>人によっては、だまされるかもしれない。</p><h3 id="10-～に基づいて"><a href="#10-～に基づいて" class="headerlink" title="10. ～に基づいて"></a>10. ～に基づいて</h3><p>接続：体言</p><p>意味：根据…（在此基础上）</p><p>例文：</p><p>今までの経験に基づいて判断する。</p><p>これは実話に基づいて書かれた小説だ。</p><h3 id="11-～を基にして"><a href="#11-～を基にして" class="headerlink" title="11. ～を基にして"></a>11. ～を基にして</h3><p>接続：体言</p><p>意味：根据…</p><p>例文：</p><p>これまでのデーターを基にして研究を行う。</p><p>このテレビドラマは伝説を基にして作った。</p><h3 id="12-～のもとで・に"><a href="#12-～のもとで・に" class="headerlink" title="12. ～のもとで・に"></a>12. ～のもとで・に</h3><p>接続：体言</p><p>意味：在…下</p><p>例文：</p><p>先生の指導のもとで研究を行う。</p><h3 id="13-～上で"><a href="#13-～上で" class="headerlink" title="13. ～上で"></a>13. ～上で</h3><p>接続：体言＋の、連体形</p><p>意味：在…的前提下；在…方面上；在…之后</p><p>例文：</p><p>双方の合意の上で結婚した。</p><p>ビザの申請をする上で注意しなければならない。</p><p>いろいろ考えた上で、会社をやめることにした。</p><p>父と相談した上で、ご返事をします。</p><h3 id="14-～上"><a href="#14-～上" class="headerlink" title="14. ～上"></a>14. ～上</h3><p>接続：体言</p><p>意味：…上</p><p>例文：</p><p>これは法律上の問題です。</p><h3 id="15-～をめぐって、をめぐる"><a href="#15-～をめぐって、をめぐる" class="headerlink" title="15. ～をめぐって、をめぐる"></a>15. ～をめぐって、をめぐる</h3><p>接続：体言</p><p>意味：围绕着…&#x3D;&#x3D;抽象：围绕…问题&#x3D;&#x3D; &#x3D;&#x3D;具体：围绕护城河&#x3D;&#x3D;</p><p>例文：</p><p>教育問題をめぐって、話し合います。</p><p>環境問題をめぐって、対策を検討する。</p><h3 id="16-～にわたって"><a href="#16-～にわたって" class="headerlink" title="16. &#x3D;&#x3D;～にわたって&#x3D;&#x3D;"></a>16. &#x3D;&#x3D;～にわたって&#x3D;&#x3D;</h3><p>接続：体言</p><p>意味：长达（在时间，空间范围内一直）；涉及到（各个方面）</p><p>例文：</p><p>手術は14時間にわたって行われていた。</p><p>この研究には多分野にわたって広い知識が必要である。</p><p>彼は3時間にわたって演説していた。</p><h3 id="17-～を通じて・を通して"><a href="#17-～を通じて・を通して" class="headerlink" title="17. ～を通じて・を通して"></a>17. ～を通じて・を通して</h3><p>接続：体言</p><p>意味：通过；整个…（时间范围内一直）</p><p>例文：</p><p>テレビを通して広告をする。</p><p>南極は一年を通して寒さが厳しく。</p><p>これは彼の一生を通して、もっとも苦しい時期だ。</p><h3 id="18-～から～にかけて"><a href="#18-～から～にかけて" class="headerlink" title="18. ～から～にかけて"></a>18. ～から～にかけて</h3><p>接続：体言</p><p>意味：从…到…范围内一直</p><p>例文：</p><p>東京は5月から8月にかけてよく雨が降る。</p><p>九州から四国にかけて、大雨が降る。</p><h3 id="19-～かわりに"><a href="#19-～かわりに" class="headerlink" title="19. ～かわりに"></a>19. ～かわりに</h3><p>（1）接続：体言＋の</p><p>意味：代替</p><p>例文：</p><p>BさんはAさんの代わりに主役を演じる。</p><p>部長の代わりに、会議に出席した。</p><p>（2）接続：連体形</p><p>意味：交换；与…相反；不…而… &#x3D;&#x3D;都强调代价&#x3D;&#x3D;</p><p>例文：</p><p>日本語を教えてもらう代わりに、中国語を教えてあげよう。</p><p>このマンションは駅に近いかわりに、家賃が高い。</p><p>今日は映画を見に行くかわりに、家で小説でも読もう。</p><h3 id="20-～にかわって"><a href="#20-～にかわって" class="headerlink" title="20. ～にかわって"></a>20. ～にかわって</h3><p>接続：体言</p><p>意味：代替</p><p>例文：</p><p>母にかわってあいさつをする。</p><p>部長にかわって、あいさつをする。</p><h3 id="21-～を始め（として）"><a href="#21-～を始め（として）" class="headerlink" title="21. ～を始め（として）"></a>21. ～を始め（として）</h3><p>接続：体言</p><p>意味：以…为代表（还有其他的）</p><p>例文：</p><p>この映画は北京を始め、全国の大都市で上映される。</p><p>中国を始めとするいろいろなアジアの国がこの会議に出席した。</p><h3 id="22-～とおり"><a href="#22-～とおり" class="headerlink" title="22. &#x3D;&#x3D;～とおり&#x3D;&#x3D;"></a>22. &#x3D;&#x3D;～とおり&#x3D;&#x3D;</h3><p>接続：体言＋の；ｎ＋どおり；ｖ＋とおり</p><p>意味：按照…</p><p>例文：</p><p>成績表は次のとおりです。</p><p>先生の教えどおりにする。</p><p>先生が教えたとおり。</p><p>ご覧の通り、私の家です。&#x3D;&#x3D;如您所见，这是我家&#x3D;&#x3D;</p><h3 id="23-～に応じて"><a href="#23-～に応じて" class="headerlink" title="23. ～に応じて"></a>23. ～に応じて</h3><p>接続：体言</p><p>意味：顺应（与前项事实相适应）</p><p>例文：</p><p>個人の希望に応じて、個別指導を行う。</p><p>収入に応じて生活する。</p><p>お客さんの注文に応じて作る。</p><h3 id="24-～にこたえて"><a href="#24-～にこたえて" class="headerlink" title="24. ～にこたえて"></a>24. ～にこたえて</h3><p>接続：体言</p><p>意味：回应（对期待要求等作出回应）</p><p>例文：</p><p>みんなの期待にこたえて、彼は新しい記録を立てた。</p><p>アンコールにこたえて、もう一回演じた。</p><h3 id="25-～に反して"><a href="#25-～に反して" class="headerlink" title="25. ～に反して"></a>25. ～に反して</h3><p>接続：体言</p><p>意味：与…相反；违反</p><p>例文：</p><p>予想に反して、出席者が多かった。</p><p>交通規則に反することをしてはいけない。</p><h3 id="26-～に加えて"><a href="#26-～に加えて" class="headerlink" title="26. ～に加えて"></a>26. ～に加えて</h3><p>接続：体言</p><p>意味：加之</p><p>例文：</p><p>大雪に加えて風まで吹いてきた。</p><p>過労に加えて、びょうきになってとうとう倒れてしまった。</p><h3 id="27-～に沿って"><a href="#27-～に沿って" class="headerlink" title="27. ～に沿って"></a>27. ～に沿って</h3><p>接続：体言</p><p>意味：沿着（道路，方针，政策）</p><p>例文：</p><p>政府の方針に沿って、都市建設の計画を実施する。</p><p>カリキュラムに沿って授業をする。</p><h3 id="28-～に従って"><a href="#28-～に従って" class="headerlink" title="28. ～に従って"></a>28. ～に従って</h3><p>接続：体言、辞書形</p><p>意味：随着；按照，根据</p><p>例文：</p><p>経済の発展に従って、人々の生活がよくなった。</p><p>政府の方針に従って、建設の仕事に力を入れた。</p><p>登るにしたがって、だんだん寒くなってきた。</p><h3 id="29-～につれて"><a href="#29-～につれて" class="headerlink" title="29. ～につれて"></a>29. ～につれて</h3><p>接続：体言、辞書形</p><p>意味：随着&#x3D;&#x3D;自然变化&#x3D;&#x3D;</p><p>時間につれて、愛情が深まった。</p><p>物価の高騰につれて、生活も苦しくなった。</p><h3 id="30-～に伴って"><a href="#30-～に伴って" class="headerlink" title="30. ～に伴って"></a>30. ～に伴って</h3><p>接続：体言</p><p>意味：随着</p><p>例文：</p><p>経済発展に伴って環境汚染もひどくなった。</p><h3 id="31-～とともに"><a href="#31-～とともに" class="headerlink" title="31. ～とともに"></a>31. ～とともに</h3><p>接続：体言、辞書形</p><p>意味：与…同时；等于一緒に</p><p>例文：</p><p>地震が起こると共に、火災もあちこちで発生した。</p><p>みんなと共に一緒に頑張りましょう。</p><p>卒業と共に、直ちに結婚する。</p><h3 id="PS：27～31有相近的意思，容易出题在一块，注意区分"><a href="#PS：27～31有相近的意思，容易出题在一块，注意区分" class="headerlink" title="&#x3D;&#x3D;ＰＳ：27～31有相近的意思，容易出题在一块，注意区分&#x3D;&#x3D;"></a>&#x3D;&#x3D;ＰＳ：27～31有相近的意思，容易出题在一块，注意区分&#x3D;&#x3D;</h3><h3 id="32-～にかかわらず"><a href="#32-～にかかわらず" class="headerlink" title="32. ～にかかわらず"></a>32. ～にかかわらず</h3><p>接続：体言</p><p>意味：无论…，不管…</p><p>例文：</p><p>男女にかかわらず、誰でも申請できます。</p><p>経験のあるなしにかかわらず、誰でも参加できる。</p><h3 id="PS：にもかかわらず-尽管"><a href="#PS：にもかかわらず-尽管" class="headerlink" title="&#x3D;&#x3D;ＰＳ：にもかかわらず&#x3D;&#x3D;&#x3D;&#x3D;尽管&#x3D;&#x3D;"></a>&#x3D;&#x3D;ＰＳ：にもかかわらず&#x3D;&#x3D;&#x3D;&#x3D;尽管&#x3D;&#x3D;</h3><h3 id="33-～を問わず"><a href="#33-～を問わず" class="headerlink" title="33. ～を問わず"></a>33. ～を問わず</h3><p>接続：体言</p><p>意味：无论…，不管…</p><p>例文：</p><p>国籍を問わず、誰でも参加することができる。</p><p>距離を問わず、バス代は210円です。</p><h3 id="34-～抜きで"><a href="#34-～抜きで" class="headerlink" title="34. ～抜きで"></a>34. ～抜きで</h3><p>接続：体言</p><p>意味：取消，略去</p><p>例文：</p><p>冗談抜きで、真剣にこの問題を考えなさい。</p><p>晩ご飯抜きで、授業に来る学生が多い。</p><h3 id="35-～抜きにして"><a href="#35-～抜きにして" class="headerlink" title="35. ～抜きにして"></a>35. ～抜きにして</h3><p>接続：体言</p><p>意味：略去</p><p>例文：</p><p>冗談抜きにして、真面目に考えてください。</p><p>礼儀を抜きにして、思う存分に飲もう。</p><h2 id="第七部分：強調、限定"><a href="#第七部分：強調、限定" class="headerlink" title="第七部分：強調、限定"></a>第七部分：強調、限定</h2><h3 id="1-～限りでは"><a href="#1-～限りでは" class="headerlink" title="1. &#x3D;&#x3D;～限りでは&#x3D;&#x3D;"></a>1. &#x3D;&#x3D;～限りでは&#x3D;&#x3D;</h3><p>接続：认知类动词</p><p>意味：据…所…</p><p>例文：</p><p>私の知る限りでは、彼は悪い人ではありません。</p><p>私の調べた限りでは、彼は悪人ではない。</p><h3 id="2-～に限って"><a href="#2-～に限って" class="headerlink" title="2. ～に限って"></a>2. ～に限って</h3><p>接続：体言</p><p>意味：偏偏，只有</p><p>例文：</p><p>買いたい時に限って、売り切れだ。</p><p>出かけようとする日に限って、天気が悪くなる、どうしようかな。</p><h3 id="3-～に限り"><a href="#3-～に限り" class="headerlink" title="3. ～に限り"></a>3. ～に限り</h3><p>接続：体言</p><p>意味：只限于…只是…</p><p>例文：</p><p>今回に限り、許してやる。</p><p>毎月の最初の日曜日に限り、午前中は休む。</p><h3 id="4-～に限る"><a href="#4-～に限る" class="headerlink" title="4. ～に限る"></a>4. ～に限る</h3><p>（1）接続：体言</p><p>意味：限于</p><p>例文：</p><p>今度の活動は女子に限る。</p><p>発表者は30人もいるから、一人15分に限ります。</p><p>&#x3D;&#x3D;（2）接続：辞書形、体言&#x3D;&#x3D;</p><p>意味：最好，最佳（普遍认可）</p><p>例文：</p><p>疲れた時は寝るに限る。</p><p>夏は冷たいビルに限る。</p><h3 id="5-～に限らず"><a href="#5-～に限らず" class="headerlink" title="5. ～に限らず"></a>5. ～に限らず</h3><p>接続：体言</p><p>意味：不仅而且</p><p>例文：</p><p>学部生に限らず、院生の就職も難しくなった。</p><p>選手たちに限らず、一般人も使える。</p><h3 id="6-～とは限らない"><a href="#6-～とは限らない" class="headerlink" title="6. ～とは限らない"></a>6. ～とは限らない</h3><p>接続：辞書形、体言</p><p>意味：未必…（必ずしも等连用）</p><p>例文：</p><p>高いものは必ずしもいいとは限らない。</p><p>中国人だからといって、中国文化を全部知っているとは限らない。</p><h3 id="7-～にとどまらない"><a href="#7-～にとどまらない" class="headerlink" title="7. ～にとどまらない"></a>7. ～にとどまらない</h3><p>接続：体言</p><p>意味：不限于，不止于（暗示还波及其他范围）</p><p>例文：</p><p>言いたいことはこれだけにとどまらない。</p><p>コロナは都市にとどまらず、農村にも広がっている。</p><h3 id="8-～のみならず"><a href="#8-～のみならず" class="headerlink" title="8. ～のみならず"></a>8. ～のみならず</h3><p>接続：連体形、体言</p><p>意味：不仅</p><p>例文：</p><p>この漫画は子供のみならず大人にも読んでいる。</p><p>父のみならず、母までも反対している。</p><h3 id="9-～ばかりでなく"><a href="#9-～ばかりでなく" class="headerlink" title="9. ～ばかりでなく"></a>9. ～ばかりでなく</h3><p>接続：連体形、体言</p><p>意味：不仅</p><p>例文：</p><p>あの人は英語ばかりでなく、日本語も話せる。</p><h3 id="10-～ばかりか"><a href="#10-～ばかりか" class="headerlink" title="10. ～ばかりか"></a>10. ～ばかりか</h3><p>接続：連体形、体言</p><p>意味：不但（后项语气更重）</p><p>例文：</p><p>私ばかりか、先生でも知らないだろう。</p><p>自分を反省しないばかりか、責任を他人に押しつける。</p><h3 id="11-～どころか"><a href="#11-～どころか" class="headerlink" title="11. &#x3D;&#x3D;～どころか&#x3D;&#x3D;"></a>11. &#x3D;&#x3D;～どころか&#x3D;&#x3D;</h3><p>接続：連体形、体言&#x3D;&#x3D;后接程度更甚&#x3D;&#x3D;</p><p>意味：不但不…反而（哪里谈得上…）</p><p>例文：</p><p>成績はよくなるどころか、どんどん悪くなった。</p><p>外国語どころか、母国語の文章さえかけない大学生がいる。</p><h3 id="12-～どころではない"><a href="#12-～どころではない" class="headerlink" title="12. ～どころではない"></a>12. ～どころではない</h3><p>接続：連体形、体言</p><p>意味：不是做某事的时候（哪里谈得上…）</p><p>例文：</p><p>宿題が多いので、テレビを見るどころではない。</p><p>忙しくて、映画を見るどころではない。</p><h3 id="13-～上に"><a href="#13-～上に" class="headerlink" title="13. ～上に"></a>13. ～上に</h3><p>接続：連体形、名詞＋の</p><p>意味：而且，又</p><p>例文：</p><p>あの店は料理がまずい上に、値段も高い。</p><p>あそこの果物は新鮮な上に、値段も安い。</p><h3 id="14-～さえ・でさえ"><a href="#14-～さえ・でさえ" class="headerlink" title="14. ～さえ・でさえ"></a>14. ～さえ・でさえ</h3><p>接続：連体形、体言</p><p>意味：甚至，就连</p><p>例文：</p><p>これは子どもさえわかることだ。</p><p>日本人の苗字は難しい、日本人でさえ困ることはあります。</p><h3 id="15-～ことか"><a href="#15-～ことか" class="headerlink" title="15. ～ことか"></a>15. ～ことか</h3><p>接続：情感言葉連体形</p><p>意味：多么（感叹）常和どんなに、どれほど、なんと连用</p><p>例句：</p><p>どんなに便利なことか。</p><p>昨日はあなたに会えてどれほど嬉しかったことか。</p><h3 id="16-～はもちろん・はもちろんのこと"><a href="#16-～はもちろん・はもちろんのこと" class="headerlink" title="16. ～はもちろん・はもちろんのこと"></a>16. ～はもちろん・はもちろんのこと</h3><p>接続：名詞</p><p>意味：自不必说</p><p>例文：</p><p>彼は英語はもちろん、日本語お話せる。</p><p>このことに、ちちはもちろん、母まではんたいする。</p><h3 id="17-～はしない"><a href="#17-～はしない" class="headerlink" title="17. &#x3D;&#x3D;～はしない&#x3D;&#x3D;"></a>17. &#x3D;&#x3D;～はしない&#x3D;&#x3D;</h3><p>&#x3D;&#x3D;接続：ます型去ます&#x3D;&#x3D;</p><p>意味：不…（加强否定语气）</p><p>例文：</p><p>決して約束を忘れはしないから、心配しないでください。</p><p>噓なんかつきはしませんよ。</p><h3 id="18-～っこない"><a href="#18-～っこない" class="headerlink" title="18. &#x3D;&#x3D;～っこない&#x3D;&#x3D;"></a>18. &#x3D;&#x3D;～っこない&#x3D;&#x3D;</h3><p>&#x3D;&#x3D;接続：ます型去ます&#x3D;&#x3D;</p><p>意味：不会（可能性不存在）</p><p>例文：</p><p>女の心なんて、わかりっこないよ。</p><p>こんな難しい問題は解けっこない。</p><h3 id="19-～からして"><a href="#19-～からして" class="headerlink" title="19. ～からして"></a>19. ～からして</h3><p>接続：体言</p><p>意味：从…来看，单就…而言</p><p>例文：</p><p>表情からして、彼は失恋したようだ。</p><p>外見からして、金持ちらしい。</p><h3 id="20-～こそ"><a href="#20-～こそ" class="headerlink" title="20. ～こそ"></a>20. ～こそ</h3><p>接続：体言</p><p>意味：正是，才是&#x3D;&#x3D;强调&#x3D;&#x3D;</p><p>例文：</p><p>努力してこそ、成功できるのだ。</p><p>これこそ私が探しているものだ。</p><h2 id="随机二次元（可能含NSFW）"><a href="#随机二次元（可能含NSFW）" class="headerlink" title="随机二次元（可能含NSFW）?"></a>随机二次元（可能含NSFW）?</h2><div align="center"><img src="../../../../loading2.svg" data-original="https://moe.starfishdl.site/api/setu/v1"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="日语学习" scheme="https://blog.pengdonglai.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="日本語" scheme="https://blog.pengdonglai.com/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
    <category term="语法" scheme="https://blog.pengdonglai.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>N2 日语部分语法点归总（3）</title>
    <link href="https://blog.pengdonglai.com/2024/09/17/japanese-grammar-5/"/>
    <id>https://blog.pengdonglai.com/2024/09/17/japanese-grammar-5/</id>
    <published>2024-09-17T02:35:41.000Z</published>
    <updated>2024-09-22T09:18:57.151Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><button class="btn-small waves-effect waves-light" id="toggleButton">变更测试模式</button></p><script>  let usingHeimu = true;  document.getElementById('toggleButton').addEventListener('click', () => {    usingHeimu = !usingHeimu;    const spans = document.querySelectorAll('span.heimu, span.no-heimu');    spans.forEach(span => {      if (usingHeimu) {        span.classList.remove('no-heimu');        span.classList.add('heimu');      } else {        span.classList.remove('heimu');        span.classList.add('no-heimu');      }    });  });</script><blockquote><p>本文来自于 bilibili UP 主 <a href="https://space.bilibili.com/548121510">当当_suzu</a> 的 <a href="https://www.bilibili.com/video/BV1yY411b7zY">N2 系列视频</a>，这套视频是我见过 N2 系列语法视频中讲的最全的版本，如果有可能大家请尽可能支持原作者！</p><p>本文内容来自于该系列视频讲义。如有侵犯著作权的行为请联系我及时删除。</p></blockquote><h2 id="第八部分：列挙、話題提出"><a href="#第八部分：列挙、話題提出" class="headerlink" title="第八部分：列挙、話題提出"></a>第八部分：列挙、話題提出</h2><h3 id="１．～やら～やら"><a href="#１．～やら～やら" class="headerlink" title="１．～やら～やら"></a>１．～やら～やら</h3><p>接続：名詞、辞書形</p><p>意味：。。。啦。。。啦（列举代表性的事物）</p><p>例文：</p><p>家に帰って料理やら洗濯やら何もしなければならない。</p><p>帰国前、買い物やら荷造りやらで、たいへん忙しかった。</p><h3 id="２．-～も～ば～も"><a href="#２．-～も～ば～も" class="headerlink" title="２．&#x3D;&#x3D;～も～ば～も&#x3D;&#x3D;"></a>２．&#x3D;&#x3D;～も～ば～も&#x3D;&#x3D;</h3><p>接続：ば型</p><p>意味：既。。。又。。。</p><p>例文：</p><p>あの人は給料も高ければ能力もある。</p><p>彼氏はお酒も飲めば、タバコも吸う。</p><h3 id="３．～につけ～につけ"><a href="#３．～につけ～につけ" class="headerlink" title="３．～につけ～につけ"></a>３．～につけ～につけ</h3><p>接続：名詞、辞書形</p><p>意味：无论。。。还是</p><p>例文：</p><p>いいにつけ悪いにつけ、成績を先生に伝えるべきだ。</p><p>嬉しいにつけ、悲しいにつけ、彼と話したい。</p><h3 id="４．～にしても～にしても"><a href="#４．～にしても～にしても" class="headerlink" title="４．～にしても～にしても"></a>４．～にしても～にしても</h3><p>接続：名詞、辞書形</p><p>意味：无论。。。还是。。。</p><p>例文：</p><p>高いにしても安いにしても、</p><p>進学にしても、就職にしても、自分で決めなければならない。</p><h3 id="５．～というと"><a href="#５．～というと" class="headerlink" title="５．～というと"></a>５．～というと</h3><p>接続：体言</p><p>意味：谈起，说到</p><p>例文：</p><p>川端康成というと、「雪国」という小説が心に浮かぶ人が多いでしょう。</p><p>映画というと、「ハリウッド」を思い出す。</p><h3 id="６．～といえば"><a href="#６．～といえば" class="headerlink" title="６．～といえば"></a>６．～といえば</h3><p>（１）接続：体言</p><p>意味：说起</p><p>例文：</p><p>日本といえば、すぐ富士山を思い出します。</p><p>田中さんといえば、最近仕事を辞めてそうです。</p><p>（２）接続：体言</p><p>意味：要说。。。的确是。。。</p><p>例文：</p><p>不便といえば不便だが、なんとかやるよ。</p><p>高いといえば高いですが、必需品ですから、買っておいたほうがいいよ。</p><h3 id="７．～といったら"><a href="#７．～といったら" class="headerlink" title="７．～といったら"></a>７．～といったら</h3><p>接続：体言</p><p>意味：提起，说到（提出话题）</p><p>例文：</p><p>その話を聞いたとき彼女の顔といったら、本当に悲しそうだった。</p><p>紅葉といったら高尾山、あの景色のうつくしさといったら、言葉で言い表せないほどだ。</p><h3 id="８．～かというと・かといえば・かといったら"><a href="#８．～かというと・かといえば・かといったら" class="headerlink" title="８．～かというと・かといえば・かといったら"></a>８．～かというと・かといえば・かといったら</h3><p>接続：体言</p><p>意味：从。。。来讲（以事实为依据谈论自己的看法）</p><p>なぜ成績が悪いかというと、普段の勉強が足りないからです。</p><p>大学を卒業したらとうするかといえば、まだ何も決めてないだ。</p><h3 id="９．～からいうと・からいえば・からいって"><a href="#９．～からいうと・からいえば・からいって" class="headerlink" title="９．～からいうと・からいえば・からいって"></a>９．～からいうと・からいえば・からいって</h3><p>接続：体言</p><p>意味：从。。。来讲（以事实为依据谈论自己的看法）</p><p>例文：</p><p>彼は実力からいうと、大学に入るのは大丈夫だ。</p><p>彼女は妹だけど、性格からいうと、私と全然違っている。</p><h3 id="１０．～からすると・からすれば"><a href="#１０．～からすると・からすれば" class="headerlink" title="１０．～からすると・からすれば"></a>１０．～からすると・からすれば</h3><p>接続：体言</p><p>意味：从。。。来看（从事物的某个角度衡量）</p><p>例文：</p><p>話し方からすると、彼は東京の人ではないようだ。</p><p>収入からすると、そんな高いかばんはとても買えない。</p><h3 id="１１．～から見ると・から見れば・から見て"><a href="#１１．～から見ると・から見れば・から見て" class="headerlink" title="１１．～から見ると・から見れば・から見て"></a>１１．～から見ると・から見れば・から見て</h3><p>接続：体言</p><p>意味：从。。。看来（角度，看法）</p><p>例文：</p><p>親の立場から見ると、子供はいくつになっても子供です。</p><p>服装から見れば、彼は金持ちのようだ。</p><h3 id="１２．-～にしてみれば"><a href="#１２．-～にしてみれば" class="headerlink" title="１２．&#x3D;&#x3D;～にしてみれば&#x3D;&#x3D;"></a>１２．&#x3D;&#x3D;～にしてみれば&#x3D;&#x3D;</h3><p>接続：体言</p><p>意味：前接人物，从。。。视点来看</p><p>例文：</p><p>初心者にしてみれば、もっとわかりやすく話してもらいたいだろう。</p><p>私にしてみれば、どうでもいいことだ。</p><h3 id="１３．～はともかく"><a href="#１３．～はともかく" class="headerlink" title="１３．～はともかく"></a>１３．～はともかく</h3><p>接続：体言、連体形</p><p>意味：。。。暂且不论</p><p>例文：</p><p>この店はサービスはともかく、味がわるくない。</p><p>他人のことはともかく、まず自分がどうするかを決めるべきだ。</p><h3 id="１４．～ならともく"><a href="#１４．～ならともく" class="headerlink" title="１４．～ならともく"></a>１４．～ならともく</h3><p>接続：体言、連体形</p><p>意味：如果。。。另当别论，但是。。。（情有可原）</p><p>勉強しているならともかく、遊んでばかりいては成績がよくなるはずがない。</p><p>遅刻ならともかく、欠席はだめだ。</p><h2 id="第九部分：可能"><a href="#第九部分：可能" class="headerlink" title="第九部分：可能"></a>第九部分：可能</h2><h3 id="１．～ざるをえない"><a href="#１．～ざるをえない" class="headerlink" title="１．～ざるをえない"></a>１．～ざるをえない</h3><p>&#x3D;&#x3D;接続：ない型&#x3D;&#x3D;</p><p>意味：不得不（违反本意）</p><p>例文：</p><p>今回の失敗はこちらにも責任があると言わざるをえない。</p><p>事故を起こしたのだから、仕事を辞めざるをえない。</p><h3 id="２．～かねる"><a href="#２．～かねる" class="headerlink" title="２．～かねる"></a>２．～かねる</h3><p>&#x3D;&#x3D;接続：ます型去ます&#x3D;&#x3D;</p><p>意味：难以</p><p>例文：</p><p>私一人では決めかねます。</p><p>せっかく作ってくれた料理なのでまずいと言いかねる。</p><h3 id="３．～かねない"><a href="#３．～かねない" class="headerlink" title="３．～かねない"></a>３．～かねない</h3><p>&#x3D;&#x3D;接続：ます型去ます&#x3D;&#x3D;</p><p>意味：有可能（消极）</p><p>例文：</p><p>あの人は金のためにはそんなことをやりかねない。</p><p>早く行かないと、7時の列車に遅れかねない。</p><h3 id="４．～恐れがある"><a href="#４．～恐れがある" class="headerlink" title="４．～恐れがある"></a>４．～恐れがある</h3><p>接続：連体形</p><p>意味：恐怕会（消极）</p><p>例文：</p><p>このまま森を切り続けば、ここは砂漠になる恐れがある。</p><p>台風は５日に沖縄地区に上陸する恐れがある。</p><h3 id="５．～ようがない"><a href="#５．～ようがない" class="headerlink" title="５．～ようがない"></a>５．～ようがない</h3><p>&#x3D;&#x3D;接続：ます型去ます&#x3D;&#x3D;</p><p>意味：无法。。。</p><p>例文：</p><p>これ以上悩んでもどうしようもない、あきらめよう。</p><p>その時の寂しさは言いようがない。</p><h3 id="６．～にも～ない"><a href="#６．～にも～ない" class="headerlink" title="６．～にも～ない"></a>６．～にも～ない</h3><p>接続：意向形（よう）～可能形&#x3D;&#x3D;中间是同一个动词&#x3D;&#x3D;</p><p>意味：想要做。。。也做不到</p><p>例文：</p><p>心配事があるので、寝ようにも寝られない。</p><p>おかねがなくて、留学しようにもできない。</p><h3 id="７．～（より）ほか（は）ない"><a href="#７．～（より）ほか（は）ない" class="headerlink" title="７．～（より）ほか（は）ない"></a>７．～（より）ほか（は）ない</h3><p>接続：辞書形</p><p>意味：（没有别的办法）只好</p><p>例文：</p><p>Ｎ２試験に合格するためには、今から真面目に勉強するよりほかはない。</p><p>いくら焦ってもどうしようもない、このまま待つほかない。</p><h3 id="８．～得る"><a href="#８．～得る" class="headerlink" title="８．～得る"></a>８．～得る</h3><p>&#x3D;&#x3D;接続：ます型去ます&#x3D;&#x3D;</p><p>意味：能</p><p>そんなこと、ありえないよ。</p><p>この問題を解きえた人は一人もいない。</p><h3 id="９．～かけ・～かける"><a href="#９．～かけ・～かける" class="headerlink" title="９．～かけ・～かける"></a>９．～かけ・～かける</h3><p>&#x3D;&#x3D;接続：ます型去ます&#x3D;&#x3D;</p><p>意味：刚刚开始，做了一半（没做完）</p><p>例文：</p><p>机には食べかけのパンが残されている。</p><p>読みかけた本を返した。</p><h3 id="１０．～がち"><a href="#１０．～がち" class="headerlink" title="１０．～がち"></a>１０．～がち</h3><p>&#x3D;&#x3D;接続：ます型去ます&#x3D;&#x3D;、体言</p><p>意味：容易常常往往会（消极）</p><p>例文：</p><p>これはありがちな間違いだ。</p><p>彼女は小さいころ病気がちで、あまり外で遊ばなかった。</p><h3 id="１１．～がる"><a href="#１１．～がる" class="headerlink" title="１１．～がる"></a>１１．～がる</h3><p>&#x3D;&#x3D;接続：ます型去ます、形容詞語幹&#x3D;&#x3D;</p><p>意味：第三人称的感觉</p><p>例文：</p><p>弟は新しいものを見ると、すぐ欲しがる。</p><p>人の嫌がるこ事はなるべくやめたほうがいい。</p><h3 id="１２．～気味"><a href="#１２．～気味" class="headerlink" title="１２．～気味"></a>１２．～気味</h3><p>&#x3D;&#x3D;接続：ます型去ます&#x3D;&#x3D;</p><p>意味：有点。。。倾向</p><p>例文：</p><p>今日は少し風邪気味で、頭が痛い。</p><p>初めての演説なので、彼女は少し緊張気味だった。</p><h3 id="１３．～きる"><a href="#１３．～きる" class="headerlink" title="１３．～きる"></a>１３．～きる</h3><p>&#x3D;&#x3D;接続：ます型去ます&#x3D;&#x3D;</p><p>意味：做完</p><p>例文：</p><p>この本は一週間で読み切れる。</p><p>辞書に頼って、やっとこの小説を読み切った。</p><h3 id="１４．～げ"><a href="#１４．～げ" class="headerlink" title="１４．～げ"></a>１４．～げ</h3><p>&#x3D;&#x3D;接続：ます型去ます、い形容詞去い、な形容詞去な&#x3D;&#x3D;</p><p>意味：。。。的样子</p><p>例文：</p><p>家の外で子猫が悲しげにほえている。</p><p>このぐないのことで怒るのは、大人げがない。</p><h3 id="１５．～だらけ"><a href="#１５．～だらけ" class="headerlink" title="１５．～だらけ"></a>１５．～だらけ</h3><p>接続：体言</p><p>意味：满是（抽象，具体）</p><p>例文：</p><p>彼は借金だらけ、何度も自殺を図った。</p><p>この文章は間違いだらけ、直しようがない。</p><h3 id="１６．～っぽい"><a href="#１６．～っぽい" class="headerlink" title="１６．～っぽい"></a>１６．～っぽい</h3><p>&#x3D;&#x3D;接続：ます型去ます&#x3D;&#x3D;</p><p>意味：有前项的特性，状态；容易</p><p>例文：</p><p>彼女はもう大学を卒業したが、子供っぽいところがまだある。</p><p>田中さんは忘れっぽくないました。</p><h3 id="１７．～抜く"><a href="#１７．～抜く" class="headerlink" title="１７．～抜く"></a>１７．～抜く</h3><p>接続：ます型去ます</p><p>意味：（通过努力）做到最后</p><p>例文：</p><p>ついに２０００メートルを走りぬいた。</p><p>決めた以上最後までやり抜くべきだ。</p><h3 id="１８．～向き"><a href="#１８．～向き" class="headerlink" title="１８．～向き"></a>１８．～向き</h3><p>接続：体言</p><p>意味：适合于（性质适合某类人或事物）；朝向</p><p>例文：</p><p>子供向きの料理もあれば、大人向きの料理もある。</p><p>あの酒は女性向きで、あまり強くない。</p><h3 id="１９．～向け"><a href="#１９．～向け" class="headerlink" title="１９．～向け"></a>１９．～向け</h3><p>接続：体言</p><p>意味：以。。。为对象（目的）</p><p>例文：</p><p>輸出向けの製品はみんな厳しい品質検査を受けている。</p><p>中国の日本語学習者向けに作られた教材で、すごく面白い。</p><h2 id="第十部分：仮定、条件"><a href="#第十部分：仮定、条件" class="headerlink" title="第十部分：仮定、条件"></a>第十部分：仮定、条件</h2><h3 id="１．～たとえ～ても・でも"><a href="#１．～たとえ～ても・でも" class="headerlink" title="１．～たとえ～ても・でも"></a>１．～たとえ～ても・でも</h3><p>接続：て型</p><p>意味：即使，就算</p><p>例文：</p><p>たとえ負けても、気を落としてはいけない。</p><p>たとえ高くても、買わなければならない。</p><h3 id="２．～としても"><a href="#２．～としても" class="headerlink" title="２．～としても"></a>２．～としても</h3><p>（１）接続：連体形、体言</p><p>意味：即使，就算</p><p>例文：</p><p>大地震が起こったとしても、このビルは大丈夫でしょう。</p><p>（２）接続：身份地位的名词</p><p>意味：就算作为。。。</p><p>例文：</p><p>田中先生は詩人としても有名だ。</p><p>校長としても規則を守るべきだ。</p><h3 id="３．～にしても"><a href="#３．～にしても" class="headerlink" title="３．～にしても"></a>３．～にしても</h3><p>接続：連体形、体言</p><p>意味：即使。。。；无论。。。都（连接疑问词）；作为。。。也</p><p>例文：</p><p>だれにしても、同じでしょう。</p><p>忙しいにしても、電話ぐらいはくれればいいのに。</p><h3 id="４．～にしろ-～にせよ"><a href="#４．～にしろ-～にせよ" class="headerlink" title="４．～にしろ&#x2F;～にせよ"></a>４．～にしろ&#x2F;～にせよ</h3><p>接続：連体形、体言</p><p>意味：即使（约等于にしても，略正式）</p><p>例文：</p><p>冗談にせよ、そんな話をすべきではない。</p><p>どんなに辛いにしろ、最後まで頑張らなければならない。</p><h3 id="５．-～としたら・とすると・とすれば"><a href="#５．-～としたら・とすると・とすれば" class="headerlink" title="５．&#x3D;&#x3D;～としたら・とすると・とすれば&#x3D;&#x3D;"></a>５．&#x3D;&#x3D;～としたら・とすると・とすれば&#x3D;&#x3D;</h3><p>接続：辞書型</p><p>意味：如果</p><p>例文：</p><p>Ｘは３だとすれば、Ｙは５になる。</p><p>証言は正しいとすれば、彼は無罪だ。</p><h3 id="６．～にしたら・にすれば"><a href="#６．～にしたら・にすれば" class="headerlink" title="６．～にしたら・にすれば"></a>６．～にしたら・にすれば</h3><p>接続：体言</p><p>意味：在。。。看来</p><p>例文：</p><p>いくら大きくなっても、親にしたらまだ子供なのだ。</p><p>生活が苦しくても、彼と一緒にいられることは、彼女にしたら最大の幸福だ。</p><h3 id="７．～ようものなら"><a href="#７．～ようものなら" class="headerlink" title="７．～ようものなら"></a>７．～ようものなら</h3><p>接続：意向形</p><p>意味：一旦。。。的话</p><p>例文：</p><p>ちょっとミスしようものなら、命が危ない。</p><p>本当のことを話そうものなら、大変になる。</p><h3 id="８．～てからでないと"><a href="#８．～てからでないと" class="headerlink" title="８．～てからでないと"></a>８．～てからでないと</h3><p>接続：て型</p><p>意味：不在。。。之后的话，就无法。。。</p><p>例文：</p><p>みんなと相談してからでないと、一人で決められない。</p><p>親になってからでないと、親としての苦しさが分からない。</p><h3 id="９．～ないことには"><a href="#９．～ないことには" class="headerlink" title="９．～ないことには"></a>９．～ないことには</h3><p>接続：否定型</p><p>意味：如果不。。。（就不能）。。。</p><p>例文：</p><p>やってみないことには、その面白さがわからないでしょう。</p><p>Ｎ２に合格しないことには、この大学に入れない。</p><h3 id="PS：８～９一个意思"><a href="#PS：８～９一个意思" class="headerlink" title="ＰＳ：８～９一个意思"></a>ＰＳ：８～９一个意思</h3><h3 id="１０．～なしには・なくしては"><a href="#１０．～なしには・なくしては" class="headerlink" title="１０．～なしには・なくしては"></a>１０．～なしには・なくしては</h3><p>接続：体言</p><p>意味：没有。。。（就不能）。。。</p><p>例文：</p><p>愛なしにはなんの人生か。</p><p>政府からの許可なしには、この計画が実施できないんだろう。</p><h3 id="１１．-～さえ～ば"><a href="#１１．-～さえ～ば" class="headerlink" title="１１．&#x3D;&#x3D;～さえ～ば&#x3D;&#x3D;"></a>１１．&#x3D;&#x3D;～さえ～ば&#x3D;&#x3D;</h3><p>接続：体言＋でさえあれば、体言＋さえ＋ば形、動詞連用形＋さえすれば、形容詞連用形＋さえあれば、形容動詞語幹＋でさえあれば</p><p>意味：只要。。。</p><p>例文：（只要）</p><p>無事でさえあれば、何よりです。</p><p>お金さえあれば、何でも買える。</p><p>この問題を解決しさえすれば、あとは簡単だ。</p><p>安くさえあれば、ちょっと狭くても構わない。</p><h3 id="１２．～限り"><a href="#１２．～限り" class="headerlink" title="１２．～限り"></a>１２．～限り</h3><p>接続：連体形</p><p>意味：只要</p><p>例文：</p><p>用事がない限り、必ず参加します。</p><p>暇がある限り、彼と一緒にいたい。</p><h2 id="第十一部分：その他"><a href="#第十一部分：その他" class="headerlink" title="第十一部分：その他"></a>第十一部分：その他</h2><h3 id="１．～ずつ"><a href="#１．～ずつ" class="headerlink" title="１．～ずつ"></a>１．～ずつ</h3><p>接続：数量詞</p><p>意味：每。。。</p><p>例文：</p><p>五人ずつでグループを作る。</p><p>一人に３枚ずつあげる。</p><h3 id="２．～おきに"><a href="#２．～おきに" class="headerlink" title="２．～おきに"></a>２．～おきに</h3><p>接続：数量詞</p><p>意味：每隔</p><p>例文：</p><p>１メートルおきに気を一本植える。</p><p>3時間おきに薬を飲んでください。</p><h3 id="３．～ごとに"><a href="#３．～ごとに" class="headerlink" title="３．～ごとに"></a>３．～ごとに</h3><p>接続：体言、連体形</p><p>意味：每。。。(频度)</p><p>例文：</p><p>このバスは五分ごとに出る。</p><p>日曜日ごとにプールに行く。</p><p>五人ごとにグループを作る。</p><h3 id="４．～なんて"><a href="#４．～なんて" class="headerlink" title="４．～なんて"></a>４．～なんて</h3><p>接続：辞書形、体言</p><p>意味：など口语，表示列举，或轻蔑不以为然的语气</p><p>例文：</p><p>こんなところで君に会うなんて、びっくりしたよ。</p><h3 id="５．～なんか"><a href="#５．～なんか" class="headerlink" title="５．～なんか"></a>５．～なんか</h3><p>接続：辞書形、体言</p><p>意味：など口语，什么的</p><p>例文：</p><p>小説を読んだりなんかして、暇をつぶす。</p><h3 id="６．～っけ"><a href="#６．～っけ" class="headerlink" title="６．～っけ"></a>６．～っけ</h3><p>接続：過去式</p><p>意味：“来着”。表示回忆；对记忆不清的事实进行证实</p><p>例文：</p><p>昨日の朝ごはん、何食べたっけ。</p><p>三年前はどこで働いたんだっけ。</p><h3 id="７．～ようではないか"><a href="#７．～ようではないか" class="headerlink" title="７．～ようではないか"></a>７．～ようではないか</h3><p>接続：意向形</p><p>意味：号召劝诱，。。。吧</p><p>例文：</p><p>最後まで頑張ってみようじゃないか</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="日语学习" scheme="https://blog.pengdonglai.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="日本語" scheme="https://blog.pengdonglai.com/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
    <category term="语法" scheme="https://blog.pengdonglai.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>柚子社☆各OP分析</title>
    <link href="https://blog.pengdonglai.com/2024/08/31/tenshi-souzou-reboot-op/"/>
    <id>https://blog.pengdonglai.com/2024/08/31/tenshi-souzou-reboot-op/</id>
    <published>2024-08-31T04:18:41.000Z</published>
    <updated>2024-09-22T10:08:38.043Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>Ciallo ～(∠・ω&lt; )⌒★</p></blockquote><p>这篇博客本来想写一些关于天使☆纷扰的一些东西的，但众所周知，我非常不善于将这些东西表达感受出来，因为我很难不保证自己的感受为了照顾受众有一些同质化想法，那并不是我想要的。上次我正好有过一篇关于 OP 的分析，我觉得正好就将这篇博客的方向进行调整，争取让大家<s>柚子厨</s>读完之后<s>可以去公共场合展现自我。</s></p><p>希望大家可以从解析中有一些获得感！</p><p>无论你对柚子厨有什么看法，我都接受你最恶意的那一种，诶嘿~</p><h2 id="天使☆騒々-RE-BOOT"><a href="#天使☆騒々-RE-BOOT" class="headerlink" title="天使☆騒々 RE-BOOT!"></a>天使☆騒々 RE-BOOT!</h2><p>天使☆纷扰，是柚子社第12部正式作品。它在日本的正式名称为：天使☆騒々 RE-BOOT! 由于中文版目前还没个准信，所以我接受目前市面上的所有翻译，不要吵起来！！</p><p>关于这一作确实是有很多想说的，当然不全是好的评价，也没有什么自我感动，小作文啥的那更是绝对不会有。所以你想看那种深度内容，真情实感流露，建议再去互联网上找找哦 (∠・ω&lt; )⌒★。</p><p>歌曲名称：FUN FUN RE-BOOT</p><h3 id="传教时间"><a href="#传教时间" class="headerlink" title="传教时间"></a>传教时间</h3><p>这一作的 OP 我觉得可以在所有柚子的作品中，排进前三。为了方便传教，本文也贴一个官方的 OP 放到这里：</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube.com/embed/0R62qm0YQi8?si=DDUArjSwj69-pY9z" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>当然，它只有前面的一小半部分。所以我这里也顺便给个 OP 的全语音版本：</p><audio src="audio1.mp3" controls loop preload="metadata">  你的浏览器不支持 audio 标签。</audio><h3 id="歌词讲解"><a href="#歌词讲解" class="headerlink" title="歌词讲解"></a>歌词讲解</h3><p>不过在我们分析 OP 前，可能还是需要把歌词说了什么，给弄懂。日语大神可以跳过第一部分，如果你不会日语或者日语没那么强，可以看看我写的分析。嗯嗯，果然还是忍不住也抱着学习的态度看看歌词呢：</p><p class="hiragana"><span class="ruby"><span class="rb">飛</span><span class="rt">と</span></span>び<span class="ruby"><span class="rb">出</span><span class="rt">だ</span></span>そう<span class="ruby"><span class="rb">新</span><span class="rt">あたら</span></span>しい <span class="ruby"><span class="rb">望</span><span class="rt">のぞ</span></span>む<span class="ruby"><span class="rb">世界</span><span class="rt">せかい</span></span>へ<br>FUN FUN RE-BOOT!<br></p><details>  <summary>点我查看解析</summary>  <div>飞向那个全新的、令人向往的世界吧！</div>  <div>飛び出そう：飞出去吧！</div>  <div>望む：令人羡慕，向往的</div>  <div>へ：N5语法，表示为「去」的含义</div></details><br><p class="hiragana"><span class="ruby"><span class="rb">平凡</span><span class="rt">へいぼん</span></span>だった<span class="ruby"><span class="rb">毎日</span><span class="rt">まいにち</span></span>に<span class="ruby"><span class="rb">舞</span><span class="rt">ま</span></span>い<span class="ruby"><span class="rb">降</span><span class="rt">お</span></span>りた<br><span class="ruby"><span class="rb">アンビリバブー</span><span class="rt">Unbelievable</span></span>！？<span class="ruby"><span class="rb">血</span><span class="rt">ち</span></span>も<span class="ruby"><span class="rb">沸</span><span class="rt">わ</span></span>き<span class="ruby"><span class="rb">立</span><span class="rt">た</span></span>つ<span class="ruby"><span class="rb">運命</span><span class="rt">うんめい</span></span><br>ゲームみたいにありえない<span class="ruby"><span class="rb">話</span><span class="rt">はなし</span></span>も<br><span class="ruby"><span class="rb">信</span><span class="rt">しん</span></span>じちゃう<span class="ruby"><span class="rb">魔法</span><span class="rt">まほう</span></span>かけてあげましょう<br></p><details>  <summary>点我查看解析</summary>  <div>在平凡无奇的每天就此降临。很神奇吧？让人热血沸腾的命运。</div>  <div>就连游戏里的，让人难以置信的故事，也让人忍不住相信。</div>  <div>就让我来为你施下魔法。</div>  <div>平凡だった：N5，な形容词过去式</div>  <div>みたい：N4语法，像那样的。区别于ように等</div>  <div>ちゃう：てしまう的缩略语口语用法</div>  <div>魔法かけて：N5语法，かける有「施加、发动」这里为发动魔法的意思</div>  <div>あげましょう：N4语法，あげる。区别于くれる、もらう</div></details><br><p class="hiragana"><span class="ruby"><span class="rb">異</span><span class="rt">こと</span></span>なる<span class="ruby"><span class="rb">力</span><span class="rt">ちから</span></span><span class="ruby"><span class="rb">掛</span><span class="rt">か</span></span>け<span class="ruby"><span class="rb">合</span><span class="rt">あ</span></span>わせ<span class="ruby"><span class="rb">生</span><span class="rt">う</span></span>み<span class="ruby"><span class="rb">出</span><span class="rt">だ</span></span>す<span class="ruby"><span class="rb">奇跡</span><span class="rt">きせき</span></span><br>ちょっと<span class="ruby"><span class="rb">凹</span><span class="rt">へこ</span></span>んだって、<span class="ruby"><span class="rb">イッツオーライ</span><span class="rt">It's alright</span></span><br><span class="ruby"><span class="rb">必</span><span class="rt">かなら</span></span>ずまた<span class="ruby"><span class="rb">立</span><span class="rt">た</span></span>ち<span class="ruby"><span class="rb">上</span><span class="rt">あ</span></span>がるよ <span class="ruby"><span class="rb">絶対</span><span class="rt">ぜったい</span></span><br>FUN FUN RE-BOOT!<br></p><details>  <summary>点我查看解析</summary>  <div>奇异的力量结合起来就产生了奇迹。哪怕稍微有挫折，依然也没有关系吧</div>  <div>一定会重新振作起来的，绝对。Fun Fun-Reboot！</div>  <div>就让我来为你施下魔法。</div>  <div>掛け合わせ：可以表示乘法，在这里表示「力量汇合」</div>  <div>必ずまた：一定会重新...</div>  <div>立ち上がる：站起来，这里笔者引申出来「振作」的意思</div></details><br><p class="hiragana"><span class="ruby"><span class="rb">ピンチ</span><span class="rt">Pinch</span></span>は<span class="ruby"><span class="rb">チャンス</span><span class="rt">Chance</span></span>に<span class="ruby"><span class="rb">上書</span><span class="rt">うわが</span></span>きして<br>どんな<span class="ruby"><span class="rb">世界</span><span class="rt">せかい</span></span>でも<span class="ruby"><span class="rb">大丈夫</span><span class="rt">だいじょうぶ</span></span><br><span class="ruby"><span class="rb">騒</span><span class="rt">さわ</span></span>がしいくらいがちょうどいいかもね<br><span class="ruby"><span class="rb">前世</span><span class="rt">ぜんせ</span></span>よりも<span class="ruby"><span class="rb">深</span><span class="rt">ふか</span></span>く<br><span class="ruby"><span class="rb">繋</span><span class="rt">つな</span></span>がる<span class="ruby"><span class="rb">愛</span><span class="rt">あい</span></span>を<span class="ruby"><span class="rb">コンティニュー</span><span class="rt">Continue</span></span><br></p><details>  <summary>点我查看解析</summary>  <div>逆境也会被重新改写为机会，无论是在哪个世界都没有关系</div>  <div>就算稍微有些吵闹，说不定正合我们的心意</div>  <div>相比于前世更加深沉，更紧密的爱，一直延续</div>  <div>上書きして：上書きる、改写，覆写</div>  <div>でも：どな...でも、无论怎样的...</div>  <div>くらい：名词接续，表示程度</div>  <div>ちょうど：表示正好。除此之外，它还有「稍微」的含义</div>  <div>ちょうどいいかもね：也许正合我意</div></details><br><p class="hiragana"><span class="ruby"><span class="rb">アクシデント</span><span class="rt">Accident</span></span> まさかの<span class="ruby"><span class="rb">展開</span><span class="rt">てんかい</span></span>も<br><span class="ruby"><span class="rb">最後</span><span class="rt">さいご</span></span>には<span class="ruby"><span class="rb">笑</span><span class="rt">わら</span></span>い<span class="ruby"><span class="rb">話</span><span class="rt">ばなし</span></span>にしよう<br><span class="ruby"><span class="rb">現実</span><span class="rt">げんじつ</span></span>は<span class="ruby"><span class="rb">小説</span><span class="rt">しょうせつ</span></span>よりも<span class="ruby"><span class="rb">奇</span><span class="rt">き</span></span>なりだそうで<br><span class="ruby"><span class="rb">楽</span><span class="rt">たの</span></span>しむしかないみたいね<br><span class="ruby"><span class="rb">私</span><span class="rt">わたし</span></span>たちの<span class="ruby"><span class="rb">ノンフィクション</span><span class="rt">Non-fiction</span></span><br></p><details>  <summary>点我查看解析</summary>  <div>突发事件预料外的展开，到最后也变成了笑谈</div>  <div>现实也许会比小说里面变得更加奇怪</div>  <div>好像也只能找些乐子了，这是我们的纪实文学</div>  <div>まさか：名词，意料之外的</div>  <div>なり：「…だ」、「…である」也，表示断定</div>  <div>しかない：動詞原形+しかない，只能，只得</div>  <div>しかないみたい：只能像那样了啊...</div></details><br><p class="hiragana"><span class="ruby"><span class="rb">重</span><span class="rt">かさ</span></span>ねた<span class="ruby"><span class="rb">心</span><span class="rt">こころ</span></span>を<span class="ruby"><span class="rb">一</span><span class="rt">ひと</span></span>つにして<br><span class="ruby"><span class="rb">予測</span><span class="rt">よそく</span></span><span class="ruby"><span class="rb">不可能</span><span class="rt">ふかのう</span></span>な<span class="ruby"><span class="rb">日常</span><span class="rt">にちじょう</span></span>も<br><span class="ruby"><span class="rb">山</span><span class="rt">やま</span></span>あり<span class="ruby"><span class="rb">谷</span><span class="rt">たに</span></span>あり<span class="ruby"><span class="rb">忙</span><span class="rt">いそが</span></span>しいけれど<br><span class="ruby"><span class="rb">攻略</span><span class="rt">こうりゃく</span></span>しよう キミと<br></p><details>  <summary>点我查看解析</summary>  <div>让重叠的心，合而为一</div>  <div>就连难以预测的日常，也会有高山低谷，让人手忙脚乱</div>  <div>让我们一起去攻略吧！</div>  <div>一つにして：合而为一</div>  <div>けれど：N4语法，虽然...可是，但是，表示转折</div></details><br><p class="hiragana">This is mana. Nobody can take. <span class="ruby"><span class="rb">平穏</span><span class="rt">へいおん</span></span>な<span class="ruby"><span class="rb">日々</span><span class="rt">ひび</span></span><span class="ruby"><span class="rb">取</span><span class="rt">と</span></span>り<span class="ruby"><span class="rb">戻</span><span class="rt">もど</span></span>すまで<br>そう This is mana. Nobody can take. キミの<span class="ruby"><span class="rb">隣</span><span class="rt">となり</span></span>にいるよ <span class="ruby"><span class="rb">当</span><span class="rt">あ</span></span>たり<span class="ruby"><span class="rb">前</span><span class="rt">まえ</span></span><br><span class="ruby"><span class="rb">机上</span><span class="rt">きじょう</span></span>の<span class="ruby"><span class="rb">空論</span><span class="rt">くうろん</span></span>より<span class="ruby"><span class="rb">逆風</span><span class="rt">ぎゃくふう</span></span>を<span class="ruby"><span class="rb">逆</span><span class="rt">ぎゃく</span></span>に<span class="ruby"><span class="rb">追</span><span class="rt">お</span></span>い<span class="ruby"><span class="rb">風</span><span class="rt">かぜ</span></span>に<span class="ruby"><span class="rb">変</span><span class="rt">か</span></span>えたなら<span class="ruby"><span class="rb">行</span><span class="rt">い</span></span>こう<br>(その<span class="ruby"><span class="rb">胸</span><span class="rt">むね</span></span>に<span class="ruby"><span class="rb">宿</span><span class="rt">やど</span></span>るは<span class="ruby"><span class="rb">強大</span><span class="rt">きょうだい</span></span>すぎる<span class="ruby"><span class="rb">パワー</span><span class="rt">Power</span></span>、<span class="ruby"><span class="rb">誰</span><span class="rt">だれ</span></span>の<span class="ruby"><span class="rb">手</span><span class="rt">て</span></span>にも<span class="ruby"><span class="rb">絶対</span><span class="rt">ぜったい</span></span>に<span class="ruby"><span class="rb">渡</span><span class="rt">わた</span></span>させはしないよ)<br>この<span class="ruby"><span class="rb">手</span><span class="rt">て</span></span>で（いつでも）<span class="ruby"><span class="rb">守</span><span class="rt">まも</span></span>るよ(<span class="ruby"><span class="rb">守</span><span class="rt">まも</span></span>る You are my big)<br>Shine！<br></p><details>  <summary>点我查看解析</summary>  <div>（这是无法被夺走的魔法力量）直至重新回到平稳的日子，</div>  <div>（这是无法被夺走的魔法力量）我会陪在你的身边，这是当然</div>  <div>不再纸上谈兵，而是逆转（逆风）变成顺风车，那么走吧！</div>  <div>（强大的力量寄宿在你的胸中，绝对不可以交给任何人手中）</div>  <div>我会亲手（一直都）将其守护（守护，你对于我而言，最璀璨的光）</div>  <div>取り戻す：收回，更为正式的「戻す」</div>  <div>隣にいる：陪在...的身边</div>  <div>当たり前：理所当然，自然</div>  <div>空論：空谈；机上の空論：纸上谈兵</div>  <div>逆風：除了字面意思「逆风」，可以表达「逆境、不利状况」的意思。逆風を逆に：逆风翻盘</div>  <div>追い風：和逆風是反义词，字面意思「顺风」，可以表达「顺境」的意思</div>  <div>変える：はげ山を水田に変える：将秃山变成水田。注意に和を的用法</div>  <div>～過ぎる：N4语法。同にくい等可以接在ます后，也能接名词、形容词词干、形容动词词干</div>  <div>この手で：用这双手。可以引申出「亲手」的意思。あの手この手で：千方百计</div></details><br><p class="hiragana"><span class="ruby"><span class="rb">不思議</span><span class="rt">ふしぎ</span></span>な<span class="ruby"><span class="rb">力</span><span class="rt">ちから</span></span>が<span class="ruby"><span class="rb">シンクロ</span><span class="rt">Sync</span></span>して<br><span class="ruby"><span class="rb">交差</span><span class="rt">こうさ</span></span>した<span class="ruby"><span class="rb">私</span><span class="rt">わたし</span></span>たちの<span class="ruby"><span class="rb">世界</span><span class="rt">せかい</span></span><br><span class="ruby"><span class="rb">何度</span><span class="rt">なんど</span></span>も<span class="ruby"><span class="rb">逢</span><span class="rt">あ</span></span>いたい、<span class="ruby"><span class="rb">エンドロール</span><span class="rt">End Roll</span></span>はまだ<br><span class="ruby"><span class="rb">知</span><span class="rt">し</span></span>らないままで、Let's RE-BOOT!<br></p><details>  <summary>点我查看解析</summary>  <div>不可思议的力量同步，在我们的世界交叉汇集</div>  <div>想和你数次相遇，我们还未结束</div>  <div>此刻仍是未知，让我们重启</div>  <div>何度も：需要区分「何度」和「何度も」，前者表示「多少次」，有疑问翻译；后者表示「好几次」。还有一个「何度でも」不管几次。</div>  <div>～はまだ：まだ名词活用，和原来的意思保持一致。还没有...</div></details><br><p class="hiragana"><span class="ruby"><span class="rb">ピンチ</span><span class="rt">Pinch</span></span>は<span class="ruby"><span class="rb">チャンス</span><span class="rt">Chance</span></span>に<span class="ruby"><span class="rb">上書</span><span class="rt">うわが</span></span>きして<br>どんな<span class="ruby"><span class="rb">世界</span><span class="rt">せかい</span></span>でも<span class="ruby"><span class="rb">大丈夫</span><span class="rt">だいじょうぶ</span></span><br><span class="ruby"><span class="rb">騒</span><span class="rt">さわ</span></span>がしいくらいがちょうどいいかもね<br><span class="ruby"><span class="rb">前世</span><span class="rt">ぜんせ</span></span>よりも<span class="ruby"><span class="rb">深</span><span class="rt">ふか</span></span>く<br><span class="ruby"><span class="rb">繋</span><span class="rt">つな</span></span>がる<span class="ruby"><span class="rb">愛</span><span class="rt">あい</span></span>を<span class="ruby"><span class="rb">コンティニュー</span><span class="rt">Continue</span></span><br></p><details>  <summary>点我查看解析</summary>  <div>逆境也会被重新改写为机会，无论是在哪个世界都没有关系</div>  <div>就算稍微有些吵闹，说不定正合我们的心意</div>  <div>相比于前世更加深沉，更紧密的爱，一直延续</div>  <div>上書きして：上書きる、改写，覆写</div>  <div>でも：どな...でも、无论怎样的...</div>  <div>くらい：名词接续，表示程度</div>  <div>ちょうど：表示正好。除此之外，它还有「稍微」的含义</div>  <div>ちょうどいいかもね：也许正合我意</div></details><h3 id="歌词分析"><a href="#歌词分析" class="headerlink" title="歌词分析"></a>歌词分析</h3><p>咕咕咕</p><h2 id="千恋＊万花"><a href="#千恋＊万花" class="headerlink" title="千恋＊万花"></a>千恋＊万花</h2><p>千恋＊万花是由 YUZU SOFT 制作的一部美少女游戏，是我入坑的第一部 Galgame！我永远喜欢朝武芳乃！！</p><p>柚子社白毛赛高！！柚子社（芳乃、宁宁）+崩坏星穹铁道（流萤）成功让我变成白毛控。</p><p>歌曲名称：恋ひ恋ふ縁（以恋结缘）</p><h3 id="传教时间-1"><a href="#传教时间-1" class="headerlink" title="传教时间"></a>传教时间</h3><p>贴一个官方的 OP 放到这里：</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?isOutside=true&aid=1756355771&bvid=BV1L4421S7Kr&cid=1631476281&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div><p>当然，它只有前面的一小半部分。所以我这里也顺便给个 OP 的全语音版本：</p><audio src="audio2.mp3" controls loop preload="metadata">  你的浏览器不支持 audio 标签。</audio><h3 id="歌词讲解-1"><a href="#歌词讲解-1" class="headerlink" title="歌词讲解"></a>歌词讲解</h3><p class="hiragana"><span class="ruby"><span class="rb">誠</span><span class="rt">まこと</span></span> <span class="ruby"><span class="rb">意地</span><span class="rt">いじ</span></span>の<span class="ruby"><span class="rb">悪</span><span class="rt">わる</span></span>い<span class="ruby"><span class="rb">神</span><span class="rt">かみ</span></span>の<span class="ruby"><span class="rb">所業</span><span class="rt">しょぎょう</span></span>か？<br><span class="ruby"><span class="rb">奇跡</span><span class="rt">きせき</span></span>？<span class="ruby"><span class="rb">縁</span><span class="rt">えにし</span></span>？<span class="ruby"><span class="rb">袂</span><span class="rt">たもと</span></span><span class="ruby"><span class="rb">触合</span><span class="rt">ふれあ</span></span>う<span class="ruby"><span class="rb">不思議</span><span class="rt">ふしぎ</span></span><br><span class="ruby"><span class="rb">花</span><span class="rt">はな</span></span>ひとひら<span class="ruby"><span class="rb">揺</span><span class="rt">ゆ</span></span>れて、<span class="ruby"><span class="rb">不意</span><span class="rt">ふい</span></span>に<span class="ruby"><span class="rb">宿</span><span class="rt">やど</span></span>ってた<br>うなじ<span class="ruby"><span class="rb">解</span><span class="rt">ほど</span></span>いてく<span class="ruby"><span class="rb">春風</span><span class="rt">はるかぜ</span></span><br></p><details>  <summary>点我查看解析</summary>  <div>难道是天意（神）不善，在戏谑人间？奇迹还是缘分？不可思议的相遇。摇曳的花儿，不经意地掩住自己，春风在脑后轻轻吹拂。（花儿丛中掩，春风抚我心）</div>  <div>誠（まこと）：真实，真诚，诚然。这里是问句的语句助词，很类似于向神明问「为什么」的虔诚感觉。</div>  <div>意地（いじ）：心术，用心；固执，倔强；志气，气魄。表达「神」可能是故意为之的意思。</div>  <div>所業：所作所为、行径。悪い神の所業：邪恶的神所作所为引申出「戏谑人间」的意思。</div>  <div>ひとひら：一片一枚，等同于いちまい。一片薄而平的一张。</div>  <div>不意に：不经意地。</div>  <div>うなじ：后脑勺。</div>  <div>解く：ほどく、とく。前一种意思包含了解开，还愿的意思。后一种在生活中用的更多：解开，拆开，解职等。</div></details><br><p class="hiragana"><span class="ruby"><span class="rb">戯</span><span class="rt">たわむ</span></span>れはそこそこに<br><span class="ruby"><span class="rb">恋手</span><span class="rt">こいて</span></span>ほどきしてくだしゃんせ<br><span class="ruby"><span class="rb">湯気</span><span class="rt">ゆげ</span></span>にほんのり<span class="ruby"><span class="rb">頬染</span><span class="rt">ほほそ</span></span>めて<br><span class="ruby"><span class="rb">夜風</span><span class="rt">よかぜ</span></span>に<span class="ruby"><span class="rb">願</span><span class="rt">ねが</span></span>ふ<br></p><details>  <summary>点我查看解析</summary>  <div>不要调笑他人，恋爱的绝妙之处需要向他人请教。水汽渐渐粘上脸颊，心愿随夜风飘荡。</div></details><br><p class="hiragana">いざ！！<span class="ruby"><span class="rb">蝶</span><span class="rt">ちょう</span></span>と<span class="ruby"><span class="rb">舞</span><span class="rt">まい</span></span>ひ <span class="ruby"><span class="rb">花</span><span class="rt">はな</span></span>となりて<br><span class="ruby"><span class="rb">衣</span><span class="rt">きぬ</span></span>を<span class="ruby"><span class="rb">乱</span><span class="rt">みだ</span></span>して<span class="ruby"><span class="rb">祓</span><span class="rt">はら</span></span>いましょう<br>あやなしココロの<span class="ruby"><span class="rb">穢</span><span class="rt">けが</span></span>れ<br><span class="ruby"><span class="rb">故</span><span class="rt">ゆえ</span></span>！！<span class="ruby"><span class="rb">刀</span><span class="rt">とう</span></span>となり <span class="ruby"><span class="rb">楯</span><span class="rt">たて</span></span>となりて<br>この<span class="ruby"><span class="rb">想</span><span class="rt">おも</span></span>ひ<span class="ruby"><span class="rb">護</span><span class="rt">まも</span></span>り<span class="ruby"><span class="rb">賜</span><span class="rt">たま</span></span>え<br><span class="ruby"><span class="rb">君</span><span class="rt">きみ</span></span>が<span class="ruby"><span class="rb">恋</span><span class="rt">こい</span></span>の<span class="ruby"><span class="rb">門</span><span class="rt">もん</span></span>を<span class="ruby"><span class="rb">歩</span><span class="rt">あや</span></span>めた<br></p><details>  <summary>点我查看解析</summary>  <div>来吧，愿化作飞舞的花，与蝶共舞。衣襟飘逸把禊祓除，却仍旧不明白心中的污秽。那便化作剑与盾，想着守护这心意，你的恋障已经被铲除。</div></details><br><p class="hiragana"><span class="ruby"><span class="rb">恋</span><span class="rt">こい</span></span>の<span class="ruby"><span class="rb">罠</span><span class="rt">わな</span></span>は<span class="ruby"><span class="rb">密</span><span class="rt">ひそ</span></span>やかに<span class="ruby"><span class="rb">仕掛</span><span class="rt">しか</span></span>けなきゃ<br><span class="ruby"><span class="rb">次</span><span class="rt">つぎ</span></span>の<span class="ruby"><span class="rb">一手</span><span class="rt">いって</span></span> すけすけだから<span class="ruby"><span class="rb">困</span><span class="rt">こま</span></span>る<br><span class="ruby"><span class="rb">鍛錬</span><span class="rt">たんれん</span></span>じゃどうにもなんない<br><span class="ruby"><span class="rb">揺</span><span class="rt">ゆ</span></span>れる<span class="ruby"><span class="rb">心模様</span><span class="rt">こころもよう</span></span><br>どっちが<span class="ruby"><span class="rb">先</span><span class="rt">さき</span></span>だ？<span class="ruby"><span class="rb">恋煩</span><span class="rt">こいわずら</span></span>い<br></p><details>  <summary>点我查看解析</summary>  <div>恋爱的陷阱就是要机关算尽。下一招却透露着困扰纠缠（下一招却马脚百出）。锻炼也对摇摆不定的心态无济于事。哪一个先陷入相思病（恋爱烦恼）呢？</div>  <div>すけすけ：透露着。すけすけだから：从...中透露出。</div>  <div>じゃ（では）どうにもなんない：无可奈何、无济于事。</div>  <div>どっち：哪一个。</div></details><br><p class="hiragana"><span class="ruby"><span class="rb">覚悟</span><span class="rt">かくご</span></span>して<span class="ruby"><span class="rb">通</span><span class="rt">とお</span></span>りゃんせ<br><span class="ruby"><span class="rb">夜道</span><span class="rt">よみち</span></span>と<span class="ruby"><span class="rb">乙女</span><span class="rt">おとめ</span></span>にご<span class="ruby"><span class="rb">用心</span><span class="rt">ようじん</span></span>♪<br><span class="ruby"><span class="rb">湯気</span><span class="rt">ゆげ</span></span>の<span class="ruby"><span class="rb">薫</span><span class="rt">かお</span></span>り<span class="ruby"><span class="rb">漂</span><span class="rt">ただよ</span></span>わせ、<span class="ruby"><span class="rb">誘</span><span class="rt">いざな</span></span>う<span class="ruby"><span class="rb">夜宴</span><span class="rt">やえん</span></span><br></p><details>  <summary>点我查看解析</summary>  <div>带着觉悟迈开步伐，小心夜路和少女哦！散发着蒸汽香气，在引诱你前往夜宴处。</div>  <div>通りゃんせ：日本童谣，意思表示「步行」。通りゃんせ→お通りなさい→通りなさい。<a href="https://m.youtube.com/watch?v=fjMlnLxqir0">童谣链接</a></div>  <div>用心：注意，小心，提防。</div></details><br><p class="hiragana"><span class="ruby"><span class="rb">実</span><span class="rt">げ</span></span>に！<span class="ruby"><span class="rb">本日</span><span class="rt">ほんじつ</span></span>は<span class="ruby"><span class="rb">デート</span><span class="rt">Date</span></span><span class="ruby"><span class="rb">日和</span><span class="rt">ひより</span></span><br>しどけなく<span class="ruby"><span class="rb">誘</span><span class="rt">さそ</span></span>いましょ？<br><span class="ruby"><span class="rb">憑</span><span class="rt">つ</span></span>きませ、<span class="ruby"><span class="rb">偲</span><span class="rt">しの</span></span>ぶ<span class="ruby"><span class="rb">恋夢</span><span class="rt">こいゆめ</span></span><br></p><details>  <summary>点我查看解析</summary>  <div>其实！今天是约会的好日子。何不不受拘束地放手邀约呢？绝美恋梦请快快附身吧（快快显现）！</div>  <div>日和：天气，趋势，晴天</div>  <div>しどけない：杂乱，散乱、幼小的；这里的意思引申出「不受拘束地」</div>  <div>憑き：本质为付く，表示附身吧！的意思。后面ませ为ます型尊敬语。</div>  <div>偲ぶ：回忆，追忆，想念、欣赏</div>x</details><br><p class="hiragana"><span class="ruby"><span class="rb">故</span><span class="rt">ゆえ</span></span>！！<span class="ruby"><span class="rb">静</span><span class="rt">せい</span></span>となり <span class="ruby"><span class="rb">動</span><span class="rt">どう</span></span>となりて<br><span class="ruby"><span class="rb">我</span><span class="rt">われ</span></span>を<span class="ruby"><span class="rb">導</span><span class="rt">みちび</span></span>き<span class="ruby"><span class="rb">賜</span><span class="rt">たま</span></span>え<br><span class="ruby"><span class="rb">君</span><span class="rt">きみ</span></span>の<span class="ruby"><span class="rb">剣</span><span class="rt">けん</span></span>が<span class="ruby"><span class="rb">ハート</span><span class="rt">Heart</span></span>を<span class="ruby"><span class="rb">射抜</span><span class="rt">いぬ</span></span>いた<br><br></p><details>  <summary>点我查看解析</summary>  <div>所以！无论是动还是静，都请引导我走上正途吧！</div>  <div>導く：引导，指导</div>  <div>導き賜え：请...做。复合动词尊敬语。请引导我走上正途。我的心早已被你的剑所俘获了。</div>  <div>射抜いた：射貫く，（枪弹，箭等）射穿</div></details><br><p class="hiragana">いざ！！<span class="ruby"><span class="rb">蝶</span><span class="rt">ちょう</span></span>と<span class="ruby"><span class="rb">舞</span><span class="rt">まい</span></span>ひ <span class="ruby"><span class="rb">花</span><span class="rt">はな</span></span>となりて<br><span class="ruby"><span class="rb">衣</span><span class="rt">きぬ</span></span>を<span class="ruby"><span class="rb">乱</span><span class="rt">みだ</span></span>して<span class="ruby"><span class="rb">祓</span><span class="rt">はら</span></span>いましょう<br><span class="ruby"><span class="rb">前世</span><span class="rt">ぜんせ</span></span>から<span class="ruby"><span class="rb">繋</span><span class="rt">つな</span></span>がる<span class="ruby"><span class="rb">運命</span><span class="rt">さだめ</span></span><br><span class="ruby"><span class="rb">故</span><span class="rt">ゆえ</span></span>！！<span class="ruby"><span class="rb">刀</span><span class="rt">とう</span></span>となり <span class="ruby"><span class="rb">花</span><span class="rt">はな</span></span>と<span class="ruby"><span class="rb">生</span><span class="rt">い</span></span>きて<br>この<span class="ruby"><span class="rb">愛</span><span class="rt">あい</span></span> <span class="ruby"><span class="rb">護</span><span class="rt">まも</span></span>り<span class="ruby"><span class="rb">賜</span><span class="rt">たまもの</span></span>え<br><span class="ruby"><span class="rb">君</span><span class="rt">きみ</span></span>はもう<span class="ruby"><span class="rb">縁</span><span class="rt">えにし</span></span>に<span class="ruby"><span class="rb">選</span><span class="rt">えら</span></span>ばれた<br></p><details>  <summary>点我查看解析</summary>  <div>来吧，愿化作飞舞的花，与蝶共舞。衣襟飘逸把禊祓除，前世开始紧密相连的命运。那便化作剑，和花一起同生共死，请守护好这份爱，姻缘已然选择了你啊！</div></details>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="日本語" scheme="https://blog.pengdonglai.com/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
    <category term="Galgame" scheme="https://blog.pengdonglai.com/tags/Galgame/"/>
    
    <category term="琐碎" scheme="https://blog.pengdonglai.com/tags/%E7%90%90%E7%A2%8E/"/>
    
  </entry>
  
  <entry>
    <title>N3 日语部分语法点归总</title>
    <link href="https://blog.pengdonglai.com/2024/08/11/japanese-grammar-2/"/>
    <id>https://blog.pengdonglai.com/2024/08/11/japanese-grammar-2/</id>
    <published>2024-08-11T04:18:41.000Z</published>
    <updated>2024-09-22T09:18:57.151Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>本文仍在加工中… 本文中「字」作为词性说明表示「字典型」，就是大家熟悉的动词原形。</p></blockquote><h2 id="关于-N3"><a href="#关于-N3" class="headerlink" title="关于 N3"></a>关于 N3</h2><p>2010年日本语能力考试进行了全面改版，将原来的四个级别调整为五个级别。其中N3就是新增设的级别，依此来解决原来的二级考试与三级考试水平差异较大的问题。新考试与原来考试水平对应如下：</p><p>日语N1级：与原来的1级水平及评价合格标准大体相同，只是在原有的基础上提高测定能否达到某种运用能力的难度范围。<br>日语N2级：与现行的2级水平大体相同<br>日语N3级：在现行的2级与3级之间的水平<br>日语N4级：与现行的3级水平大体相同<br>日语N5级：与现行的4级水平大体相同</p><p>在 JIPT 的定义上看：N3属于中等水平，基本语法，汉字300字左右，词汇1500左右，能够使用日常生活会话，能够阅读简单文章，日语学习时间大约300小时，初级日语全部掌握的程度。</p><p>因此，N3在 JIPT 中属于中等水平。这个时候属于承上启下的阶段，对于 N4、N5 的知识点需要融会贯通，才能对 N2 以上高难的知识点进行突破。</p><p>本文会以分类的形式，对 N3 涉及到的知识点，进行融合总结。其中也会有对于 N4N5 涉及到的一些知识点的梳理，它们通常来说是作为 N3 知识点需要被用于区分的部分。</p><h2 id="第一类：时间（时间频度、时间程度）"><a href="#第一类：时间（时间频度、时间程度）" class="headerlink" title="第一类：时间（时间频度、时间程度）"></a>第一类：时间（时间频度、时间程度）</h2><h3 id="ごとに、おきに、たびに"><a href="#ごとに、おきに、たびに" class="headerlink" title="ごとに、おきに、たびに"></a>ごとに、おきに、たびに</h3><p>(名·数·字) ごとに (每)</p><p>(数) おきに (有隔)</p><p>(名の·字) たびに (每次)</p><p>三者前面接续不一样。たびに（每次）前面不能加数量词的，ごとに（每）的前面不能加动词性的名词。</p><p>时间单位大于等于天，ごとに（每）・おきに（每间隔）两者存在区别。两者均表示时间频率，但后者实际上在这种情况下是前者的两倍。小于 1 天，两者表达意思完全一样，不用区分。</p><p>名词+ごとに，表示：连带着前面的名词，一起做。</p><ol><li>一つ失敗する <strong>(ごとに·たびに)</strong> また一つ成長する。</li></ol><p>接续动词原形的时候，ごとに・たびに表达的意思是完全一样的。需要注意的是，ごとに之前接名词的时候，是不用加の的。</p><ol start="2"><li>このシステムは1年 <strong>(ごとに、おきに)</strong> 連新される。</li></ol><p>たびに不可以接在表示数量的名词后面。中文可以说的通，每次一年。但是日语里面不可以这么表达。</p><ol start="3"><li>駅へ向かうバスは15分 <strong>(ごとに、おきに)</strong> 出ている。</li></ol><p>同上。</p><ol start="4"><li>5メートル <strong>(ごとに、おきに)</strong> 置く。</li></ol><p>同上。</p><ol start="5"><li>リんごを皮 <strong>ごと</strong> 食べる。</li></ol><p>ごと（に）可以接续名词。但需要注意不能是动作性的名词。</p><ol start="6"><li>デートの <strong>たびに</strong> 必ずお腹が痛くなる。ごとに(×)</li></ol><p>接续たびに之前的名词，需要加の。不能用ごとに。</p><ol start="7"><li>運動の <strong>たびに</strong> 痩せていく。ごとに(×)</li></ol><p>同上，不能用ごとに。</p><ol start="8"><li>1日 <strong>ごとに</strong> 痩せていく。たびに(×)</li></ol><p>たびに前面不能接表示数量的名词。</p><h3 id="くらい、ほど、ごろ"><a href="#くらい、ほど、ごろ" class="headerlink" title="くらい、ほど、ごろ"></a>くらい、ほど、ごろ</h3><p>(数) くらい・ぐらい (左右)</p><p>(数·名) ほど (左右、如…一样)</p><p>(数·形·名の) ごろ (左右、时候)</p><p>三者前面接续不一样。</p><p>くらい・ぐらい能表示时间点的左右。例如 10 时左右：１０時くらい；10 小时左右：１０時間くらい；</p><p>ほど只能表示时间段的左右。10 小时、1 天左右：１０時間ほど・１日ほど</p><p>ごろ只能表达时间点的左右。</p><ol start="9"><li>今日の会議は3時 <strong>(くらい・ぐらい・ごと)</strong> 始まる。</li></ol><p>表示时间点，不能用ほど。</p><ol start="10"><li>大阪から東京まで3時間 <strong>(くらい・ぐらい・ほど)</strong> かかる。</li></ol><p>表示时间段，不能用ごろ。</p><ol start="11"><li>仕事は山<strong>ほど</strong>ある。</li></ol><p>N＋ほど的时候，ほど表示比喻：如…一样。这句话的意思是「工作像山一样」，表示有很多工作。</p><ol start="12"><li>若い子供の<strong>ころに</strong>、日本へ行ったことがある。</li></ol><p>N＋ころ的时候，表示「时候」。这种情况对于形容词接续也适用。</p><h2 id="第二类：状态（何时间、何状态）"><a href="#第二类：状态（何时间、何状态）" class="headerlink" title="第二类：状态（何时间、何状态）"></a>第二类：状态（何时间、何状态）</h2><h3 id="場合、際"><a href="#場合、際" class="headerlink" title="場合、際"></a>場合、際</h3><p>(普·形·名の) 場合 (时候、情况)</p><p>可以跟時（とき）混用。可以看例句 1。</p><p>(た·字·名の) 際 (时候、之际)</p><p>什么什么之际。相比于時・場合更加正式。两者表达的意思完全一致，但是際更加正式。</p><p>際一般情况下不加动词否定，也不加形容词。</p><ol><li><p>パスワードを忘れた **(場合、時)**、こ連絡くださ。</p></li><li><p>体調が悪い <strong>場合</strong> は、休んでもいいです。</p></li><li><p>雨の <strong>場合</strong>、試合は中止です。</p></li><li><p>免許を更新する **(際、時)**、写真は必要だ。</p></li></ol><p>这种情况下可以多种情况混用，只是正式情况有所区别。際一般情况下不加动词否定，也不加形容词。</p><ol start="5"><li>お困りの <strong>際</strong> は、いってもご連絡ください。</li></ol><p>お困りの是一种非常尊敬的用法，当您遇到了…</p><h3 id="まま、っぱなし"><a href="#まま、っぱなし" class="headerlink" title="まま、っぱなし"></a>まま、っぱなし</h3><p>(た·ない·名の) まま (搁置、一直)</p><p>(ます形) っぱなし (搁置、一直)</p><p>很多时候可以互换使用。<strong>っぱなし前面只能接ます型</strong>。在「一直否定」的状态中。这种情况只能用まま。这种情况在ない＋まま这种接续中出现。まま这种形态，表达出来的状态，需要是可以被看到的。っぱなし可以表达「看不到的动作」「一直在进行没有结局」。如：一直在唱歌、一直在走路。</p><ol><li>メがネをかけた<strong>まま</strong>寝た。メがネをかけ<strong>っぱなし</strong>で寝た。</li></ol><p>这种情况下，两者都能用。但是っぱなしで之前必须将名词改造成ます型，两者表达的意思是完全一样的。<br><strong>即便是前面的动词，没有表达过去时概念。</strong></p><ol start="7"><li>ずっと分からない<strong>まま</strong>だ。</li></ol><p>在「一直否定」的状态中。这种情况只能用まま。这种情况在ない＋まま这种接续中出现。</p><ol start="8"><li>２４時間走りっぱなしで、疲れた。</li></ol><p>除此之外，まま这种形态，表达出来的状态，需要是可以被看到的。っぱなし可以表达「看不到的动作」「一直在进行没有结局」这种情况。</p><p>例如：一直在唱歌、一直在走路。这种情况适合用っぱなし。二十四小时都在跑步。</p><h3 id="ずに、ず"><a href="#ずに、ず" class="headerlink" title="ずに、ず"></a>ずに、ず</h3><p>(ない形) ずに (&#x3D;ないで、不做)</p><p>(ない形) ず (&#x3D;なくで、不做)</p><p>他们相当于分别替换ないで、なくで。等同于两者的区别。</p><ol start="9"><li><p>挨拶も **(せずに、しないで)**、出て行った。</p></li><li><p>砂糖を入れ　**(ずに、ないで)**、飲む。</p></li></ol><p>表示两个先后的动作，前面的动作没做，就做了后面的动作。</p><ol start="11"><li><p>日本へ行け **(ず、なくて)**、残念です。</p></li><li><p>お金が <strong>なくて</strong>、大変だ。</p></li></ol><p>形容名词的时候，なくて不能换成ず。</p><h2 id="第三类：条件（如果、一…就…）"><a href="#第三类：条件（如果、一…就…）" class="headerlink" title="第三类：条件（如果、一…就…）"></a>第三类：条件（如果、一…就…）</h2><h3 id="たら、と、ば"><a href="#たら、と、ば" class="headerlink" title="たら、と、ば"></a>たら、と、ば</h3><p>たら（一…就、如果…的话、做了…之后）</p><p>と（一…就、做了…之后）</p><p>ば（一…就、如果…的话）</p><p>均有一…就，的含义。可以表示自然现象，物理规则。但是ば不可以用来描述过去的物理规则。除此之外，たら、と可以用来表示突然发生的一件事情，此时也没有ば的用法。</p><p>如果…的话：后面的句子，并不表达必然的结果。</p><p>たら表示如果…的话，通常来说表示「单独的一次事件」。たら相比于と更加口语化。</p><p>ば表示如果…的话的含义的时候，后面不可以出现意志，命令，请求的形式。除非一些特殊情况，例如前后主语不是同一个。或者前半句话表示某个事情的状态。</p><p>と、たら均有做了…之后的意思。使用と存在一个额外的意思：表示这个动作是一个周而复始的习惯性动作。</p><ol><li>春になる **と(たら・ば)**、桜が咲く。</li></ol><p>一…就，的含义。表示自然现象。</p><ol start="2"><li>このおみを押す **と(たら・ば)**、窓が開きます。</li></ol><p>一…就，的含义。表示物理规则（按钮被按下的话，窗户就开了，所以这里被称之为物理规则感觉也不是很合适）。</p><ol start="3"><li>このボタを押す **と(たら)**、窓が開きました。</li></ol><p>一…就，的含义。表示过去的物理规则。此时不可以使用ば。</p><ol start="4"><li>駅に着く **と(たら)**、先生がいた。</li></ol><p>たら、と可以用来表示突然发生的一件事情，此时也没有ば的用法。</p><ol start="5"><li>日月雨が降っ<strong>たら</strong>、運動会は中止です。</li></ol><p>后面的从句子，并不表达必然的结果。たら表示如果…的话，通常来说表示「单独的一次事件」。这个地方可以使用ば。</p><ol start="6"><li>休みたなっ<strong>たら</strong>、旅行に行きましょう。</li></ol><p>ば表示如果…的话的含义的时候，后面不可以出现意志，命令，请求的形式。</p><ol start="7"><li>ご飯を食べ**たら(と)**、シャワーを浴びる。</li></ol><p>と、たら均有做了…之后的意思。使用と存在一个额外的意思：表示这个动作是一个周而复始的习惯性动作。</p><p>这个例句，虽然说两个词都可以使用，但是使用と会多一层含义。</p><h3 id="なら"><a href="#なら" class="headerlink" title="なら"></a>なら</h3><p>なら（如果…的话）</p><p>有些情况下，只能用なら。比如说给对方提供信息的时候，表示建议。一般使用なら。</p><p>なら可以跳出时间先后顺序。站在现在的角度去预测未来要发生的事情，然后这件未来要发生的事情使用なら，表示未来。</p><ol start="8"><li>山田さんが行け **ば(たら・なら)**、僕も行く。</li></ol><p>ば表示如果…的话的含义的时候，后面不可以出现意志，命令，请求的形式。但是这两个主语并不一样。</p><p>前后主语不一样的情形，可以使用なら。</p><ol start="9"><li>時間がなけれ **ば(たら・なら)**、教えて。</li></ol><p>ば表示如果…的话的含义的时候，后面不可以出现意志，命令，请求的形式。但是前半句话表示某个事情的状态。</p><p>前半句话表示某个事情的状态，可以使用なら。</p><ol start="10"><li>日本へ行く<strong>なら</strong>、奈良はいいですよ。</li></ol><p>给对方提供信息的时候，表示建议。这种情况下只能使用なら。</p><ol start="11"><li>車の運転する<strong>なら</strong>、酒は飲まないように。</li></ol><p>なら可以跳出时间先后顺序。比如上面那句话，喝酒肯定在开车之前，但是なら被用在了开车的半句上。</p><ol start="12"><li>明日雨が降る<strong>なら</strong>、今日のうち出かけよう。</li></ol><p>なら可以跳出时间先后顺序。なら在这里具体表达的含义是：站在现在的角度去预测未来要发生的事情，然后这件未来要发生的事情使用なら，表示未来。这种情况下也可以归咎于打乱时间顺序。</p><p>从这个角度解释たら，意思就变为了：等将来的事情发生之后，再去采取行动。这个时候，第二句话使用「今日…」很显然不合规。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="日语学习" scheme="https://blog.pengdonglai.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="日本語" scheme="https://blog.pengdonglai.com/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
    <category term="语法" scheme="https://blog.pengdonglai.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>肖邦：大师之作（上）</title>
    <link href="https://blog.pengdonglai.com/2024/05/12/chopin-masterpieces/"/>
    <id>https://blog.pengdonglai.com/2024/05/12/chopin-masterpieces/</id>
    <published>2024-05-12T12:27:54.000Z</published>
    <updated>2024-08-31T04:27:30.118Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>[!Warning]<br>本页面使用了比较多的 <code>iframe</code> 标签，它们大多使用懒加载策略。尽管 Youtube 针对于咱外页的优化有着极高水平，但是仍然会在一些配置不太好的电脑性能表现不佳。请尽量避免快速滑动页面，以造成大量的 iframe 一并加载。</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我自幼学习钢琴，并且极为侥幸地一直学了下来，至今 16 年感觉也算是小有所成。水平我自然是不太行，不过在这个过程中，我渐渐培养出了对这类音乐的喜爱。虽然说法不严谨，我们一般在大众的认知中称呼其为「古典音乐」——它泛指 20 世纪中叶前西方流派的，以钢琴，小提琴为代表的，历史悠久乐器为主演的音乐，以纯音乐为主。它名家辈出，从莫扎特，海顿，到贝多芬，后来进阶到一些更为细分领域的大师，肖邦，李斯特，德彪西，拉赫玛尼诺夫等。是他们的创作和表演，构成了西方近代史上，乃至全人类的一块壮丽的瑰宝。</p><p>我为什么想做这个系列：</p><ul><li>想使用一种另类的（区别于实体专辑）方式，在自己留下记忆的地方，以专辑的方式保存它们。</li><li>想使用文字描述聆听它们的感受。</li><li>缺乏与其他人交流的途径。博客是我没有限制的发声渠道，我可以畅所欲言。</li></ul><hr><p>一提到肖邦，人们几乎会下意识地将他与一个词联系在一起：浪漫。他被誉为十九世纪欧洲浪漫主义音乐的典范代表，在钢琴作品领域达到了浪漫主义时期的巅峰。尤其是他的一系列夜曲，旋律优美、内容丰富、情感细腻，使他获得了「钢琴诗人」的称号。</p><p>但是这绝对不意味着肖邦就等同于浪漫，唯美，温柔。这很可能是仅仅透过通俗易懂的「夜曲」系列就对肖邦进行的简单的评价。事实上，作为诗人，他最难能可贵的，是用诗一般的旋律向你娓娓道来，道来的，既有婉转的小调，更有宏大的篇章。</p><p>笔者文笔不佳，但是其它大家，赵越胜如此评价肖邦：肖邦的作品精致却不矫饰，抒情却不滥情，忧伤却不嚎哭，绮旎却不风骚。听懂了肖邦的人都能感到他的音乐织体丰厚繁复又晶莹剔透。深灰色的悲哀衬着宝蓝的底色。即使泪水盈眶，泪珠也不落下。</p><p>因此，我们透过肖邦，看到了是一个复杂的，全面的，多面的，有血有肉的，有思想有感情的，有才华有天赋的，有创造力有想象力的，有音乐有诗歌的，有浪漫有现实的，有激情有理智的，有温柔有坚强的，有天才有伟大的复合体。唯一不变的，是长居法国和波兰精神赋予他最核心内核，为那个时代，属于浪漫派时代的最闪亮的一颗明星之一。</p><p>本文接下来会对肖邦的主要之作，结合我的一些理解，进行流水账式列举。既然会进行鉴赏，那就不可能完全主观，因此一定存在立场偏向。选取的曲目亦有主观感受。<strong>本人没有专业学习过乐理，对于音乐的分析更多的凭借自己的感受和较为非专业性的描述，并且会在一些地方贴合主流观点进行说明。</strong>在这个内容中，如果您有特别想跟博主交流的地方，或者争议之处，欢迎通过邮件交流。现实中认识我的朋友，也可以直接找到我。如果这个过程中出现了冒犯之处，以你为准并且我提前向你致以诚挚的道歉。</p><p>那么，我们开始。</p><h2 id="Ballade-叙事曲"><a href="#Ballade-叙事曲" class="headerlink" title="Ballade&#x2F;叙事曲"></a>Ballade&#x2F;叙事曲</h2><p>肖邦共创作了四首叙事曲，皆为单乐章钢琴独奏，并需要较高弹奏技术。叙事曲在法文中原本是指谣曲，而肖邦则是钢琴叙事曲的首创者。如果让我选一个肖邦最推荐的作品，我应该不出意外的会从这四首里面进行选择。</p><h3 id="Ballade-No-1"><a href="#Ballade-No-1" class="headerlink" title="Ballade No.1"></a>Ballade No.1</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" width="560" height="315" src="https://www.youtube-nocookie.com/embed/BSFNl4roGlI?si=i-xjAF3T48sw4JEw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Krystian Zimerman 克里斯蒂安·齐默尔曼</p><p>G 小调第 1 号叙事曲，作品 23，于 1831 年创作。当时是肖邦早年于维也纳生活，受思乡之苦，适逢波兰发生十一月起义，因此将感受反映于此曲中。</p><p>罗伯特·舒曼对这首曲目曾说：</p><blockquote><p>I received a new Ballade from Chopin. It seems to be a work closest to his genius (although not the most ingenious) and I told him that I like it best of all his compositions. After quite a lengthy silence he replied with emphasis, “I am happy to hear this since I too like it most and hold it dearest.”</p><p>我收到肖邦新一首叙事曲。虽然它并不是他最为精致的一首曲，但看来是最能反映他天分的，我告诉他这是他所有的作品中我最喜欢的。过了一段沉寂，他强调：『我很开心听到这，因为我也最喜欢它。』</p></blockquote><p>喜爱之情溢于言表。</p><blockquote><p>有人认为这首叙事曲是取材于密茨凯维茨的《格拉辛娜》，但一般认为应是密茨凯维茨的史诗剧作《康拉德·华伦洛德》。这部叙事诗剧写11世纪立陶宛被日尔曼骑士兵团所灭，立陶宛后裔华伦洛德被敌俘虏，并被抚养成人，受到敌方重用。立陶宛老人乔装成唱诗的歌手深入虎穴，得以接近华伦洛德。通过反复启发教育，终于使华伦洛德醒悟，立志牺牲个人为祖国效力，最后终于使立陶宛人得胜，而华伦洛德却被敌人处死。<br>乐曲采用自由奏鸣曲式写成。具有庄重的宣叙调特点的 8 小节序奏之后，出现了安详而略带忧虑的第一主题，老人开始回忆和讲述一个遥远的故事。第二主题是舒展明朗的，使人感受到华伦洛德在知道自己身世后的感慨之情。这两个主题在展开部构成了惊心动魄的戏剧性效果，第一主题不断地增强悲剧色彩，第二主题则发展成具有英雄气概的主题，以至在第二主题再现时，绝然不同于呈示部那抒情温柔的形象，已成长为成熟的、誓为祖国雪耻的英雄形象了。乐曲的尾声将全曲的情绪再一次推向高潮。结尾是悲壮的，象征着华伦洛德为国壮烈捐躯的英雄气概。</p></blockquote><p>反映的背景故事，和现实世界发生的故事如出一辙，遥相呼应。</p><p>本作的技术难点在于各种超八度大跳，这些部分正好对应曲目中华彩段，反映了现实世界十一月起义的激烈战斗。一般认为，华彩段的处理直接影响这部作品的演绎效果（当然对其它叙事曲也一样）。但是除了华彩段，本叙事曲的主旋律反映出来的低沉气氛，想要演绎的非常好，同样也需要用心。本作正是摆脱肖邦「浪漫」风格的最好证明。因为它是难得的写实作品。开头段以略微雄壮的六和弦作为开头，到主旋律低沉的处理，像是一副缓缓展开的史诗。之后主旋律和华彩段相互交接演绎，主旋律表达了低沉的氛围，而华彩段表现了革命的激烈战斗和紧张气氛。如果说驾驭一部革命史诗的难度不低，那么这就是演奏好这首曲子的代价。</p><h3 id="Ballade-No-2"><a href="#Ballade-No-2" class="headerlink" title="Ballade No.2"></a>Ballade No.2</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/Wslm1ZL9EI8?si=h0VzUbFbdJLQ7g7Q" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Krystian Zimerman 克里斯蒂安·齐默尔曼</p><p>F 大调第 2 号叙事曲，作品 38，在 1836 至 1839 年分别于法国的诺昂维克和西班牙的马约卡岛创作，并献于罗伯特·舒曼。</p><p>如果我们有参与这首曲子的评价，我们可以听到这样的言论：</p><blockquote><p>肖邦曾说，当他要写这首叙事曲时，是受密茨凯维茨的长诗《斯维台茨湖》的感动。那首长诗也是写立陶宛古代的爱国故事，大意是：立陶宛遭到异族侵略，青年人都去前方作战了，当留在城里的老幼妇孺听到敌人已迫近城门时，他们无力抵抗，只得乞求上苍，宁可让洪水淹没城市，与敌人同归于尽。果然，奇迹出现了，城市变成了一片湖泊。经过许多世代以后，立陶宛后裔漫步湖畔，探寻着这古代传说的遗迹。突然，有水仙从湖底浮起，向人们讲述了这个故事，然后又潜身返回湖底。肖邦这首叙事曲也并非是对这首长诗的具体描述。它由平静、优美的抒情乐段和暴风骤雨般的戏剧性乐段交织构成，我们只能根据它特定的音乐形象和情绪气氛，对密茨凯维茨的长诗进行一定的联想。</p></blockquote><p>但是实际上，通过英文世界的资料发现，这首曲子似乎并不像我们想象的那么美好。关于它的批评声很多，尤其是在对比他更加天才横溢的 1 号叙事曲后，更加如此。维基百科有这样的描述：「该作品受到一些著名钢琴家和音乐学家的批评，甚至包括其被奉献着舒曼，认为其不如第一部作品巧妙。关于其灵感，存在一定程度的分歧，人们经常声称它的灵感来自于亚当·密茨凯维奇的诗《斯维台茨湖》，但这种说法没有得到证实，《叙事曲第三号》有时被归因于这首诗也是如此。」</p><p>原文在这里 <a href="https://en.wikipedia.org/wiki/Ballade_No._2_(Chopin)">https://en.wikipedia.org/wiki/Ballade_No._2_(Chopin)</a>：</p><blockquote><p>The piece has been criticized by some prominent pianists and musicologists, including its dedicatee Schumann, as a less ingenious work than the first.There is some degree of disagreement as to its inspiration, with the claim, often made that it was inspired by Adam Mickiewicz’s poem Świtezianka, the lake of Willis, but this claim is unsubstantiated, and the Ballade No. 3 is sometimes attributed to this poem as well.</p></blockquote><p>但是就我看来，这首曲子同样也有很多可圈可点的地方。首先它在一定程度在和 1 有着相似之处，因为它同样是主旋律+华彩的基本架构。但是相比于 1 的写实，2 应该没有什么争议地被认为，肖邦融入了更多自己的想法。这体现在主题 1 和 2 肖邦的味道更浓厚（虽然这里同样存在非常多的争议，比如混乱感比较强），但是在第一个主题 2 呈现（小调部分）之后，F 大调主题以一种出色的方式扩展，而这种类似「史诗般」的华彩段相比于 1 来说，连贯性更强并且情绪渲染更加合理（看人，1 极有可能是受到了写实风格的影响）。最后的结尾说实在 2 比 1 更加干净，同样都是在高潮中收尾，1 有一种意犹未尽的感觉，2 则更加干净，更加纯粹。</p><h3 id="Ballade-No-3"><a href="#Ballade-No-3" class="headerlink" title="Ballade No.3"></a>Ballade No.3</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/BkPLDoZXlHQ?si=bTkxnWRUw_N4-PL1" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Krystian Zimerman 克里斯蒂安·齐默尔曼</p><p>降 A 大调第 3 号叙事曲，作品 47，1841 年始作。这首叙事曲是献给他的学生宝琳·德·诺阿耶（Pauline de Noailles，1823-1844）。根据维基百科来源，它的灵感通常被认为是亚当·密茨凯维奇的诗《Undine》，也被称为 Świtezianka，这与第二首不谋而合地来自于同一位作者。不过需要说明的是，肖邦从未证实过哪些文学来源为他的叙事曲提供了创作动力。很可能他根本不希望听众知道，而是从他的音乐中汲取自己的叙述。</p><p>即便是来源类似，但是从这两首曲子的风格来说，肖邦应该选择了不同的故事。一般认为，这首诗是叙述对爱情不忠诚的人终遭报应的民间传说故事，故事的主人公是一位骑士和一位少女。它的来源无从考证，不过这依然影响不了第三首是完全独特于第一首、第二首的存在。</p><p>叙事曲以一段带有「dolce」字样的冗长介绍开始。引子在旋律上与作品的大部分内容无关，但在作品的结尾和高潮处重复出现，一如故事所言，「骑士向年轻美丽的少女表达自己的心意，少女被骑士的热情打动，愿意与骑士约会」，第一段作为这段故事的开头非常合适。在引子之后，肖邦在一个部分引入了一个新的主题 B，这个主题在我看来可以说是叙事曲中最像圆舞曲的部分，但是又不像圆舞曲那样子充满高贵典雅，而是一种非常轻灵的表现形式，宛如骑士与少女在嬉戏打闹。中音部分很快发展成激烈的 F 小调和弦部分，并再次回到A♭，就像男人与女人，也仿佛恋爱时的心情，跌宕起伏。</p><p>随后进入了变奏，这是主题 B 的变奏。对应故事的原文，很有可能这里就是对应了另外一位美丽的女子，相比之前的少女，更加精致且有魅力。这便是之前的少女——水仙女，化作的另一个女人，来考验骑士的真心。在 124 小节左右，骑士不由自主的跟着水仙女的舞步，愚蠢、负心汉的嘴脸慢慢的暴露出来。却不知水仙女已经看透了他，并且怒不可遏，决心报复。</p><p>157 小节开始音乐开始变得阴暗，右手的旋律像是不再伪装的水仙女在控诉骑士的种种行为，表达自己的愤怒。左手则像原本平静的湖水开始涌动，巨大的危机正向骑士席卷而来。随后进入本作的高潮部分——主题 B 以华丽，恢宏的形式展开，但是对我们的男主人公来说，这毫无疑问显示了这是水仙女的报复。如果说以前的水仙女和他在一起在水中嬉戏打闹，是一开始的主题 B。那么此时的主题 B 又嬉戏玩笑的水花，在这一刻化作了滔天巨浪，宛如回旋镖一般击中了骑士。随后短暂的宁静更像是骑士的哀求，可惜水仙女已经不给他机会。快速跑动的音阶和咆哮的和旋，一如水仙女掀起的滔天巨浪将骑士淹没，任他怎么挣扎都无法逃脱。最后曲子就在快音阶收尾，很显然骑士没有得到水仙女的原谅。</p><p>我的评价是：剧情太狗血，希望这不是真的。狗血的剧情不会影响音乐的美感。</p><h3 id="Ballade-No-4"><a href="#Ballade-No-4" class="headerlink" title="Ballade No.4"></a>Ballade No.4</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/pe-GrRQz8pk?si=Hvnnx6iXxrNa09gZ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Krystian Zimerman 克里斯蒂安·齐默尔曼</p><p>F小调第四叙事曲，作品 52，于 1842 年在巴黎完成。它通常被认为是 19 世纪钢琴音乐的杰作之一，和第一首有着极为类似的地位。维基百科说，在四首叙事曲中，它被许多钢琴家认为是技术上和音乐上最困难的。它也是最长的，大约需要十到十二分钟的表演时间。根据约翰·奥格登的说法，它是「肖邦所有作品中最崇高、最强烈和最强大的作品……令人难以置信的是它只持续了十二分钟，因为它包含了一生的经历。」该作品献给纳撒尼尔·德·罗斯柴尔德 (Nathaniel de Rothschild) 的妻子罗斯柴尔德男爵夫人 (Baroness Rothschild)。阿尔弗雷德·科尔托在他的肖邦叙事曲版本的序言中声称，这首叙事曲的灵感来自亚当·密茨凯维奇的诗《三个兄弟》，讲述了三兄弟被父亲派去寻找宝藏，并与三个波兰人一起返回的故事。</p><p>说实在，第四叙事曲确实可以听出来艺术含金量非常高。但是我个人确实没有太听懂，应该是我的理解层面还没有达到。它与肖邦的其他叙事诗有很大的不同，这不是一个戏剧性的史诗，而是一个抒情的故事（这不废话，事实上，2-4 号叙事曲都可以是这个风格）。在整部作品中，作曲家完全没有使用情感的对比，只有一些抒情色彩相近、音调完全不同的音乐形象相互交替，只有在结尾才出现肖邦大型作品中独有的悲壮、激情、慷慨的形象。</p><p>一般在中文互联网认为，这是肖邦对晚年生活的独白。这自然是无从考证的东西。不过从这首曲子的风格以及结构分析来说，确实自洽。咋听下来，曲子的前半段保持着另类的平静，但是结合肖邦中晚年（他没有生理意义的中晚年，因为他 39 岁就去世了。）的情况来看，这所谓的百般宁静，又何尝不是变着花子诉说着自己「成熟」的痛苦呢？宁静之下，潜藏着痛苦和不太容易被听出来的不甘和呐喊。时不时地和的力度变化，将这种不甘和呐喊，仿佛要把这种情绪推向高潮，却又不太坚决。与众不同的是，这首曲子主旋律的再现部的前面的一小段是一段凄凉的高音独奏，这和以往的风格截然不同。最后的高潮一波接着一波，但是最后的部分居然是休息了一小会才到来，很像是一种感觉，那就是呐喊声充满了无力感——也许是我自作多情了，肖邦似乎是比较怕让别人猜到他真正的想法的。</p><p>网络上的评价，我觉得也很有道理：</p><blockquote><p>这首叙事曲是肖邦晚期心情的自我抒发，没有较为具体的标题性。在结构上采用了奏鸣曲式与变奏相结合的方法。在这里，具有忧郁和幻想气质的抒情、叙事性的主部主题通过变奏发展加强了基本感情的色彩。在第三次陈述时，性格上起了变化，变得充满了悲剧性的热情，而在再现部中最后一次陈述时，活跃而紧张的运动带来了惊惶不安的色彩。副部则用了和声变奏手法，是明朗、柔和的抒情主题获得了色彩的变化。</p></blockquote><h2 id="Concerto-协奏曲"><a href="#Concerto-协奏曲" class="headerlink" title="Concerto&#x2F;协奏曲"></a>Concerto&#x2F;协奏曲</h2><h3 id="Concerto-Mo-1"><a href="#Concerto-Mo-1" class="headerlink" title="Concerto Mo.1"></a>Concerto Mo.1</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/gV_x_QY1P5c?si=fMIAGP6O8Ib9S9s3" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Martha Argerich 玛莎·阿格里奇</p><p>e 小调第一钢琴协奏曲，作品第 11 号。它是弗雷德里克·肖邦于 1830 年创作的，当时他 20 岁。该曲于当年 10 月 12 日在波兰华沙的 Teatr Narodowy（国家剧院）首演，作曲家在他离开波兰之前的一场「告别」音乐会上担任独奏家。这首钢琴协奏曲是献给钢琴家兼作曲家弗里德里希·卡尔克布伦纳的。1830 年 10 月 12 日的首映「取得了成功……座无虚席」。七周后，波兰政变爆发后，肖邦在巴黎的普莱耶尔音乐厅首次在法国演奏了他的协奏曲，同样好评如潮。</p><p>该协奏曲由三个乐章组成，是该时期典型的器乐协奏曲：</p><ol><li>Allegro maestoso (E minor) &#x2F;庄严的快板</li><li>Romanze – Larghetto (E major) &#x2F;浪漫曲 - 甚缓板</li><li>Rondo – Vivace (E major) &#x2F;回旋曲 - 活泼地</li></ol><p>第一乐章有三个主题，由乐团引入。然后钢琴演奏第一主题（第 139 小节），然后是抒情的第二主题（第 155 小节）。第一主题与结尾交相呼应，是那个年代很正常的起手式。</p><p>抒情的第二主题，缓缓由钢琴演绎出来，是整个第一乐章最为触动我的部分…闭上双眼聆听，19 世纪欧洲广袤的肥沃土地，一直延伸到今天波兰所在的华沙，那片肥沃的土地上，曾经有过多少的浪漫故事，有过多少的爱情，有过多少的悲欢离合。</p><p>第三主题为E大调，由管弦乐队引入并由钢琴接管（第222小节）。发展从第 385 小节开始，钢琴演奏第二主题；然后管弦乐队发展第一个主题。这个过程存在着钢琴的华彩段，但是这个华彩段中，听着并不是一般华彩段那种辉煌的感觉，利落的跑动和交响乐一唱一和，让我想到了小孩子在广袤的土地上，奔跑，嬉戏，打闹….这也许并不很贴近时代背景。</p><p>开头的重演再次从第 486 小节开始，管弦乐队演奏了开场主题。第三个 E 大调主题回来了（第573小节），但最终，尾声又回到E小调，乐章以钢琴部分结束，随后是突然的强音E末尾的小和弦。我不喜欢这个小和旋，看起来收尾的有点突兀。</p><p>随后我们进入优美的第二乐章。这是本协奏曲中，最像诗歌的地方。引用肖邦曾经说过的话：</p><blockquote><p>Chopin wrote in the same letter to Tytus, saying, “It is not meant to create a powerful effect; it is rather a Romance, calm and melancholy, giving the impression of someone looking gently towards a spot that calls to mind a thousand happy memories. It is a kind of reverie in the moonlight on a beautiful spring evening.”</p></blockquote><p>肖邦在给泰图斯的同一封信中写道：「这并不是为了创造一种强大的效果；而是一种浪漫，平静而忧郁，给人的印象是一个人轻轻地看着一个地方，唤起我一千个幸福的回忆。这是一种美丽的春夜月光下的遐想。」</p><p>首先也是乐器起手，之后钢琴为主演奏主题。主题婉转，优美，并且非常意外地通俗易懂。听起来像是一段平静的诉说。</p><p>之后伴随着器乐进入第二主题，听起来像是在自问自答。随后我们进入了一段低音和管弦乐互相演奏的阶段，这个过程中有伴随第一、第二主题的变奏，低音的演绎就像是在沉思，和乐曲清灵，婉转地部分交相辉映。随后钢琴渐渐回到高声部，这个过程中，音色渐渐消退，只留下钢琴。</p><p>随着灵动的高音自问自答式地展开，我们进入了第二乐章的「升华段」——钢琴用更多装饰音的变奏，重新演绎一开始的第一主题，这是整个乐曲中最令人感动的部分——它显得更忧郁和幻美，像是月光下的凝思，有着眼泪的迷蒙，既是心中满怀爱意的衷曲转达，又是对恋人伤感的怀想与思念。</p><p>每当我听到这个部分的时候，我就会驻足停留，并且闭上眼睛——倾听着优雅、尊贵的音律。说它是「灵魂升华」无疑是违背唯物主义的，但如果你想让唯物主义者感觉到「灵魂升华」的感觉，同时他也对这种类型的乐曲不感冒，那么「仔细聆听这一段」，毫无疑问是最接近「灵魂升华」的一次体验。</p><p>随着几声管弦乐的「蹦蹦」声，仿佛将我们从离合的思绪中拉回。我们进入了第三乐章。</p><p>勇士舞 Krakowiak 是一种快速的波兰舞，节拍是 2&#x2F;4 拍，起源于旧首都克拉科夫及小波兰省。据传，第三乐章华丽回旋曲就是以此主题的。它的主题我们一进入就能听见。当然，既然是回旋曲，我们在后面也能多次听到这段旋律。歌曲轻快明亮，是完全不同于前面两个乐章的风格，不过同样是以管弦乐与钢琴交错展开。我们可以在回旋曲的中间听到插入的一段具有浓烈波兰风格的民曲，不过这段旋律很快就过去了。</p><p>关于第三乐章，最容易产生的联想是，我们正参加 Krakowiak 波兰舞的活动之中，随着舞者开始起舞，会场顿时进入了轻快的风格。民歌的加入让整首曲子的波兰民族味道更浓厚。我们可以渐渐感受到大家越来越热情，会场的气氛越来越浓厚。此时，钢琴进入了华彩段——这是一段难度非常高，但是却能把乐曲推向高潮的琶音。经过一次休息后，钢琴在管弦乐的帮助下将氛围推向顶点，之后全曲结束。不同于第一乐章结束的仓促，第三乐章的结束会有一种欢畅淋漓的感觉。</p><p>纵观全曲，三个乐章的风格完全不一样，但是都是波兰民族的各个部分，我甚至完全不介意称之为波兰民族音乐版本的百科全书——肖邦的民族性跃然纸上。在那个波兰仍处于沙皇俄国压迫的阶段，这样的音乐家创作的曲子，更显得难能可贵。</p><h3 id="Concerto-No-2"><a href="#Concerto-No-2" class="headerlink" title="Concerto No.2"></a>Concerto No.2</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/B3r4EgwLqMM?si=oVCCmBNhPMauFuJo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Arthur Rubinstein 亚瑟·鲁宾斯坦</p><p>f 小调第二钢琴协奏曲，作品第 21 号。是肖邦于 1829 年秋季创作的一部钢琴协奏曲。当时他大约 20 岁。一个有趣的事实是，虽然说这是第二号协奏曲，但是它比第一部更早出版，所以给到的编号只是 No.2.</p><p>该协奏曲由三个乐章组成：</p><ol><li>Maestoso (F minor) &#x2F;雄伟地</li><li>Larghetto (A-flat major) &#x2F;甚缓板</li><li>Allegro vivace (F minor – F major) &#x2F;甚极速地</li></ol><p>实际听下来，第一乐章和这个标题有出入之处。全曲雄壮的地方似乎不多，不过也有可能是中译英的锅，这一点我没办法考证了。不过我还是去了解了下背景信息，当时肖邦正在华沙音乐学院就读。据传，写这首曲子的时候肖邦正在暗恋学声乐的女同学康斯坦茨娅 (Konstancja Gladkowska)，只是肖邦也就处于这暗恋的状态中了，也一直没敢表白。也有出处说女同学拒绝了肖邦青涩的表白。有力的证据来源于肖邦曾在一封给友人的信：「写这首舒缓的协奏曲时，我的心绪始终和她在一起。」我们也似乎可以从乐曲中婉扬的部分中对这份情感有一个初步的认识。</p><p>开头一段略微奇怪的下行旋律可能来源于肖邦的天才想法，事实上听过千篇一律的旋律后一听这首曲子便立马起了兴致，这是第一主题。交响乐发起一阵巨响（和他在第一首曲子中的手法如出一辙），伴随着小提琴的乐句，我们便进入了第二主题。交响曲和钢琴连绵起伏，交错演奏。这个技法很常见，但是也很难不让人联想到肖邦包含的爱意，同样也是连绵起伏的。</p><p>第二主题为降 A 大调，并且不时插入第一主题的旋律。此刻，管弦乐已黯然失色。华丽的钢琴独奏，展开了广阔的音响世界。这一段内钢琴的展开很多且展开变奏之华丽，技巧之深，每每听到，我想大家都会由衷的赞叹肖邦在这个方面的音乐天赋。和协奏曲第一号的第二乐章（以及待会提到的第二乐章）来说，这里优美的旋律是穿插在钢琴和管弦乐之间的，在两者结合的时候，优美程度达到最高。钢琴通过快速的音阶将管弦乐进入一个小高潮部分后，又回到刚刚描述这段的状态中。</p><p>钢琴休息片刻，便又奏出第一主题。圆号与之为伴，弦乐与它同行。再现的乐段变得简洁凝炼，并在钢琴独奏中，更多地融入了年轻作曲家对爱情的幻求。第一乐章在管弦乐队沉闷的和弦中结束。</p><p><s>第二乐章可以说一听就是专门为女朋友准备的、太明显了</s>。我一般因为不懂所以不评价管弦乐的演奏，加之在协奏曲中往往也是以钢琴为主。但是排开优美的钢琴旋律，木管乐在这个乐章的表演同样超神——事实上，在第一协奏曲的第二乐章就已经初见端倪。但是开头，木管乐和弦乐的交相呼应仍然是我印象最深的片段之一，好似两种乐器在悄悄对话。钢琴在第二主题有一段从低音向上的旋律同样也是我最深刻的记忆，一如渐渐燃起了热情的火苗，它在颤音上跳动，在和弦中飘曳；乐曲的最后，由弦乐与木管的呢哺絮语中，钢琴从低音开始，几个音符攀援到稳定的降A主音上。第二乐章只要能梳理出几个旋律其实非常好懂，很多内容也和第一协奏曲的第二乐章比较相似，这里就不再展开。</p><p>第三乐章虽然不直接叫「回旋曲」，但确实一开始演奏就有回旋式的风格。不过一般认为它其实是波兰的玛祖卡。一开始首先从第二乐章的意犹未尽，钢琴轻轻、稍慢地地开始第一主题。不过轻快的风格已经十分明显了。在弦乐顿足般的同音反复节奏型中，钢琴粗犷地奏出第二主题，随后过渡到活跃的音阶和音调中，把人们带到火热的马祖卡舞蹈的行列里。宏大的管弦乐队要然而止。乐曲中的圆号是点睛之笔，它的演奏更像是呼唤，换来钢琴的回应。</p><p>就这样，钢琴和交响乐交替演奏，一直到钢琴一阵颤音后的华丽主题演奏后消退。之后回到第一乐章，开始回旋重复刚刚的过程。过了一阵，协奏曲在马祖卡舞曲所独有的三连音节奏型的持续涌进中，终于在向上的旋律中，冲出来转变为了 F 大调。最后，钢琴华丽的琶音配合乐队的激情和弦伴奏，给人们留下灿烂的光辉。在短暂的休息后，钢琴小爆发，使全曲在欢腾火热的气氛中结束。</p><p>第二首协奏曲给我的印象，其实没有第一首那么印象深刻。主要是因为第一首曲子描绘的内容确实很「大」。第二首曲子更多地参杂了肖邦个人的生活和想法，相对来说并没有那么写实。这一点和他的几首叙事曲的区别也比较像。不过我认为这恰恰是肖邦的一体两面，一面的他是民族性的，作为爱国音乐诗人，他写的曲子时不时反应历史背景和波兰精神，具备浓厚的民族味道。另一面是浪漫，他个人极强的音乐天赋和个人生活对于爱情的描写和向往，也有一部分是音乐家独特的浪漫天赋。两首协奏曲对这些内容表现的淋漓尽致。</p><h2 id="Sonata-奏鸣曲"><a href="#Sonata-奏鸣曲" class="headerlink" title="Sonata&#x2F;奏鸣曲"></a>Sonata&#x2F;奏鸣曲</h2><h3 id="Sonata-No-2"><a href="#Sonata-No-2" class="headerlink" title="Sonata No.2"></a>Sonata No.2</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/DhB59YCvxuw?si=pvb6De5W-1lnKTS0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Krystian Zimerman 克里斯蒂安·齐默尔曼</p><h3 id="Sonata-No-3"><a href="#Sonata-No-3" class="headerlink" title="Sonata No.3"></a>Sonata No.3</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/qbd9-hYXK9M?si=cEfLmBcJtRNCt4NC" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Krystian Zimerman 克里斯蒂安·齐默尔曼</p><h2 id="Etude-Op-10-练习曲作品之10"><a href="#Etude-Op-10-练习曲作品之10" class="headerlink" title="Etude Op.10&#x2F;练习曲作品之10"></a>Etude Op.10&#x2F;练习曲作品之10</h2><p>接下来会逐步开始介绍肖邦的练习曲。Youtube 能找到的演奏家，并且满足高播放的，我这里选取了 Rousseau，Kassia，还有瓦姐的。首先我还是最推荐瓦姐的版本，但是瓦姐的版本是 15 年前的了，无论是画质还是音效都不如现在。另外两个我更喜欢 Kassia，不过 Youtube 似乎还是 Rousseau 的粉丝更多些。</p><p>近些年来 Rousseau 这样的结合钢琴特点，演奏的可视化在 Youtube 这类的视频网站上多了很多，也不乏 Kassia 这样一看上去就知道实力强劲的选手，我本人非常喜欢这种模式。这样观众对于这首曲子如何演绎，有了更为直观的感受。</p><p>练习曲分为 Op.10 和 Op.25 这两部作品。这是业余选手能接触到的较为顶层的作品——中国大陆的钢琴考级，九级&#x2F;十级几乎都会选取肖邦的练习曲作为考级曲目，这正好说明了十级选手对于肖邦练习曲的掌握是有一定要求的，部分简单的曲目得信手捏来。不同于叙事曲、协奏曲的抽象，练习曲是很多练琴者真真切切遇到的困难。笔者有幸练过其中的几首作品，在叙述的时候会顺带讲解自己对于其中一些作品练习的看法。</p><p>按照难度，一般认为肖邦练习曲和车尔尼 740 练习曲的难度相当，实际上略微被认可的细分应该是 740 低速 &lt; 肖邦练习曲 &lt; 740 原速；实际上，740 一共有五十首，且部分曲目难度也非常大，而且在技巧性上更甚肖邦练习曲一筹，例如第 35 首，在肖邦练习曲中很难找到类似的练习类型。还有三度这种不常见的、难度大的技巧，虽然说肖邦练习曲也有涉及，但是难度明显不如 740. 在一些地方，比如激流和冬风练习曲，难度一般认为还是大于 740 中跑动的部分。</p><p>除了笔者选取的作者之外，在互联网上完全可以找到更为精彩的演绎。可视化也许也能给正在练习这些曲目的同学更多的一些帮助（笔者曾经通过 Rousseau 的月光三，学了一处指法）。</p><h3 id="No-3-Tristesse-离别"><a href="#No-3-Tristesse-离别" class="headerlink" title="No.3 Tristesse&#x2F;离别"></a>No.3 Tristesse&#x2F;离别</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/bzBH9Nm1BP8?si=gBVBxx3snpqHK4Ix" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Rousseau</p><h3 id="No-4-Torrent-激流"><a href="#No-4-Torrent-激流" class="headerlink" title="No.4 Torrent&#x2F;激流"></a>No.4 Torrent&#x2F;激流</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/oHiU-u2ddJ4?si=g0hOf_-HTnrQSGd5" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Rousseau</p><h3 id="No-5-Black-Keys-黑键"><a href="#No-5-Black-Keys-黑键" class="headerlink" title="No.5 Black Keys&#x2F;黑键"></a>No.5 Black Keys&#x2F;黑键</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/8tcnuRsfgUQ?si=7qajTsmjFytb5qdN" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Rousseau</p><h3 id="No-8-Sunshine-阳光、滑翔机"><a href="#No-8-Sunshine-阳光、滑翔机" class="headerlink" title="No.8 Sunshine&#x2F;阳光、滑翔机"></a>No.8 Sunshine&#x2F;阳光、滑翔机</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/43mvd1lKd3k?si=0NPmespokGxeQgnR" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Valentina Lisitsa 瓦伦廷娜·李斯特莎</p><h3 id="No-12-Revolutionary-革命"><a href="#No-12-Revolutionary-革命" class="headerlink" title="No.12 Revolutionary&#x2F;革命"></a>No.12 Revolutionary&#x2F;革命</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/g1uLrHq9TDg?si=eAFDZ-yRRcMsq_3o" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Rousseau</p><h2 id="Etude-Op-25-练习曲作品之25"><a href="#Etude-Op-25-练习曲作品之25" class="headerlink" title="Etude Op.25&#x2F;练习曲作品之25"></a>Etude Op.25&#x2F;练习曲作品之25</h2><h3 id="No-1-Aeolian-Harp-风弦琴"><a href="#No-1-Aeolian-Harp-风弦琴" class="headerlink" title="No.1 Aeolian Harp&#x2F;风弦琴"></a>No.1 Aeolian Harp&#x2F;风弦琴</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/7MxFWmr8Wck?si=VPv03Uw8tq0lqzXu" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Kassia</p><p>Op25 第 1 首《降 A 大调练习曲》，它同时有一个别的称号：《牧羊人的笛子》。这是因为肖邦自己对这首曲子的解释：『牧童因暴风雨来临，避难于安全的洞穴。远处风雨大作，牧童却若无其事地取出笛子，吹出风雅的旋律。』。最像诗的练习曲之一。</p><p>这首曲子主要的难点是大量的快速琶音和和弦。最为完美的演绎，应该是在比较清晰的弹出这些快速琶音和和弦的同时，将位于右手每组 16 分音符的第一个音和左手的根音组成的「旋律」也能较为清楚的演奏出来。</p><h3 id="No-2-The-Bees-蜜蜂"><a href="#No-2-The-Bees-蜜蜂" class="headerlink" title="No.2 The Bees&#x2F;蜜蜂"></a>No.2 The Bees&#x2F;蜜蜂</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/-o2lYktVy3I?si=OmlmVPQkZ1IGtOVr" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Valentina Lisitsa 瓦伦廷娜·李斯特莎</p><p>Op25 第 2 首《f 小调练习曲》。不多说，选择它的原因也是因为这首曲子是 10 级的考级曲目，为了情怀选择的曲子。想必一直以来它都是各路琴童的噩梦之一。但是在肖邦练习曲中，这真是最简单的一首曲子了。</p><p>德国作曲家舒曼曾经评论它说:「它是那样美妙动人，充满幻想和静谧，宛如孩子梦中的歌声」。</p><h3 id="No-5-Wrong-Note-错音"><a href="#No-5-Wrong-Note-错音" class="headerlink" title="No.5 Wrong Note&#x2F;错音"></a>No.5 Wrong Note&#x2F;错音</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/koPbc8F7u1s?si=8J29RvHOzzzaIF-b" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Kassia</p><p>Op25 第 5 首《e 小调练习曲》，错音练习曲，他的难点主要是在于对谱子。所谓错音练习曲，只是旋律写的像错音罢了，并不意味着将它弹错也是没有问题的。而这么做，无疑会增加识谱难度。在我们没有反复聆听他的情况下，咱们要想通过音色来进行识别是特别难的。因此，这周曲子强烈建议听熟练之后再去弹。</p><p>这周曲子也仅有第一主题才听起来像错音，第二主题可以说，反而像一个很优美的篇章——实际上，第一主题恰恰是第二主题的「错音版本」。所以在这首曲目中，咱们就也不用想太多，直接当成两个单独不同的旋律，这样子才不会弹岔。</p><p>除此之外，这周曲子既然是错音练习曲，肖邦也用了许多不和谐的黑键来进一步放大错音的不和谐感，因此本曲目也是训练黑键的一首不错的练习。</p><h3 id="No-6-Thirds-三度"><a href="#No-6-Thirds-三度" class="headerlink" title="No.6 Thirds&#x2F;三度"></a>No.6 Thirds&#x2F;三度</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/cpgjTR6p6oA?si=0MXK93Iwq0k8qtJm" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Valentina Lisitsa 瓦伦廷娜·李斯特莎</p><p>Op25 第 6 首《升 g 小调练习曲》，三度练习曲，写的非常具备有东欧味道的练习曲。整首曲子不长，但是难度却一般被认为是肖邦练习曲中最难的几首曲子之一。在我看来，三度这周曲子，难点就是在反人类的「三度音」上，而这首曲子的完成度，也和三度音直接相关。顺便一提，740 中的三度练习曲，是比肖邦的更加难的。所以我们完全可以看到肖邦确实留下了不少「情面」。不过，将三度发扬光大的，毫无疑问是我们的李斯特同学，如果我还有精力能出李斯特的合集，那么对于老李的三度音我可要好好鉴赏一番。</p><p>关于这首练习曲，有这样一个传闻：据说肖邦在写作它的时候，心里想象着一个波兰流亡者在雪撬银铃声中，沿着茫茫无尽头的冰雪小道，流放到远方去的情景，这个传闻不一定可靠，但乐曲中那连续不断的三度和弦，确实很像雪撬前进时送来的铃声。我一直觉得特别多的人只关注这首曲子的难度，却忽略了这首曲子的音乐性。正相反，这首曲子的音乐性将一种寂静的感觉（实际上肖邦用了不少音符做到这一点），表现得恰当好处。</p><h3 id="No-9-Butterfly-蝴蝶"><a href="#No-9-Butterfly-蝴蝶" class="headerlink" title="No.9 Butterfly&#x2F;蝴蝶"></a>No.9 Butterfly&#x2F;蝴蝶</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/WZYHvEF84NQ?si=KLkIvcpLW5V4yfG3" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Rousseau</p><p>Op25 第 9 首《降 G 大调前奏曲》，蝴蝶练习曲，旋律非常轻巧的一手练习曲，旋律好听。通俗易懂。就是弹好这首曲子不容易。因为确实没有怎么接触过所以不过多评价。主要的难点在于右手的六度音（确实不太了解，但六度音相当的不好弹，比三度音更难弹）。左手的旋律也不轻松。</p><h3 id="No-11-Winter-Wind-冬风"><a href="#No-11-Winter-Wind-冬风" class="headerlink" title="No.11 Winter Wind&#x2F;冬风"></a>No.11 Winter Wind&#x2F;冬风</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/60Upg8Hz0rI?si=HjbZr0-io_v2_PPT" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Kassia</p><p>Op25 第 11 首《a 小调练习曲》，冬风练习曲。这位更是同激流一般的高难度曲目，也是在各大主流平台「非常出圈」的一首曲目。相当多的人接触肖邦练习曲就是因为这首曲子，也因此建立了对于肖邦的恐惧233… 不过根据之前的分析也应该非常清楚了，那就是所谓的肖邦练习曲，冬风在里面实际上也是最难的几首曲目之一了。</p><p>这首曲子有一个非常缓和的开头，简单的简直让人觉得是弹错了。在一阵宁静后，伴随着右手快速的跑动音，冬风就来临了，肖邦是通过一种特定的练习音型来来表现这一点。冬风之所以能够出圈也跟这段的反差有着非常密切的关系。随后，在第一主题被反复的用多个不同的调子跑动完成之后，本来我们想舒一口气，未曾想过第二主题丝毫没有倦怠——正如冬风也是凛冽的，一阵高过一阵。第二主题像是一首革命进行曲，将肖邦的革命性展现的淋漓尽致。从这个角度上来说，《冬风练习曲》同样也将革命意识和反抗压迫的心愿，一如既往的表现出来。整首曲子是用一段快速跑动的音阶进行收尾，和另外一首有着类似意境的曲目《追雪》（李斯特的超技练习曲）有着截然不同的处理。追雪是寒风慢慢的减弱，冬风则有点戛然而止的味道，因此在意境的表现上我会投《追雪》一票。但即便是有点小瑕疵，也不影响这首曲子同样有着极高的音乐性。</p><p>彪罗对此曲评价：「在你能想象的范围内展现着最丰富的音。」</p><h3 id="No-12-Ocean-大海"><a href="#No-12-Ocean-大海" class="headerlink" title="No.12 Ocean&#x2F;大海"></a>No.12 Ocean&#x2F;大海</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/7EBRJbGYfSg?si=qk5mFr7hSluKzVyI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe></div><p>演奏者：Kassia</p><p>Op25 第 12 首《c 小调练习曲》，大海练习曲。这首曲子肖邦作于 1831 年，正值「华沙起义」失败之时，据说肖邦是因为听到革命失败的时候所作的曲子。这首曲子和《冬风》差不多同一时间创立，具备极高的革命性质。这首练习曲听起来是一首爱国主义的音诗，肖邦在这里叙述了他的爱国主义激情。在川流不息的分解和弦和短小、坚毅、果断的插句里，都使人感到一股不可抗衡的巨大力量。</p><p>未完待续…</p><p>为了性能的保证，只能分级出个下集，下集主要写一些零散的篇章，夜曲，圆舞曲，玛祖卡，谐谑曲等内容。其中的很大一部分展示了肖邦浪漫的一面。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>维基百科：肖邦叙事曲 <a href="https://zh.wikipedia.org/wiki/%E5%8F%99%E4%BA%8B%E6%9B%B2_(%E8%82%96%E9%82%A6)">https://zh.wikipedia.org/wiki/%E5%8F%99%E4%BA%8B%E6%9B%B2_(%E8%82%96%E9%82%A6)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="音乐鉴赏" scheme="https://blog.pengdonglai.com/categories/%E9%9F%B3%E4%B9%90%E9%89%B4%E8%B5%8F/"/>
    
    
    <category term="Music" scheme="https://blog.pengdonglai.com/tags/Music/"/>
    
    <category term="Chopin" scheme="https://blog.pengdonglai.com/tags/Chopin/"/>
    
    <category term="肖邦" scheme="https://blog.pengdonglai.com/tags/%E8%82%96%E9%82%A6/"/>
    
    <category term="音乐" scheme="https://blog.pengdonglai.com/tags/%E9%9F%B3%E4%B9%90/"/>
    
    <category term="近代浪漫派" scheme="https://blog.pengdonglai.com/tags/%E8%BF%91%E4%BB%A3%E6%B5%AA%E6%BC%AB%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>JSON 转换为 TypeScript 接口</title>
    <link href="https://blog.pengdonglai.com/2024/05/04/convert-json2interface/"/>
    <id>https://blog.pengdonglai.com/2024/05/04/convert-json2interface/</id>
    <published>2024-05-04T09:45:30.000Z</published>
    <updated>2024-06-03T17:04:59.286Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><textarea style="width: 100%; height: 400px; background: rgba(255, 255, 255, 0.3); border-radius: 5px; padding: 8px;" id="textSrc">{  "url": "https://blog.pengdonglai.com/",  "posts": [    { "title": "日记", "date": "2016.06.08" },    { "title": "随笔", "date": "2016.06.09" }  ],  "last-update": 1465388410306}</textarea><p><button id="btnConvert" class="btn btn-small">点我转换</button></p><textarea style="width: 100%; height: 400px; background: rgba(255, 255, 255, 0.3); border-radius: 5px; padding: 8px;" id="textOut" rows="20" readonly></textarea><h3 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h3><p>代码 forked from <a href="https://static.jixun.moe/json2tsinterface.html">https://static.jixun.moe/json2tsinterface.html</a>，我做了一些改良。</p><p>有了这个工具之后<s>摸鱼</s>的效率明显高了许多。</p><script>(function ($) {  function toInterface (variable) {    var interfaceNames = ['IUnknown'];    var extra_interface = '';    function getVariableType (variable, name) {      if (variable === undefined) {        return 'void /* undefined */';      }      var type = typeof variable;      if (type == 'object') {        if (!variable)          return 'void /* 未知类型 */';        if (name.slice(-2) == 'es') {          name = name.slice(0, -2);        } else if (name.slice(-1) == 's') {          name = name.slice(0, -1);        }        if (variable.constructor.name == 'Array') {          return getVariableType(variable[0], name) + '[]';        }        if (name) {          name = name[0].toUpperCase() + name.slice(1);        } else {          name = 'Unknown';        }        var ifName = 'I' + name;        if (interfaceNames.indexOf(ifName) != -1) {          var i = 1;          while (interfaceNames.indexOf(ifName + '_' + i) != -1) {            i++;          }          ifName = ifName + '_' + i;        }        interfaceNames.push(ifName);        var extra = generateInterface(ifName, variable, '');        extra_interface = extra + extra_interface;        return ifName;      }      return type;    }    function formatKey (key) {      if (!/^[a-z][a-z\d]*$/i.test(key))        return JSON.stringify(key);      return key;    }    function generateInterface (pref_name, variable, indent) {      var r = '\n' + indent + 'interface ' + pref_name + ' {\n';      var sub_indent = '\t' + indent;      r += Object.keys(variable).map(function(k){        return sub_indent + formatKey(k) + ': ' + getVariableType(variable[k], k);      }).join(';\n') + ';\n';      r += indent + '}\n\n';      return r;    }    var interface = generateInterface('IUnknown', variable, '');    return (interface + '\n/* 自动生成的 Interface */\n' + extra_interface).trim();  };  var $src = $('textSrc'),    $out = $('textOut');  function procClick () {    try {      var data = JSON.parse($src.value);      $out.value = toInterface(data);    } catch (err) {      $out.value = err;    }  }  $('btnConvert').onclick = procClick;  procClick();})(document.getElementById.bind(document));</script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="开箱即用" scheme="https://blog.pengdonglai.com/categories/%E5%BC%80%E7%AE%B1%E5%8D%B3%E7%94%A8/"/>
    
    
    <category term="JSON" scheme="https://blog.pengdonglai.com/tags/JSON/"/>
    
    <category term="interface" scheme="https://blog.pengdonglai.com/tags/interface/"/>
    
    <category term="Typescript" scheme="https://blog.pengdonglai.com/tags/Typescript/"/>
    
  </entry>
  
  <entry>
    <title>图床数据库插入 SQL 生成</title>
    <link href="https://blog.pengdonglai.com/2024/05/04/generate-img-insert-sql/"/>
    <id>https://blog.pengdonglai.com/2024/05/04/generate-img-insert-sql/</id>
    <published>2024-05-04T04:49:27.000Z</published>
    <updated>2024-06-03T17:04:59.297Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><style>.dragover-area {  border: 1px dashed #7f7f7f;  border-radius: 8px;  margin-top: 20px;  margin-bottom: 20px;}.dragover-area-inner {  margin-top: 2.5rem;  margin-bottom: 2.5rem;  display: flex;  flex-direction: column;  align-items: center;  justify-content: center;}</style><p>假设你有一些存储在对象存储上的图片，现在想要将这些图片的 URL 存入到数据库中。只需要将图片在本地的那一份拖入并添加，在下面填写好被插入的表名和对象存储的 URL，就可以生成 SQL 语句了。</p><div class="mt-3 mb-3 dragover-area" id="dropzone" ondrop="drop(event)" ondragover="allowDrop(event)">  <div class="dragover-area-inner">    <p>拖放图片到此处来添加</p>    <div class="d-grid mx-auto d-sm-block gap-3">      <button type="button" class="btn btn-small" onclick="clearFiles()">清空图片</button>    </div>  </div></div><p>已添加的图片数：<span id="addedPicsCount">0</span></p><label class="switch">  <input type="checkbox" id="isReconstructTable">  <span>删除并重建表格</span></label><p>开：生成的 SQL 会删除 (Drop) 并重建 (Create) 表格，然后插入 (Insert) 图片数据。也就是说，表格中的所有旧数据都会被删除。适合初次使用或者想要清空表格的情况。</p><p>关：生成的 SQL 只会插入 (Insert) 图片数据。也就是说，表格中的所有旧数据都会被保留。适合已经有数据，只想追加图片的情况。</p><p>被插入的表名（比如 tableName）：<br><input type="text" class="form-control form-control-lg" id="tableName"></p><p>对象存储的根 UR（<a href="https://aaa.xxx.com/">https://aaa.xxx.com</a>）：<br><input type="text" class="form-control form-control-lg" id="baseUrl"></p><p><button type="button" class="btn btn-small btn-lg mb-3" onclick="generateSQL()">生成并下载 SQL</button></p><p>建议：使用 id 索引进行查询优化，这样子可以极大的节省查询的行数。毕竟一个表成千上万，Cloudflare 5M 的查询消耗会比想象中要快得多。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> <span class="token identifier"><span class="token punctuation">`</span>[tableName]-id<span class="token punctuation">`</span></span> <span class="token keyword">ON</span> <span class="token identifier"><span class="token punctuation">`</span>[tableName]<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><script>let addedImages = [];const addedPicsCountControl = document.getElementById("addedPicsCount");const tableNameControl = document.getElementById("tableName");const baseUrlControl = document.getElementById("baseUrl");const isReconstructTableControl = document.getElementById("isReconstructTable");function allowDrop(event) {    event.preventDefault();}function drop(event) {    event.preventDefault();    const files = event.dataTransfer.files;    if (files.length > 0) {        // 把每一张图片都添加到 addedImages 数组中        for (let i = 0; i < files.length; i++) {            if (files[i].type.startsWith("image/")) {                addedImages.push(files[i]);            }        }    }    addedPicsCountControl.textContent = addedImages.length.toString();}async function getImageDimensions(objURL) {    return new Promise((resolve) => {        var img = new Image();        img.src = URL.createObjectURL(objURL);        img.onload = function () {            var width = img.width;            var height = img.height;            resolve({ width, height });        };    });}async function generateSQL() {    let sqls = [];    const dropTableSql = `DROP TABLE IF EXISTS \`${tableNameControl.value}\`;`;    const createTableSql = `CREATE TABLE IF NOT EXISTS \`${tableNameControl.value}\` (            id INTEGER PRIMARY KEY   AUTOINCREMENT,    name VARCHAR(255),    url VARCHAR(255),    size INT,    width INT,    height INT,    ratio DECIMAL(5, 3),    landscape BOOLEAN,    near_square BOOLEAN,    big_size BOOLEAN,    small_size BOOLEAN,    mid_size BOOLEAN,    big_res BOOLEAN,    small_res BOOLEAN,    mid_res BOOLEAN,    bjn BOOLEAN);`;    if (isReconstructTableControl.checked)    {        sqls.push(dropTableSql);        sqls.push(createTableSql);    }    if (addedImages) {        for (let i = 0; i < addedImages.length; i++) {            let a = null;            try {                const dimensions = await getImageDimensions(addedImages[i]);                a = dimensions; // 此时 a 包含宽度和高度信息            } catch (error) {                console.error('Error:', error);            }            const fileName = addedImages[i].name;            const url = baseUrlControl.value + "/" + encodeURIComponent(fileName);            const fileSize = addedImages[i].size;            const width = a.width;            const height = a.height;            // 保留三位小数            const ratio = parseFloat((width / height).toFixed(3));            const landscape = width > height;            const nearSquare = ratio > 0.9090909 && ratio < 1.1;            const bigSize = fileSize > 600000;            const smallSize = fileSize < 100000;            const midSize = !bigSize && !smallSize;            // 短边大于1440            const bigRes = width > 1440 || height > 1440;            // 短边小于640            const smallRes = width < 640 || height < 640;            const midRes = !bigRes && !smallRes;            // 名字包含bjn字样            const bjn = fileName.includes("bjn");                        sqls.push(`INSERT INTO \`${tableNameControl.value}\` (name, url, size, width, height, ratio, landscape, near_square, big_size, small_size, mid_size, big_res, small_res, mid_res, bjn) VALUES ('${fileName}', '${url}', ${fileSize}, ${width}, ${height}, ${ratio}, ${landscape}, ${nearSquare}, ${bigSize}, ${smallSize}, ${midSize}, ${bigRes}, ${smallRes}, ${midRes}, ${bjn});`);        }        // 保存为 txt 文件        const sqlsText = sqls.join("\n");        const blob = new Blob([sqlsText], { type: "text/plain;charset=utf-8" });        const objectURL = URL.createObjectURL(blob);        const aTag = document.createElement("a");        aTag.href = objectURL;        aTag.download = `${tableNameControl.value}.txt`;        aTag.click();        // 释放一个之前已经存在的、通过调用 URL.createObjectURL() 创建的 URL 对象。        // 当你结束使用某个 URL 对象之后，应该通过调用这个方法来让浏览器知道不用在内存中继续保留对这个文件的引用了。        URL.revokeObjectURL(objectURL);    }    else {        alert("请先拖放一张图片，然后点击“开始”按钮。");    }}function clearFiles() {    addedImages = [];    addedPicsCountControl.textContent = "0";}</script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="开箱即用" scheme="https://blog.pengdonglai.com/categories/%E5%BC%80%E7%AE%B1%E5%8D%B3%E7%94%A8/"/>
    
    
    <category term="Tools" scheme="https://blog.pengdonglai.com/tags/Tools/"/>
    
    <category term="数据库" scheme="https://blog.pengdonglai.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="图床" scheme="https://blog.pengdonglai.com/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>新博客从出生到迁移的变化记录</title>
    <link href="https://blog.pengdonglai.com/2024/05/01/change-log/"/>
    <id>https://blog.pengdonglai.com/2024/05/01/change-log/</id>
    <published>2024-05-01T02:36:05.000Z</published>
    <updated>2024-06-03T17:04:59.286Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>记忆是知识的唯一管库人。</p></blockquote><h3 id="2024-05-12"><a href="#2024-05-12" class="headerlink" title="2024-05-12"></a>2024-05-12</h3><p>将文档站添加到了博客的导航栏。并且完善了文档站的第一个 API。</p><p>开了一个新坑：《肖邦：大师之作》，准备留下我听古典的回忆。</p><h3 id="2024-05-05"><a href="#2024-05-05" class="headerlink" title="2024-05-05"></a>2024-05-05</h3><p>将工具与文章分开，并且优化类布局和展现逻辑。修改了绿色主题让它与其它颜色一致。</p><h3 id="2024-05-04"><a href="#2024-05-04" class="headerlink" title="2024-05-04"></a>2024-05-04</h3><p>发布了一个转换图片为链接插入 sql 的工具。</p><h3 id="2024-05-03"><a href="#2024-05-03" class="headerlink" title="2024-05-03"></a>2024-05-03</h3><p>个人主页 index 页正式发布，并且修复了一些 bug，主要是代码框的展开按钮的 <code>z-index</code> 居然是 999，原作者有点东西。</p><h3 id="2024-05-01"><a href="#2024-05-01" class="headerlink" title="2024-05-01"></a>2024-05-01</h3><p>发布了文章《changelog》保存的记忆，又多了一份。</p><h3 id="2024-04-30"><a href="#2024-04-30" class="headerlink" title="2024-04-30"></a>2024-04-30</h3><p>进一步优化了文章内「目录」的样式。看起来不再别扭。</p><h3 id="2024-04-29"><a href="#2024-04-29" class="headerlink" title="2024-04-29"></a>2024-04-29</h3><p>暗黑模式推倒重建，主要的目标是履行最好的实践，让背景看起来不那么黑。目前改动已上线。</p><h3 id="2024-04-27"><a href="#2024-04-27" class="headerlink" title="2024-04-27"></a>2024-04-27</h3><p>最近有大量处理图片的需求，并且对图片的原理也做了进一步的学习，所以发布了第二篇技术文章《图片压缩的不同姿势》，以总结为主。应该是市面上最全的图片压缩的总结，文章历经多次更新最终达到了万字规模。</p><h3 id="2024-04-20"><a href="#2024-04-20" class="headerlink" title="2024-04-20"></a>2024-04-20</h3><p>博客样式微调。</p><h3 id="2024-04-19"><a href="#2024-04-19" class="headerlink" title="2024-04-19"></a>2024-04-19</h3><p>博客文章图片实现懒加载，访问速度提升。</p><p>博客上线四周年，终于实现了长久以来的 breaking change 梦想！</p><h3 id="2024-04-14"><a href="#2024-04-14" class="headerlink" title="2024-04-14"></a>2024-04-14</h3><p>发布了文章《国内二次元随机图片 API》汇总，具备非常高的收藏意义。不过文章后续 API 发生了变化，维护是个大问题。</p><h3 id="2024-04-12"><a href="#2024-04-12" class="headerlink" title="2024-04-12"></a>2024-04-12</h3><p>breaking change:</p><ul><li>迁移到了 Vercel 上，并且把节点换成香港的服务器</li><li>启动 PWA 功能，缓存覆盖率提升</li><li>删除了网易云的 iframe，启用了音乐页面，使用 APlayer 播放器，并且针对博客进行了样式优化</li><li>导航栏的样式进行了优化</li><li>改进了部分 alt 文案，和文案选择的逻辑，a11y 评分提升。</li></ul><p>做完了以上，博客速度 LightHouse 评分从 81 分优化到了 90+ 分。</p><h3 id="2024-04-11"><a href="#2024-04-11" class="headerlink" title="2024-04-11"></a>2024-04-11</h3><p>breaking change:</p><ul><li>给博客添加了 CDN 访问，挂载到了 jsDelivr</li><li>所有的图片全部经历一次更新，换成了更符合 XP 和美观的，原神浓度下降。全部换成 webp 格式</li><li>图片再经历一次压缩</li><li>对所有的资源文件进行了压缩</li></ul><p>做完了以上，博客速度 LightHouse 评分从 56 分优化到了 81 分。</p><h3 id="2024-04-05"><a href="#2024-04-05" class="headerlink" title="2024-04-05"></a>2024-04-05</h3><p>尝试做了个工具，帮助记忆日语动词。但是更新了 20 个动词后就咕咕了。因为博主又病了。</p><h3 id="2024-02-09"><a href="#2024-02-09" class="headerlink" title="2024-02-09"></a>2024-02-09</h3><p>深感日语学习的语法之零碎，于是开了个新坑，发布了文章《一些较为零散的日语语法点归总》。准备后续来慢慢打理这篇文章。</p><h3 id="2024-01-11"><a href="#2024-01-11" class="headerlink" title="2024-01-11"></a>2024-01-11</h3><p>更新了博客的颜色细节。</p><h3 id="2024-01-09"><a href="#2024-01-09" class="headerlink" title="2024-01-09"></a>2024-01-09</h3><p>首次在博客更新去年一年的总结，发布了《海星来来的 2023 年总结》</p><h3 id="2023-11-19"><a href="#2023-11-19" class="headerlink" title="2023-11-19"></a>2023-11-19</h3><p>因为在公司写脚手架，所以学习了 Node.js 开发 CLI 程序，并且发布了《How to create a CLI program using Node.js》，这篇文章是博客的第一个技术文章。</p><h3 id="2023-11-11"><a href="#2023-11-11" class="headerlink" title="2023-11-11"></a>2023-11-11</h3><p>博客上线了简繁体转换的功能。</p><h3 id="2023-10-29"><a href="#2023-10-29" class="headerlink" title="2023-10-29"></a>2023-10-29</h3><p>将以前的剑桥雅思做题记录慢慢的发上来，发布了大作文心得《Task 2 理念篇》，这是以前看 Vince 大佬的视频写的笔记总结。</p><h3 id="2023-10-24"><a href="#2023-10-24" class="headerlink" title="2023-10-24"></a>2023-10-24</h3><p>发布了《部分剑桥雅思的做题记录和沉淀》2。</p><h3 id="2023-10-21"><a href="#2023-10-21" class="headerlink" title="2023-10-21"></a>2023-10-21</h3><p>上线了《通过一些句子增加雅思听力词汇》其中的 4 篇，这个系列就完结了。成为了本博客第一个被完结的系列。</p><h3 id="2023-10-19"><a href="#2023-10-19" class="headerlink" title="2023-10-19"></a>2023-10-19</h3><p>将以前的剑桥雅思做题记录慢慢的发上来，首先发布了《部分剑桥雅思的做题记录和沉淀》1。</p><h3 id="2023-10-17"><a href="#2023-10-17" class="headerlink" title="2023-10-17"></a>2023-10-17</h3><p>总结了雅思听力常考的一些偏僻听力词汇，并且组成了几百个句子，并且在博客上线了《通过一些句子增加雅思听力词汇》其中的 1-3 篇。</p><p>上线了一个文字格式化的工具，以文章的形式发布。主要用于 markdown 的校正以及中英文之间的间隔。现在已经不太更新了，好像使用确实也会有点问题。</p><h3 id="2023-10-09"><a href="#2023-10-09" class="headerlink" title="2023-10-09"></a>2023-10-09</h3><p>游戏《冒险王精灵物语》作为小时候最喜欢玩的游戏之一，在博客重新上线。</p><h3 id="2023-10-07"><a href="#2023-10-07" class="headerlink" title="2023-10-07"></a>2023-10-07</h3><p>暗黑的机制完善了，可以在 js 的层面感知到页面的暗黑变化。暗黑模式建设告一段落。</p><h3 id="2023-10-06"><a href="#2023-10-06" class="headerlink" title="2023-10-06"></a>2023-10-06</h3><p>breaking change:</p><ul><li>图片进行进一步替换</li><li>给博客上线了 live-2d 功能，并增强它的功能</li><li>更新了大量颜色细节，看起来更加协调</li><li>上线了暗黑模式，并且给暗黑模式设计了一套主题色</li><li>几个 4399 童年最喜欢玩的游戏，以文章的形式被发布</li><li>发布文章《英语听力磨耳朵》，尝试最佳的写作范式</li></ul><h3 id="2023-10-05"><a href="#2023-10-05" class="headerlink" title="2023-10-05"></a>2023-10-05</h3><p>breaking change:</p><ul><li>图片进行进一步替换</li><li>给博客上线了 404，分类，友链，标签，归档功能</li><li>从网易云拿来了个 iframe，可以在博客内播音乐</li><li>更新了大量颜色细节，看起来更加协调</li><li>主题色更新为：橙 蓝 紫 绿四种颜色，并且根据图片的色调每天做更换</li><li>在本地更新了开发、上线范式</li></ul><h3 id="2023-10-04"><a href="#2023-10-04" class="headerlink" title="2023-10-04"></a>2023-10-04</h3><p>博客的主人开始对 Matery 主题进行大幅度的自定义更新，这一天是 breaking change 的日子。</p><ul><li>将原生的图片全数替换，替换成二次元的模样</li><li>主题更新，换了个好看的，纯 css 加载的新背景</li><li>更新了大量颜色细节，看起来更加协调</li><li>花里胡哨的东西，看起来像是进了夜店的装饰，通通删掉</li><li>更新了另一种不同的主题色</li></ul><h3 id="2023-10-03"><a href="#2023-10-03" class="headerlink" title="2023-10-03"></a>2023-10-03</h3><p>选择 Matery 为 Hexo 主题，并且更新主题上线。</p><h3 id="2023-10-02"><a href="#2023-10-02" class="headerlink" title="2023-10-02"></a>2023-10-02</h3><p>博客在一夜之间从 WordPress 迁移到了 Hexo。因为 WordPress 的语言 PHP 实在是不会用。</p><h3 id="2023-10-01"><a href="#2023-10-01" class="headerlink" title="2023-10-01"></a>2023-10-01</h3><p>转眼间来到了 10 月，此时一切都已经尘埃落定。博客的主人开始对博客进行 breaking change。</p><h3 id="2023-04-19"><a href="#2023-04-19" class="headerlink" title="2023-04-19"></a>2023-04-19</h3><p>三周年，无事发生。</p><h3 id="2023-02-01"><a href="#2023-02-01" class="headerlink" title="2023-02-01"></a>2023-02-01</h3><p>博客的主人在毕设的重压下，选择不更新。</p><h3 id="2022-12-28"><a href="#2022-12-28" class="headerlink" title="2022-12-28"></a>2022-12-28</h3><p>博客的主人毕业后有了新去处，准备考虑是否要恢复博客更新。</p><h3 id="2022-04-19"><a href="#2022-04-19" class="headerlink" title="2022-04-19"></a>2022-04-19</h3><p>上线两周年，没时间打理博客。博客的主人在年初去<a href="https://www.bytedance.com/en/">字节跳动</a>搬砖了，鸽的有些顺理成章。<s>你甚至在博客里面看不到他更新面试心得。</s></p><p>此时博客还只是 WordPress 的静态博客，没有评论功能，没有搜索功能，没有归档功能，没有标签功能。甚至连样式都是最原始的。只有两篇文章。</p><h3 id="2021-12-19"><a href="#2021-12-19" class="headerlink" title="2021-12-19"></a>2021-12-19</h3><p>工信部的人不懂海祇岛怎么念，笑喷了。然后就是很疑惑为什么备案不能出现「博客」等字眼。</p><h3 id="2021-12-12"><a href="#2021-12-12" class="headerlink" title="2021-12-12"></a>2021-12-12</h3><p>给博客起名「海祇岛的珊瑚森林」，虽然原神我应该没时间玩了，但是这个昵称我仍然非常满意，会一直用下去。</p><h3 id="2021-12-10"><a href="#2021-12-10" class="headerlink" title="2021-12-10"></a>2021-12-10</h3><p>注册了域名 <a href="https://starfishdl.site/">https://starfishdl.site</a>，之后给博客添加了这个域名，并且在工信部完成备案。</p><h3 id="2021-11-10"><a href="#2021-11-10" class="headerlink" title="2021-11-10"></a>2021-11-10</h3><p>博客使用 WordPress 重新发布，并且使用 WordPress 发布了一篇现在已经找不到了的文章。</p><h3 id="2021-04-19"><a href="#2021-04-19" class="headerlink" title="2021-04-19"></a>2021-04-19</h3><p>博客上线一周年，它无事发生。主要是主人离线太久了。</p><h3 id="2020-04-19"><a href="#2020-04-19" class="headerlink" title="2020-04-19"></a>2020-04-19</h3><p>发现 GitHub Pages 这个好东西，然后博客用 GitHub Pages 发布。是为博客上线日。链接就是刚刚注册的那种，以 github.io 结尾的。</p><h3 id="2020-04-02"><a href="#2020-04-02" class="headerlink" title="2020-04-02"></a>2020-04-02</h3><p>苦修前端三件套，写好的 HTML 文件发布在 GitHub 上。</p><h3 id="2019-10-01"><a href="#2019-10-01" class="headerlink" title="2019-10-01"></a>2019-10-01</h3><p>博客正式建立，最开始是以云笔记的形式存在，当天我注册了 GitHub，想着需要在 GitHub 上也上传点东西，可是那个时候也不怎么会写代码，于是我将笔记发在了 GitHub 上。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="碎碎念" scheme="https://blog.pengdonglai.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="碎碎念" scheme="https://blog.pengdonglai.com/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>图片压缩的不同姿势</title>
    <link href="https://blog.pengdonglai.com/2024/04/27/picture-compress-api/"/>
    <id>https://blog.pengdonglai.com/2024/04/27/picture-compress-api/</id>
    <published>2024-04-27T12:14:53.000Z</published>
    <updated>2024-06-03T17:04:59.504Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>众所周知，前端有许多切图的需求，其中对于图片的优化与前端也息息相关。因此无论是前端工作，还是博客的运营，亦或是希望可以用更小的成本玩转图片，必定涉及大量图片操作需求。与图片打过一些交道了，自然而然就会产生一些心得。</p><p>而在这其中，图片压缩是优化的重要手段。LCP 同样作为用户感知明显的指标之一，而图片的加载直接影响 LCP。在众多的前端面试题中，我们会经常看到图片优化的手段，但是一些优化手段如懒加载，其实也会影响用户的体验。而图片压缩，只要使用无损压缩，那么用户的体验会更好，是典型的无副作用方案。本文将介绍我平时用的顺手，并且效率也相对较高的图片处理模式。</p><blockquote><p>本文仍然在施工中…只是个半成品，后续如果有更好用的方法，我会及时更新。</p></blockquote><h2 id="图片格式转换"><a href="#图片格式转换" class="headerlink" title="图片格式转换"></a>图片格式转换</h2><p>WebP 是一种现代图片格式，可为网络上的图片提供出色的无损和有损压缩。使用 WebP，网站站长和 Web 开发者可以创建更小、更丰富的图片，从而提高网页加载速度。</p><p>与 PNG 相比，WebP 无损图片的尺寸<a href="https://developers.google.com/speed/webp/docs/webp_lossless_alpha_study?hl=zh-cn#results">缩小了 26%</a>。WebP 有损图片比采用等效 <a href="https://en.wikipedia.org/wiki/Structural_similarity">SSIM</a> 质量指数的同等 JPEG 图片<a href="https://developers.google.com/speed/webp/docs/webp_study?hl=zh-cn">小 25-34%</a>。</p><p>无损 WebP 支持透明度（也称为 Alpha 通道），但只需<a href="https://developers.google.com/speed/webp/docs/webp_lossless_alpha_study?hl=zh-cn#results">额外增加 22% 的字节</a>。对于可以接受有损 RGB 压缩的情况，有损 WebP 也支持透明度，其文件大小通常比 PNG 小 3 倍。</p><p>动画 WebP 图片支持有损、无损和透明度，与 GIF 和 APNG 相比，此类图片可缩减大小。</p><p>如今都 2024 了，我们没有理由继续使用不再支持 <code>WebP</code> 格式的设备。事实上不支持的设备凤毛麟角。所以放心大胆的将图片转换为 <code>WebP</code> 吧！除了 Python 提供类似于 image 这样的库之外，还有一些工具可以帮助我们完成图片格式的转换。</p><p>以下为 Python 提供的能力，可谓是门槛最低的方法了：</p><ul><li>使用 cv2 库将图片从 png 格式转换为 webp 格式</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token comment"># 读入 PNG 格式的图片</span>img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'input.png'</span><span class="token punctuation">)</span><span class="token comment"># 转换为 WebP 格式的图片，并保存</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'output.webp'</span><span class="token punctuation">,</span> img<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>IMWRITE_JPEG_QUALITY<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用 PIL 库将图片从 webp 格式转换为 png 格式</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Imageimg <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'input.webp'</span><span class="token punctuation">)</span>img<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>img<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'output.png'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="集成到系统原生"><a href="#集成到系统原生" class="headerlink" title="集成到系统原生"></a>集成到系统原生</h3><p><a href="https://developers.google.com/speed/webp/docs/precompiled?hl=zh-cn">https://developers.google.com/speed/webp/docs/precompiled?hl=zh-cn</a></p><p>考虑到 WebP 是由 Google 发起的，我们可以方便的使用 Google Developer 提供的建议。我们甚至可以将 WebP 格式转换的能力内置进入系统，像 node 一样使用。如果我们这么做了，可能第一次操作的时候需要摸索，但是一旦习惯了，以后我们可以方便的使用命令行文件进行处理。</p><p>笔者使用的是 MacOS 系统，因此会比较详细的列举 Mac 的使用方法。或许我们日后可以使用类似的方法在 Linux 上使用它。Windows 系统的话，<s>先咕了，去官网应该能看懂怎么下载。</s></p><ol><li>使用 homebrew 安装 webp。<code>brew install webp</code>. 请先确保你的 brew 可用，然后再进行安装。</li></ol><p>homebrew 链接：<a href="https://formulae.brew.sh/formula/webp">https://formulae.brew.sh/formula/webp</a></p><p>以上过程会将整个 webp 的转换工具都安装到你的系统中，如果你的系统已经安装了 webp，那么可以使用 <code>brew info webp</code> 查看<s>实际上也就是把 homebrew 的官网文字给你输出了一遍而已</s>。</p><p>它包括了：<code>cwebp</code> <code>dwebp</code>(将图片转换为原来的格式) <code>img2webp</code> 等工具。这里我们先使用 <code>cwebp</code> 举例子，进行转换。</p><ol start="2"><li>压缩为 WebP 无损压缩，需要保证 input.png 在当前目录下。</li></ol><p>我们使用 <code>cwebp</code> 工具中的“无损”选项将 PNG 转换为 WebP 无损格式。要获得最少的输出，所使用的确切命令行如下所示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cwebp input.png <span class="token parameter variable">-lossless</span> <span class="token parameter variable">-m</span> <span class="token number">6</span> <span class="token parameter variable">-q</span> <span class="token number">100</span> <span class="token parameter variable">-o</span> webp_lossless.webp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>压缩为 WebP 有损压缩（使用 alpha 通道）</li></ol><p>我们使用 <code>cwebp</code> 工具将 PNG 转换为 WebP 有损（带有 alpha 通道）。我们选择的 WebP 质量为 90（有损压缩），alpha 质量为 100（无损压缩）。使用的确切命令行如下所示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cwebp input.png <span class="token parameter variable">-q</span> <span class="token number">90</span> <span class="token parameter variable">-alpha_q</span> <span class="token number">100</span> <span class="token parameter variable">-m</span> <span class="token number">6</span> <span class="token parameter variable">-o</span> webp_alpha.webp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关于 <code>cwebp</code> 的文档，可以查看：<a href="https://developers.google.com/speed/webp/docs/cwebp?hl=zh-cn">https://developers.google.com/speed/webp/docs/cwebp?hl=zh-cn</a></p><p>有了上述技能，我们完全可以写一个脚本，批量将图片转换为 webp 格式。例如，如需转换文件夹中的所有 jpeg 文件，请尝试执行以下操作：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">for</span> <span class="token for-or-select variable">F</span> <span class="token keyword">in</span> *.jpg<span class="token punctuation">;</span> <span class="token keyword">do</span> cwebp <span class="token variable">$F</span> <span class="token parameter variable">-o</span> <span class="token variable"><span class="token variable">`</span><span class="token function">basename</span> $<span class="token punctuation">&#123;</span>F%.jpg<span class="token punctuation">&#125;</span><span class="token variable">`</span></span>.webp<span class="token punctuation">;</span> <span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果是无损压缩，我们只需要使用 <code>-lossless</code> 参数即可，当然，为确保最大的压缩比率，这里也可以使用 <code>-q</code>。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">for</span> <span class="token for-or-select variable">F</span> <span class="token keyword">in</span> *.jpg<span class="token punctuation">;</span> <span class="token keyword">do</span> cwebp <span class="token string">"<span class="token variable">$F</span>"</span> <span class="token parameter variable">-lossless</span> <span class="token parameter variable">-q</span> <span class="token number">100</span> <span class="token parameter variable">-o</span> <span class="token string">"<span class="token variable"><span class="token variable">`</span><span class="token function">basename</span> $<span class="token punctuation">&#123;</span>F%.jpg<span class="token punctuation">&#125;</span><span class="token variable">`</span></span>.webp"</span><span class="token punctuation">;</span> <span class="token keyword">done</span><span class="token keyword">for</span> <span class="token for-or-select variable">F</span> <span class="token keyword">in</span> *.png<span class="token punctuation">;</span> <span class="token keyword">do</span> cwebp <span class="token string">"<span class="token variable">$F</span>"</span> <span class="token parameter variable">-lossless</span> <span class="token parameter variable">-q</span> <span class="token number">100</span> <span class="token parameter variable">-o</span> <span class="token string">"<span class="token variable"><span class="token variable">`</span><span class="token function">basename</span> $<span class="token punctuation">&#123;</span>F%.png<span class="token punctuation">&#125;</span><span class="token variable">`</span></span>.webp"</span><span class="token punctuation">;</span> <span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>当然，用这两种方法不会删除原有的图片，如果我们需要删除原有的图片，可以使用 <code>rm</code> 命令。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> *.png<span class="token function">rm</span> <span class="token parameter variable">-rf</span> *.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>或者集成：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">for</span> <span class="token for-or-select variable">F</span> <span class="token keyword">in</span> *.jpg<span class="token punctuation">;</span> <span class="token keyword">do</span> cwebp <span class="token string">"<span class="token variable">$F</span>"</span> <span class="token parameter variable">-lossless</span> <span class="token parameter variable">-q</span> <span class="token number">100</span> <span class="token parameter variable">-o</span> <span class="token string">"<span class="token variable"><span class="token variable">`</span><span class="token function">basename</span> $<span class="token punctuation">&#123;</span>F%.jpg<span class="token punctuation">&#125;</span><span class="token variable">`</span></span>.webp"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token string">"<span class="token variable">$F</span>"</span><span class="token punctuation">;</span> <span class="token keyword">done</span><span class="token keyword">for</span> <span class="token for-or-select variable">F</span> <span class="token keyword">in</span> *.png<span class="token punctuation">;</span> <span class="token keyword">do</span> cwebp <span class="token string">"<span class="token variable">$F</span>"</span> <span class="token parameter variable">-lossless</span> <span class="token parameter variable">-q</span> <span class="token number">100</span> <span class="token parameter variable">-o</span> <span class="token string">"<span class="token variable"><span class="token variable">`</span><span class="token function">basename</span> $<span class="token punctuation">&#123;</span>F%.png<span class="token punctuation">&#125;</span><span class="token variable">`</span></span>.webp"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token string">"<span class="token variable">$F</span>"</span><span class="token punctuation">;</span> <span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>当然，这种方法的另一个好处是，我们完全可以从开源的源代码自行编译成我们需要的程序，可以参考这个链接，这里不再做说明：<a href="https://developers.google.com/speed/webp/docs/compiling?hl=zh-cn">https://developers.google.com/speed/webp/docs/compiling?hl=zh-cn</a></p><h3 id="修图工具"><a href="#修图工具" class="headerlink" title="修图工具"></a>修图工具</h3><h4 id="PhotoShop"><a href="#PhotoShop" class="headerlink" title="PhotoShop"></a>PhotoShop</h4><p>如果 2024 年了，仍然有修图工具不支持导出 <code>WebP</code> 格式，那么你也完全没必要使用它了。</p><p>这里以 PhotoShop 为例子，大致说下如何转换：</p><ol><li>打开图像处理软件，如 PhotoShop、GIMP 等。</li><li>导入要转换的图片文件。</li><li>在软件中打开“文件”菜单，选择“另存为”。</li><li>在弹出的“另存为”对话框中，选择“<code>WebP</code>”格式作为输出格式。</li></ol><p>这里也有一位作者分享了他批量转换格式的姿势：<a href="https://blog.zhheo.com/p/1d8e31d8.html#%E5%A4%A7%E5%8A%9F%E5%91%8A%E6%88%90">https://blog.zhheo.com/p/1d8e31d8.html#%E5%A4%A7%E5%8A%9F%E5%91%8A%E6%88%90</a></p><p>不过，如果我们只是打开 PS 然后改下图片的格式，未免太大材小用。尤其是部分性能不好的电脑，PS 启动关闭可能都需要 1 分钟以上，我开个 PS 就为了改个图片格式？更不用说很多程序员的电脑里面都没有携带 PS 这款软件。自然而然，我们会倾向于使用更轻量化的工具。</p><h4 id="ImageManager"><a href="#ImageManager" class="headerlink" title="ImageManager"></a>ImageManager</h4><p>ImageManager 是一款 VS Code 插件。相比起 PhotoShop，它具备两个优点：可以在 VS Code 内「自给自足」，并且足够轻量化。当然，它之所以能轻量化的原因是因为它明白它主要的功能都是给程序员提供的。因此，它提供的所有功能都是程序员用的比较多的，对于研发来说是比较实用的。</p><p>顺便也膜拜下原作者，这是他在稀土掘金发布的本文链接：<a href="https://juejin.cn/post/7348004403016794147">https://juejin.cn/post/7348004403016794147</a></p><p>作者对于自己的工具，显得十分自信：</p><blockquote><p>同一张图片，TinyPNG 压缩结果为 136kb，时间大概 5s；而 image-manager 压缩效果为 92kb，不到 1s！<br>如果把上传图片、下载图片这些繁琐的操作加到一起，或许 vscode 插件的效率要高上 10 倍有余</p></blockquote><p>这个插件的主要使用方法，作者仍然定义为了「图片压缩」，所以才会去和后文提到的 TinyPNG 进行对比。不过，这个插件也可以实现批量格式转换。如图所示，Image Manager 中，我们选择了一个文件夹下的图片，然后点击「转换」。转换成 webp 后，确实减少了 68% 的体积，同时也会对图片进行压缩。</p><p>在使用的时候，MacOS 使用 <code>Shift+Command+P</code> 快捷键，打开命令面板，输入 <code>Image Manager</code> 即可进入这个页面。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/04/27/picture-compress-api/10.webp"></div><p>不过就笔者的使用体验而言，原生转换为 webp 格式后，使用 TinyPNG 压缩的效果是比这个插件要好的，所以感觉也不能直接把结论下了，应该是和图片本身存在一定的联系，部分图片使用 TinyPNG 效果好，部分使用插件效果好。不过就易用性而言，这个插件确实是做到了极致，而且转换的速度确实也非常快。</p><h3 id="在线转换"><a href="#在线转换" class="headerlink" title="在线转换"></a>在线转换</h3><p>网站上提供在线转换的服务商一大把，这里需要选取几个放在这里展示也是很不容易的。需要说明的是我的选取标准，首先就是质量。至少转换的质量非常高，转换后需要用肉眼看不出来。在某些能选择转换质量的网站上，把质量选到最高，需要能满足这一条件。其次是必须要免费，咱不能为了这唾手可得的功能花钱啊。当然，在线服务的网络状况也是一个重要因素，如果说图片上传下载的体验不好，那么实际上再好的压缩算法，易用性也很差。其中也有部分服务在国内体验可能不太好，因为众首周知的原因。当然，这个部分具体取决于当前使用者的网络状态，我会尽力说明。</p><h4 id="To-WebP"><a href="#To-WebP" class="headerlink" title="To WebP"></a>To WebP</h4><p>ToWebp.io 是一款免费在线工具，可立即转换 WebP，无需将文件上传为标准 JPG、JPEG、PNG、AVIF、GIF 和 ICO。同时，将所有可能的图像格式转换为WebP图像格式。</p><p>这个网站应该是最纯净的将图片转换为 WebP 的网站，并且完全免费。</p><p><a href="https://towebp.io/">https://towebp.io/</a></p><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/04/27/picture-compress-api/9.webp"></div><p>如图所示，它支持拖拽上传，并且支持批量转换。并且具有为数不多的可以调整一些参数的功能。例如不想要太高的转换质量，那么可以调整一下，这个在极致优化的时候感觉会很有用。除此之外，他可以将图片进行缩放，这一下子就将图片压缩的「三板斧」都集齐了。</p><p>可惜的是，它不支持 API 调用。所以仅仅适合于顺手使用下的场景。</p><h4 id="Pixelied"><a href="#Pixelied" class="headerlink" title="Pixelied"></a>Pixelied</h4><p>Pixelied 是一家提供相片编辑器的服务商，旗下有个「Free Image Converter」的图片格式转换工具，让使用者通过浏览器进行在线批次编辑，而且不用担心降低照片画质，也无需下载或安装任何应用程序，提供最快速、免费且易于使用的图片转文件功能，这项服务支持各种常见图片格式包括 PNG、JPG、WebP、SVG、GIF、AVIF 和 TIFF 等超过 100 种格式。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/04/27/picture-compress-api/7.webp"></div><p><a href="https://pixelied.com/convert/jpg-converter/jpg-to-webp">https://pixelied.com/convert/jpg-converter/jpg-to-webp</a></p><p>它最大的优点是：免费且无限制的转换。（后文介绍的一些在线转换服务实际上有转换限制），这让我们在转换的时候可以无负担的使用。</p><p>他们家主要靠图片编辑收钱，因此提供了一些类似于云的服务。好在免费用户也能享受到部分存储空间。据介绍，免费用户有 2GB 的存储空间，确实比较良心。因此完全可以把他家进一步使用当成简易的图片编辑器来使用。付费版的区别主要是能使用更多素材，更多空间和一些 AI 能力，这些对于写代码来说反而不是很需要。</p><p>不过他家似乎没有 API 调用，因此我们无法通过代码来实现批量转换。</p><hr><h4 id="Convertio"><a href="#Convertio" class="headerlink" title="Convertio"></a>Convertio</h4><p>Convertio 是一个线上文件转换工具，它允许用户将文件从一种格式转换为另一种格式。它支持大多数常见的档案格式，包括图像、文件、音讯、影片、电子表格和更多。Convertio 还提供一些额外的功能，例如将 PDF 转换为可编辑的档案格式，或者将多个文件合并为一个单一的文件。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/04/27/picture-compress-api/4.jpeg"></div><p><a href="https://convertio.co/zh/jpg-%60WebP%60/">https://convertio.co/zh/jpg-WebP/</a></p><p>进去之后，我想它友好的页面设计会让您知道怎么操作的，这里就不详细展开了。</p><p>当然，它仍然有一些缺点，并且可能在部分人看来实际上没办法接受。首先是国内访问速度可能较慢，并且在特定条件下，下载的速度极慢。其次，它的免费计划限制较多，文件最大只能 100MB，在 24h 内只能转换 10 个文件，并且最多并行 2 个文件。</p><p>它支持 API 调用的方式，这块单独写在后面。</p><h4 id="CloudConvert"><a href="#CloudConvert" class="headerlink" title="CloudConvert"></a>CloudConvert</h4><p><a href="https://cloudconvert.com/">https://cloudconvert.com/</a></p><p>CloudConvert 最引以为豪的就是它支持 218 种文件格式的转换，当然也可以随意转换图片格式。在它的网站上，你能看到它「Convert Anything to Anything」的标语。事实上，CloudConvert 不但支持转换同类别的文件格式（比如将 JPG 转换为 PNG），它甚至可以跨类别转换，比如将 DOCX 文档转换成 PNG。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/04/27/picture-compress-api/8.webp"></div><p>不过它的免费额度也有限制，每天最多转换 25 个文件，和上面的那家如出一辙。</p><p>它同样支持 API 调用方式。</p><h4 id="改图宝"><a href="#改图宝" class="headerlink" title="改图宝"></a>改图宝</h4><p>改图宝是我比较用的顺手的在线工具，主要是它特别轻量化，并且也会对图片进行一些损害不高的压缩操作。至少我个人用着没啥问题，也没有遇到过收费的情况。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/04/27/picture-compress-api/5.jpeg"></div><p><a href="https://www.gaitubao.com/jpg-gif-png">https://www.gaitubao.com/jpg-gif-png</a></p><p>它的页面也十分友好，进去之后很容易找到图片格式转换的地方。</p><h3 id="比-WebP-更优秀的格式"><a href="#比-WebP-更优秀的格式" class="headerlink" title="比 WebP 更优秀的格式"></a>比 WebP 更优秀的格式</h3><p>当然，比 <code>WebP</code> 格式更好的图片，例如 <code>avif</code>，<code>heic</code> 等格式，目前还不支持多数浏览器的解析，贸然使用可能会导致图片无法正常显示。这种时候我们需要使用图片降级渲染策略。</p><p><a href="https://zh.wikipedia.org/zh-hans/AVIF">AVIF 的维基百科，想仔细研究的去这里！</a></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>picture</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/photo.avif<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image/avif<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> // 如果浏览器支持使用  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/photo.webp<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image/webp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img/photo.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Description of Photo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> // 浏览器不支持<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>picture</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然，我们也可以使用 JS 方法来进行判断：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// npm install avif.js</span><span class="token comment">// 下面代码放到reg.js中，然后把avif-sw.js放在web服务器根目录</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"avif.js"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">"/avif-sw.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 注册worker --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>reg.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 使用IMG标签嵌入AVIF图像 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image.avif<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 或者通过CSS属性 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>image2.avif<span class="token punctuation">)</span></span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上图，我们甚至可以依赖 service worker 的请求拦截特性，当页面发出 <code>fetch</code> 操作时，它可以将请求拦截住，然后给出自己的响应，这样就能在请求完 <code>avif</code> 格式的图片以后，在 service worker 当中调用解码器，将图片转码。同时，因为是运行在 service worker 线程当中，解码操作并不会阻塞 UI 线程。</p><p>另外，由于 <code>avif</code> 是基于 AV1 视频编码的，Chrome 等浏览器在很早之前的版本就内置了 AV1 的解码器，但是直到最近才支持 <code>avif</code> 的解析。</p><p>所以实际上在内置了原生解码器的浏览器版本里面，我们就不需要使用这个 polyfill 实现的 JS 版本解码器了，可以直接使用效率更高的原生解码器。</p><p>当你还在犹豫不决时，<a href="https://www.bilibili.com/">bilibili</a>已经在他们的网站上使用了上了 avif 格式~ 你可以点进去它们的一篇专栏，然后用最新版本的 Chrome 去查看，看看是不是已经使用了 <code>avif</code> 格式的图片了。</p><div align="center">  <img alt="b站现在越来越露了，233" src="../../../../loading2.svg" data-original="/2024/04/27/picture-compress-api/3.png"></div><h3 id="使用-API-进行转换"><a href="#使用-API-进行转换" class="headerlink" title="使用 API 进行转换"></a>使用 API 进行转换</h3><h4 id="Convertio-1"><a href="#Convertio-1" class="headerlink" title="Convertio"></a>Convertio</h4><p><a href="https://developers.convertio.co/zh/">https://developers.convertio.co/zh/</a></p><p>首先需要注册获得一个 API_KEY。这个过程是免费的。</p><p>这是 API 文档：<a href="https://developers.convertio.co/zh/api/docs/">https://developers.convertio.co/zh/api/docs/</a>，官方给出了一些参数：</p><table class="files-table api-params-table">                            <thead>                            <tr>                                <td style="width:170px">Field</td>                                <td style="width:80px"></td>                                <td style="width:80px">Type</td>                                <td>Description</td>                            </tr>                            </thead>                            <tbody>                                                        <tr class="user-file-row">                                <td class="param-name">apikey</td>                                <td></td>                                <td>String</td>                                <td style="word-break: break-word">Your API Key                                                                                                </td>                            </tr>                                                        <tr class="user-file-row">                                <td class="param-name">input</td>                                <td></td>                                <td>String</td>                                <td style="word-break: break-word">Method of providing the input file.                                <br>Default Value:url                                <br>Allowed Values: url,raw,base64,upload                                </td>                            </tr>                                                        <tr class="user-file-row">                                <td class="param-name">file</td>                                <td></td>                                <td>String</td>                                <td style="word-break: break-word">URL of the input file (if input=url), or file content (if input = raw/base64)                                                                                                </td>                            </tr>                                                        <tr class="user-file-row">                                <td class="param-name">filename</td>                                <td><span class="param-opt">optional</span></td>                                <td>String</td>                                <td style="word-break: break-word">Input filename including extension (file.ext). Required if input = raw/base64                                                                                                </td>                            </tr>                                                        <tr class="user-file-row">                                <td class="param-name">outputformat</td>                                <td></td>                                <td>String</td>                                <td style="word-break: break-word">Output format, to which the file should be converted to.                                                                                                </td>                            </tr>                                                        <tr class="user-file-row">                                <td class="param-name">options</td>                                <td><span class="param-opt">optional</span></td>                                <td>Object</td>                                <td style="word-break: break-word">Conversion options. Now used to define callback URL, enable OCR and setting up its options. <b>You may find available OCR conversion options <a href="#options" style="color: #e41000">here</a> and callback example <a href="#options_callback" style="color: #e41000">here</a>.</b>                                                                                                </td>                            </tr>                                                        </tbody>                        </table><p>不过也像上面所说，它拥有一个免费计划，因此 API 的调用并不是无限的，好在它的限制措施也不多，只有一条：每 24h 转换 25 个文件，其它的限制也没有了，不会像有些产品，指定一堆复杂的政策骗钱。不过具体的我还没试用过，所以暂时没有 demo，平时一般都是线上服务解决问题也够了。</p><p>另外，这家的 API 服务似乎没有一些常用语言的 SDK，这可能会对开发者带来一些麻烦。（只有 PHP 的，所以 PHP 是不是世界上最好的语言呢 233）</p><p><s>不得不说，换个账号大法确实好用，希望这些网站的管理者没有看到我说的这句话。</s></p><h4 id="CloudConvert-1"><a href="#CloudConvert-1" class="headerlink" title="CloudConvert"></a>CloudConvert</h4><p><a href="https://cloudconvert.com/pricing">https://cloudconvert.com/pricing</a></p><p>它也同样需要注册来免费获取一个 key。相比于 Convertio，它的好处是支持了各种语言的 SDK，在开发的时候更加得心应手。不过他的免费额度也只有每天 25 个文件。</p><p>以 node 为例子，它的 SDK 在 Github 给出了比较详细的 demo：<a href="https://github.com/cloudconvert/cloudconvert-node">https://github.com/cloudconvert/cloudconvert-node</a></p><p>它的调用相比于其他的 API 来说，心智相对复杂一些。这可能是为了兼容多种文件的转换格式，因此它提供了 <code>job</code> 的概念。比如说下图就是创建了一种「工作」，其中包括了上传，转换，导出 3 个步骤。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// npm install cloudconvert --save</span><span class="token keyword">const</span> CloudConvert <span class="token operator">=</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'cloudconvert'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> cloudConvert <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CloudConvert</span><span class="token punctuation">(</span><span class="token string">'api_key'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> importUrl <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'my-file.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> outputName <span class="token operator">=</span> <span class="token string">'output-file'</span><span class="token punctuation">;</span><span class="token keyword">let</span> job <span class="token operator">=</span> <span class="token keyword">await</span> cloudConvert<span class="token punctuation">.</span>jobs<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">tasks</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token string-property property">'import-my-file'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">operation</span><span class="token operator">:</span> <span class="token string">'import/url'</span><span class="token punctuation">,</span>            <span class="token literal-property property">url</span><span class="token operator">:</span> importUrl        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">'convert-my-file'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">operation</span><span class="token operator">:</span> <span class="token string">'convert'</span><span class="token punctuation">,</span>            <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token string">'import-my-file'</span><span class="token punctuation">,</span>            <span class="token literal-property property">output_format</span><span class="token operator">:</span> <span class="token string">'webp'</span><span class="token punctuation">,</span>            <span class="token literal-property property">some_other_option</span><span class="token operator">:</span> <span class="token string">'value'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">'export-my-file'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">operation</span><span class="token operator">:</span> <span class="token string">'export/url'</span><span class="token punctuation">,</span>            <span class="token literal-property property">input</span><span class="token operator">:</span> outputName        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CloudConvert 给每个使用了 <code>export/url</code> 的任务都会返回一个公共的，能在互联网访问的 url，我们就可以通过这个 url 来获取到转换后的文件。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">job <span class="token operator">=</span> <span class="token keyword">await</span> cloudConvert<span class="token punctuation">.</span>jobs<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span>job<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Wait for job completion</span><span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cloudConvert<span class="token punctuation">.</span>jobs<span class="token punctuation">.</span><span class="token function">getExportUrls</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> writeStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">'./out/'</span> <span class="token operator">+</span> file<span class="token punctuation">.</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>https<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    response<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writeStream<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    writeStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'finish'</span><span class="token punctuation">,</span> resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>    writeStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个 SDK 还提供了沙盒环境，使得用户在测试 API 的时候不至于使用掉免费额度。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// Pass `true` to the constructor</span><span class="token keyword">const</span> cloudConvert <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CloudConvert</span><span class="token punctuation">(</span><span class="token string">'api_key'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>总体使用下来，API 还是最推荐这款，虽然说免费额度一致，相比于 Convertio 使用友好，也可以避免在测试的时候丢失配额。速度也总体上比 Convertio 来的更快。</p><h2 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h2><p>除了格式转换之外，我们还需要考虑图片压缩的问题。一般来说，图片压缩在绝大多数情况下可以取得非常好的效果。毕竟一般图片的生产方没有压缩的意识。</p><p>如果说格式的转换可能有比较固定的范式，那么图片压缩可以说是十分考验压缩算法的水平了。不同的压缩算法，在压缩率、压缩速度、压缩质量上都有着不同的表现。市面上能提供十分有竞争力的压缩能力的厂商属实不多，愿意免费的更是少之又少。除开压缩算法，如果我们正好有让图片大小变小的需求，那么图片的大小优化也肯定会很可观。比如说网站的大图没有必要使用 8k 的大图做展示，4k 就够了。如果不是刻意的保存需求，那么我们往往能创造一个改变图片大小的环境。不过图片大小也是一定会损害图片质量的。</p><p>在这个过程中，我们自然是希望图片的质量不能损失太多。毕竟很多图片一旦失去了高清晰度，就会让显示效果大打折扣。</p><h3 id="系统自带"><a href="#系统自带" class="headerlink" title="系统自带"></a>系统自带</h3><p>MacOS 系统自带图片的压缩功能。Apple 的官方说明中提及了这一点：</p><p><a href="https://support.apple.com/zh-cn/guide/preview/prvw2015/mac">https://support.apple.com/zh-cn/guide/preview/prvw2015/mac</a></p><ol><li>在 Mac 上的“预览” App  中，打开想要更改的文件。</li><li>选取“工具” &gt; “调整大小”，然后选择“重新采样图像”。</li><li>在“分辨率”栏中输入一个较小的值。</li><li>新的大小显示在底部。</li></ol><blockquote><p>【提示】若要同时减小多个图像的文件大小，请在同一个窗口中显示这些图像，并在窗口的边栏中选择它们，然后选取“工具” &gt; “调整大小”。</p></blockquote><p>首先 Apple 的能力确实还是值得信赖的，压缩图片很快。并且在这个过程中，可以选择一些常见的图片大小，系统能力集成，也让这个过程执行的非常丝滑方便。但是缺点也很明显：那就是能选择的尺寸太少了，且最高只支持到 <code>1280*720</code>. 在当前场景下，它确实用处只会越来越小。</p><p>在这个过程中，甚至还能顺带转换下图片的格式，可惜不支持 <code>WebP</code>。如果转换为 <code>png</code> 格式，有的时候甚至图片还会变大…</p><h3 id="imagemin"><a href="#imagemin" class="headerlink" title="imagemin"></a>imagemin</h3><p>作为前端开发，imagemin 自然是我们再熟悉不过的产品之一了。它的最大优势是我们可以集成在 CI&#x2F;CD 环境中。每当我们进行打包的时候，我们可以在打包的过程中直接使用 imagemin 来进行图片压缩。</p><p>Imagemin 是围绕「插件」构建的。插件是用于压缩特定图片格式的 npm 软件包（例如，<code>mozjpeg</code> 会压缩 JPEG）。选择插件时，最重要的考虑因素是它是「有损」还是「无损」。在无损压缩中，不会丢失任何数据。有损压缩会减小文件大小，但代价是可能会降低图片质量。如果插件未提及它是「有损」还是「无损」，您可以通过其 API 来判断：如果您可以指定输出的图片质量，则它是「有损」的。</p><table>    <thead>      <tr>        <th>图片格式</th>        <th>有损插件</th>        <th>无损插件</th>      </tr>    </thead>    <tbody>      <tr>        <td>JPEG</td>        <td>          <a href="https://www.npmjs.com/package/imagemin-mozjpeg">imagemin-mozjpeg</a>        </td>        <td>          <a href="https://www.npmjs.com/package/imagemin-jpegtran">imagemin-jpegtran</a>        </td>      </tr>      <tr>        <td>PNG</td>        <td>          <a href="https://www.npmjs.com/package/imagemin-pngquant">imagemin-pngquant</a>        </td>        <td>          <a href="https://www.npmjs.com/package/imagemin-optipng">imagemin-optipng</a>        </td>      </tr>      <tr>        <td>GIF</td>        <td>          <a href="https://www.npmjs.com/package/imagemin-giflossy">imagemin-giflossy</a>        </td>        <td>          <a href="https://www.npmjs.com/package/imagemin-gifsicle">imagemin-gifsicle</a>        </td>      </tr>      <tr>        <td>SVG</td>        <td>          <a href="https://www.npmjs.com/package/imagemin-svgo">imagemin-svgo</a>        </td>        <td></td>      </tr>      <tr>        <td>WebP</td>        <td>          <a href="https://www.npmjs.com/package/imagemin-webp">imagemin-webp</a>        </td>        <td>          <a href="https://www.npmjs.com/package/imagemin-webp">imagemin-webp</a>        </td>      </tr>    </tbody>  </table><p>在通过跟打包工具集成 imagemin 之后，我们就可以在打包的过程中，使用 imagemin 来进行图片压缩。这里使用 Webpack 为例子：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> ImageminPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'imagemin-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default<span class="token punctuation">;</span><span class="token keyword">const</span> CopyWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'copy-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">'./index.js'</span><span class="token punctuation">,</span>  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">'bundle.js'</span><span class="token punctuation">,</span>    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">CopyWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">from</span><span class="token operator">:</span> <span class="token string">'img/**/**'</span><span class="token punctuation">,</span>        <span class="token literal-property property">to</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dist'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">ImageminPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">pngquant</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">quality</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此代码会告知 Imagemin 使用 Pngquant 插件压缩 PNG。quality 字段使用 min 和 max 值范围来确定压缩级别 - 0 是最低压缩级别，1 是最高压缩级别。如需强制所有图片以 50% 质量压缩，请将 0.5 同时作为最小值和最大值传递。</p><p>假设我们还需要压缩 jpg 文件，那么我们需要添加如下配置：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> imageminMozjpeg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'imagemin-mozjpeg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">new</span> <span class="token class-name">ImageminPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">pngquant</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">quality</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 已有配置，无需新增</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">imageminMozjpeg</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">quality</span><span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以说，每种插件的具体用法都不一样，具体得您自己去查阅对应插件的文档。然后我们根据项目的需要，按需进行配置。比如你的项目如果确实只是用了 <code>png</code> 和 <code>jpg</code> 两种图片格式，那么你只需要配置 <code>pngquant</code> 和 <code>mozjpeg</code> 即可。</p><p>我们甚至还可以将 Imagemin 本身用作 Node 脚本。以下代码使用 <code>imagemin-mozjpeg</code> 插件将 JPEG 文件的质量压缩为 50（0 表示最差；100 表示最佳）：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'imagemin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> imageminMozjpeg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'imagemin-mozjpeg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">imagemin</span><span class="token punctuation">(</span>      <span class="token punctuation">[</span><span class="token string">'source_dir/*.jpg'</span><span class="token punctuation">,</span> <span class="token string">'another_dir/*.jpg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token literal-property property">destination</span><span class="token operator">:</span> <span class="token string">'destination_dir'</span><span class="token punctuation">,</span>        <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">imageminMozjpeg</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">quality</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="TinyPNG"><a href="#TinyPNG" class="headerlink" title="TinyPNG"></a>TinyPNG</h3><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/04/27/picture-compress-api/6.jpeg"></div><p>在官网的介绍中，他们这么写：TinyPNG 使用智能有损压缩技术将您的 <code>WebP</code>, <code>PNG</code> 和 <code>JPEG</code> 图片的文件大小降低。 通过选择性的减少图片中的颜色，只需要很少的字节数就能保存数据。 对视觉的影响几乎不可见，但是在文件大小上有非常大的差别。</p><p>经过实测，无论是什么环境下，他们的图片损失都很小，但是压缩率非常高。</p><p><a href="https://tinypng.com/">https://tinypng.com/</a> 进入之后直接上传即可，每次最多上传 20 张图片。一般来说足够支持需要顺手支持的场景。</p><h3 id="黑魔法"><a href="#黑魔法" class="headerlink" title="黑魔法"></a>黑魔法</h3><p>偶然在知乎上看到了无限制使用 node 压缩图片的解法，先上 Github 地址：（这个并不是我写的，特此注明下）</p><p><a href="https://github.com/zhanyuzhang/super-tinypng">super-tinypng</a></p><p>知乎原文链接：<a href="https://zhuanlan.zhihu.com/p/152317953">https://zhuanlan.zhihu.com/p/152317953</a></p><p>这里我概括下作者的思路（大部分为作者原文，这里稍微提炼了下）：</p><blockquote><p>网页版的服务，我们仍然可以达到「无限使用」的效果——事实上我们完全不需要在云端保存那 20 张图片，这在不登录的情况下，是一定存在漏洞的。因此我们可以直接尝试使用网页和服务器的接口实现图片的压缩。<br>一般来说，这种免登录就可试用的系统，都是通过用户 IP 来限制用户的操作次数的。目前的 web 架构大多数都是通过 <code>nginx</code> 作为反向代理的，换句话说，客户端并不是直接请求应用服务的，而是通过统一接入层（往往是 <code>nginx</code>） 来转发请求的。而 <code>nginx</code> 恰恰约定了 <code>X-Forwarded-For</code> 请求头告知下游服务用户的 IP。实际上，基本上所有的反向代理服务都实现了这个约定，以确保下游的服务可以感知到经过的反向代理，并从中获取到用户的 IP 地址。<br>那么我们能不能在客户端伪造这个头部，每次上传图片的时候都设置一个随机的 IP 呢？所以就决定尝试一下。结果发现，该方法确实可行！</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>  <span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">'TinyPNG – Compress PNG images while preserving transparency'</span><span class="token punctuation">,</span>  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/web/shrink'</span><span class="token punctuation">,</span>  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token literal-property property">rejectUnauthorized</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token string-property property">'Postman-Token'</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string-property property">'Cache-Control'</span><span class="token operator">:</span> <span class="token string">'no-cache'</span><span class="token punctuation">,</span>    <span class="token string-property property">'Content-Type'</span><span class="token operator">:</span> <span class="token string">'application/x-www-form-urlencoded'</span><span class="token punctuation">,</span>    <span class="token string-property property">'User-Agent'</span><span class="token operator">:</span>      <span class="token string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 上传图片的时候加上这两行：</span>options<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'X-Forwarded-For'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getRandomIP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fileUpload</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// console.log('可以压缩：' + file);</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完整的代码原作者已经在知乎、Github 上开源了，感兴趣的可以自行尝试。</p><p>同时，作者也发布到了 npm 上面。只需要全局安装：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">pnpm</span> i super-tinypng <span class="token parameter variable">-g</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在你想要压缩图片的目录里面运行 <code>super-tinypng</code> 就能自动压缩图片了，并且不会有数量限制！</p><p>不过 TinyPNG 在未来是完全有可能将这个办法给封杀的，大家能用就早用早享受。</p><h3 id="不受限制的站点"><a href="#不受限制的站点" class="headerlink" title="不受限制的站点"></a>不受限制的站点</h3><p>Free TinyPNG <a href="https://free.tinypng.site/">https://free.tinypng.site/</a></p><p>这个网站和 TinyPNG 网站几乎一样，不同的是它取消了数量限制，和大小限制。图片超过 5MB，是不能被免费 TinyPNG 的网站服务和 API 接受的。但是在这个站点就可以。</p><p>这个网站有宣称自己的算法和 TinyPNG 一致，不过具体有待考证。</p><h3 id="API-服务"><a href="#API-服务" class="headerlink" title="API 服务"></a>API 服务</h3><p>他们家的 API 服务同样也十分慷慨，对每个账户每个月有 500 次的免费调用次数。更惊喜的是，他们对于主流的代码环境都支持。比如针对于 <code>node.js</code> 他们专门开发了易用的 SDK，实际在最简单的环境中，我们仅需4行代码就可以使用 API 进行图片压缩了。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// npm install tinify</span><span class="token keyword">const</span> tinify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"tinify"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tinify<span class="token punctuation">.</span>key <span class="token operator">=</span> <span class="token string">"API_KEY"</span><span class="token punctuation">;</span><span class="token keyword">const</span> source <span class="token operator">=</span> tinify<span class="token punctuation">.</span><span class="token function">fromFile</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">await</span> source<span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span>outputPath<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>要获取 API_KEY，只需要注册一个账号，然后就能在官网的控制台中获取。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/04/27/picture-compress-api/2.jpeg"></div><p>我们可以在控制台看到我们这个月使用的次数。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/04/27/picture-compress-api/1.png"></div><p>如果说想批量压缩图片，这里有个 demo 供参考使用，可以直接在 node 环境下运行。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> tinify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"tinify"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tinify<span class="token punctuation">.</span>key <span class="token operator">=</span> <span class="token string">"API_KEY"</span><span class="token punctuation">;</span><span class="token keyword">const</span> folderPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'..'</span><span class="token punctuation">,</span> <span class="token string">'OLD_FOLDER_NAME'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 替换为您在外面一级的文件夹路径</span><span class="token keyword">const</span> folderName <span class="token operator">=</span> <span class="token string">'NEW_FOLDER_NAME'</span><span class="token punctuation">;</span> <span class="token comment">// 新文件夹的名称，会在当前目录生成</span><span class="token keyword">const</span> imageCount <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span> <span class="token comment">// 替换为要压缩的图片数量</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">compressImage</span><span class="token punctuation">(</span><span class="token parameter">imagePath<span class="token punctuation">,</span> outputPath</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> source <span class="token operator">=</span> tinify<span class="token punctuation">.</span><span class="token function">fromFile</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">await</span> source<span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span>outputPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">压缩成功：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>outputPath<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">压缩失败：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>imagePath<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">compressImagesInFolder</span><span class="token punctuation">(</span><span class="token parameter">folderPath<span class="token punctuation">,</span> count</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> imageFiles <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>folderPath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">file</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> extension <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> extension <span class="token operator">===</span> <span class="token string">'.png'</span> <span class="token operator">||</span> extension <span class="token operator">===</span> <span class="token string">'.jpg'</span> <span class="token operator">||</span> extension <span class="token operator">===</span> <span class="token string">'.jpeg'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> selectedImages <span class="token operator">=</span> imageFiles<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> imageFile <span class="token keyword">of</span> selectedImages<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> imagePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>folderPath<span class="token punctuation">,</span> imageFile<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> compressedImagePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> folderName<span class="token punctuation">,</span> imageFile<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 修改输出路径</span>      <span class="token keyword">await</span> <span class="token function">compressImage</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">,</span> compressedImagePath<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 传递输出路径给compressImage函数</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'压缩图片时发生错误：'</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">createOutputFolder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> folderPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> folderName<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>folderPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>folderPath<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> folderPath<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token function">createOutputFolder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">compressImagesInFolder</span><span class="token punctuation">(</span>folderPath<span class="token punctuation">,</span> imageCount<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>图片压缩的不同姿势，希望能帮助到仔细看完这篇文章的你。</p><p>如果让我说一个总结，我认为在当下（2024.4）我使用这些方法的频率是这样的：</p><ol><li>如果是在不改变当前图片格式的情况下，我会优先使用 tinypng 进行压缩。毕竟我们有办法无限白嫖它。</li><li>如果是在项目中使用，那么 imagemin 是我们优先的考量。能集成在 CI&#x2F;CD 自然是开发的最佳实践之一。</li><li>如果是针对于博客项目，或者一些图片服务，imagemin 有可能不支持对应的脚手架，那么就会使用命令行。这种时候我会统一将图片转成 webp，这样子用户的体验是最好的。</li><li>如果是针对于图片需要小幅修改的场景，那么依据需要修改好的范围，我会针对性的使用 Luna Paint 等集成在 VS Code 中的插件服务 &gt; 能云存储的在线服务 &gt; 到 Photoshop 等图片修改工具进行修改。</li><li>除去以上情形无法解决，我会使用本文提到的部分在线服务。</li></ol><h2 id="参考文档-感谢："><a href="#参考文档-感谢：" class="headerlink" title="参考文档 &amp; 感谢："></a>参考文档 &amp; 感谢：</h2><p><a href="https://web.dev/articles/codelab-imagemin-webpack?hl=zh-cn">https://web.dev/articles/codelab-imagemin-webpack?hl=zh-cn</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="技术总结" scheme="https://blog.pengdonglai.com/categories/%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="API" scheme="https://blog.pengdonglai.com/tags/API/"/>
    
    <category term="web" scheme="https://blog.pengdonglai.com/tags/web/"/>
    
    <category term="图片" scheme="https://blog.pengdonglai.com/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>国内二次元图片API汇总保存</title>
    <link href="https://blog.pengdonglai.com/2024/04/14/anime-pictures/"/>
    <id>https://blog.pengdonglai.com/2024/04/14/anime-pictures/</id>
    <published>2024-04-14T11:28:29.000Z</published>
    <updated>2024-06-03T17:04:59.285Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><blockquote><p>本文由「赵苦瓜のBlog~」改编而来，原文地址：<a href="https://blog.jixiaob.cn/?post=93">https://blog.jixiaob.cn/?post=93</a></p></blockquote><p>「国内」包含范围：中国大陆。港澳台会和海外放到另外的一个 Post 中去。</p><p>首先感谢原作者能一下子提供这么多的 API，并且绝大部分质量还是非常不错的，覆盖到的图片应该有十万量级了。本文会根据作者自己的癖好做出修改<s>才不是删去了非二次元OvO</s>。</p><p>发出来之前应该是做了一些补完计划，目前所有的 API，已做好过滤并且附上了图。针对于可能的加载情况做了一些懒加载优化（毕竟图片这么多）。</p><p>后续的计划是，附上一些 API 的说明，之后会对文章进行分类，并逐渐淘汰一些不用了的&#x2F;使用频率低的 API。另外，这些 API 还是国内使用为主，后续应该会补一篇国外的，质量会更好。以及本人秉承着自给自足丰衣足食的原则，二次元<s>摄图</s>应该也会开发（已经有了），并且不是 API 套皮。推销一波自己的 API，图源来自 Jitsu，后面也会有他的 API 分享。然后我也会一直补充这些 API。</p><p><a href="https://moe.starfishdl.site/api/setu/v1">https://moe.starfishdl.site/api/setu/v1</a></p><p>（取消了横屏和竖屏的展示，因为需要花费很多查询次数）</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://moe.starfishdl.site/api/setu/v1" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"></p><p>希望大家可以找到自己喜欢的二次元美图，也希望大家爱惜好身体！以下为正文：</p><hr><p>记录一些随机图API的地址&#x3D;w&#x3D;，点击图片即可刷新预览图。</p><p>关于图片保存：</p><p>如果在这个页面刷到一些好看的图片想保存的话，<s>直接右键另存为或者下载是保存不到你看到的图片的，而是另一张随机图</s>有可能是可以保存原图的。而且如果复制粘贴到 word 这种会二次从互联网上下载的软件里也会是另一张随机图。</p><p>可以复制图片然后粘贴到画图之类的不会从互联网上二次下载的软件中然后保存。</p><h2 id="1-次元API-举个栗子随机二次元图床API"><a href="#1-次元API-举个栗子随机二次元图床API" class="headerlink" title="1 次元API-举个栗子随机二次元图床API"></a>1 次元API-举个栗子随机二次元图床API</h2><p><a href="https://t.mwm.moe/">https://t.mwm.moe/</a></p><p>此外还有萌图、风景图、白底图、自适应屏幕、原神、AI图和随机二次元头像的接口，点击上方链接即可查看</p><p>另外在接口后面加上&#x2F;img.txt即可查看图片链接列表，非常方便。</p><p>PC端（横屏）：</p><p><a href="https://t.mwm.moe/pc">https://t.mwm.moe/pc</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://t.mwm.moe/pc" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"></p><p>移动端（竖屏）：</p><p><a href="https://t.mwm.moe/mp">https://t.mwm.moe/mp</a></p><p style="text-align:center;"><span style="font-size:16px;"><img src="../../../../loading2.svg" data-original="https://t.mwm.moe/mp" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random() * 5;"><br></span></p><p>二次元风景：</p><p><a href="https://t.mwm.moe/fj">https://t.mwm.moe/fj</a></p><p style="text-align:center;"><span style="font-size:16px;"><img src="../../../../loading2.svg" data-original="https://t.mwm.moe/fj" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random() * 5;"><br></span></p><h2 id="2-98情缘API"><a href="#2-98情缘API" class="headerlink" title="2 98情缘API"></a>2 98情缘API</h2><p>随机壁纸</p><p><a href="http://www.98qy.com/sjbz/api.php">http://www.98qy.com/sjbz/api.php</a></p><p style="text-align:center;"><span style="font-size:16px;"><img src="../../../../loading2.svg" data-original="http://www.98qy.com/sjbz/api.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"><br></span></p><h2 id="3-Lolicon-API"><a href="#3-Lolicon-API" class="headerlink" title="3 Lolicon API"></a>3 Lolicon API</h2><p>神代绮凛大佬是神！</p><p>这个不是直接返回图片，而是一个json信息，图片的链接在json里面。</p><p>同时这个也可以加tag、r18等参数来缩小图片查找范围，很好用&#x3D;w&#x3D;</p><p>可以拿来做QQ群的涩图机器人</p><p><a href="https://api.lolicon.app/setu/v2">https://api.lolicon.app/setu/v2</a></p><h2 id="4-NyanCatdaの小站"><a href="#4-NyanCatdaの小站" class="headerlink" title="4 NyanCatdaの小站"></a>4 NyanCatdaの小站</h2><p>这个也是返回json，不过现在好像不能用了qwq</p><p><a href="https://api.nyan.xyz/httpapi/sexphoto/">https://api.nyan.xyz/httpapi/sexphoto/</a></p><p>跟站长确认过了，上面的接口停用了，不过有另一个新的涩图接口</p><p><a href="https://sex.nyan.xyz/">https://sex.nyan.xyz/</a></p><p>这个也是可以返回json，也可以直接返回图片</p><p>可以筛选r18，指定作者pid，指定返回数量，指定tag关键字等等</p><p><a href="https://sex.nyan.xyz/api/v2/img">https://sex.nyan.xyz/api/v2/img</a></p><p style="text-align:center;"><span style="font-size:16px;"><img src="../../../../loading2.svg" data-original="https://sex.nyan.xyz/api/v2/img" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"><br></span></p><h2 id="5-超级小兔的随机图"><a href="#5-超级小兔的随机图" class="headerlink" title="5 超级小兔的随机图"></a>5 超级小兔的随机图</h2><p>随机图</p><p><a href="https://imgapi.xl0408.top/index.php">https://imgapi.xl0408.top/index.php</a></p><p style="text-align:center;"><span style="font-size:16px;"><img src="../../../../loading2.svg" data-original="https://imgapi.xl0408.top/index.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"><br></span></p><h2 id="6-EEE-DOG随机图API"><a href="#6-EEE-DOG随机图API" class="headerlink" title="6 EEE.DOG随机图API"></a>6 EEE.DOG随机图API</h2><p>呓喵酱的随机图</p><p>这个也可以加参数，指定筛选的尺寸，是否显示r18，是否显示为网页等，同时也有必应和头像的随机图接口</p><p><a href="https://api.yimian.xyz/img">https://api.yimian.xyz/img</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.yimian.xyz/img" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random() * 5;"></p><h2 id="7-岁月小筑随机背景API"><a href="#7-岁月小筑随机背景API" class="headerlink" title="7 岁月小筑随机背景API"></a>7 岁月小筑随机背景API</h2><p><a href="https://img.xjh.me/random_img.php">https://img.xjh.me/random_img.php</a></p><p>这个好像返回的不是纯图片，需要用iframe引用</p><p>多了一个百度统计的东西emmm</p><p>感觉有点因噎废食了</p><p>由于返回的不是纯图片感觉用处不是很广泛（</p><p> 找到一个调用岁月小筑但是是直接返回图片的：</p><p><a href="https://cloud.qqshabi.cn/api/images/api.php">https://cloud.qqshabi.cn/api/images/api.php</a></p><p><a href="https://cloud.qqshabi.cn/apidetail/33.html">https://cloud.qqshabi.cn/apidetail/33.html</a></p><h2 id="8-樱花随机二次元图片API"><a href="#8-樱花随机二次元图片API" class="headerlink" title="8 樱花随机二次元图片API"></a>8 樱花随机二次元图片API</h2><p>好像用樱花的这个的人也挺多的</p><p><a href="https://www.dmoe.cc/random.php">https://www.dmoe.cc/random.php</a></p><p style="text-align:center;"><span style="font-size:16px;"><img src="../../../../loading2.svg" data-original="https://www.dmoe.cc/random.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"> <br></span></p><h2 id="9-韩小韩API接口站"><a href="#9-韩小韩API接口站" class="headerlink" title="9 韩小韩API接口站"></a>9 韩小韩API接口站</h2><p>韩小韩API除了这两个图片还有好多其他的，比如风景图、电脑壁纸、桌面壁纸、随机头像等</p><p>不过感觉他用的图片CDN访问速度有点慢（</p><p>随机二次元图片API接口</p><p><a href="https://api.vvhan.com/api/wallpaper/acg">https://api.vvhan.com/api/wallpaper/acg</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.vvhan.com/api/wallpaper/acg" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"></p><h2 id="10-缙哥哥的博客"><a href="#10-缙哥哥的博客" class="headerlink" title="10 缙哥哥的博客"></a>10 缙哥哥的博客</h2><p>原神随机图</p><p>收录了数千张原神图片，还有特别大的那种（一张二三十兆）</p><p><a href="https://api.dujin.org/pic/yuanshen/">https://api.dujin.org/pic/yuanshen/</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.dujin.org/pic/yuanshen/" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"></p><h2 id="11-PAULZZH-东方Project随机图片API"><a href="#11-PAULZZH-东方Project随机图片API" class="headerlink" title="11 PAULZZH 东方Project随机图片API"></a>11 PAULZZH 东方Project随机图片API</h2><p>东方随机图，全都是东方的图，图库总量也很大</p><p><a href="https://blog.paulzzh.com/archives/50.html">https://blog.paulzzh.com/archives/50.html</a></p><p><a href="https://img.paulzzh.com/touhou/random">https://img.paulzzh.com/touhou/random</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://img.paulzzh.com/touhou/random" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"></p><h2 id="12-随机二次元图片API"><a href="#12-随机二次元图片API" class="headerlink" title="12 随机二次元图片API"></a>12 随机二次元图片API</h2><p>作者似乎没有给自己站点起名字，那就发下链接，这位大大的图说实在的质量也非常不错：<a href="https://api.sretna.cn/">https://api.sretna.cn/</a></p><p>API: <a href="https://api.sretna.cn/comic.php">https://api.sretna.cn/comic.php</a></p><p>电脑端随机二次元（2560*1440）：</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.sretna.cn/layout/pc.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"></p><p>手机端随机二次元（1440*2560）：</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.sretna.cn/layout/pe.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"></p><p>动漫头像随机二次元（1000*1000）：</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.sretna.cn/layout/ar.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"></p><h2 id="13-保罗API"><a href="#13-保罗API" class="headerlink" title="13 保罗API"></a>13 保罗API</h2><p>白底二次元图片，适合当作纯色桌面背景之类的</p><p><a href="https://api.paugram.com/wallpaper/">https://api.paugram.com/wallpaper/</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.paugram.com/wallpaper/" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"></p><h2 id="14-小歪API"><a href="#14-小歪API" class="headerlink" title="14 小歪API"></a>14 小歪API</h2><p>小歪除了这个动漫的随机图，还有表情包少女Menhera-chan和三次元风景壁纸的接口</p><p><a href="https://api.aixiaowai.cn/api/api.php">https://api.aixiaowai.cn/api/api.php</a></p><p>二次元动漫</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.aixiaowai.cn/api/api.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"></p><p>mc酱动漫</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.aixiaowai.cn/mcapi/mcapi.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"></p><h2 id="15-樱道随机图片API接口"><a href="#15-樱道随机图片API接口" class="headerlink" title="15 樱道随机图片API接口"></a>15 樱道随机图片API接口</h2><p>樱道这里有非常多的系列可以选择，包含二次元与三次元</p><p>二次元动漫综合系列、赛马娘系列、东京食尸鬼系列、Fate系列、为美好世界献上祝福系列、某科学的超电磁炮系列、原神系列、我的世界系列、神奇宝贝系列、龙珠系列、罪恶王冠系列、鬼灭之刃系列、火影忍者系列、海贼王系列、进击的巨人系列、从零开始的异世界生活系列、刀剑神域系列、钢之炼金术师系列、妖精的尾巴系列、缘之空系列、东方project系列、猫娘系列、风景系列、物语系列、少女前线系列、明日方舟系列、重装战姬系列、P站系列、CG系列、守望先锋系列、王者荣耀系列、少女写真系列、橘里橘气系列<br>这些系列里面还有细分，超级精细</p><p>这里以二次元动漫综合系列的动漫综合1为例：</p><p><a href="https://api.r10086.com/%E6%A8%B1%E9%81%93%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3.php?%E5%9B%BE%E7%89%87%E7%B3%BB%E5%88%97=%E5%8A%A8%E6%BC%AB%E7%BB%BC%E5%90%881">https://api.r10086.com/%E6%A8%B1%E9%81%93%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3.php?%E5%9B%BE%E7%89%87%E7%B3%BB%E5%88%97=%E5%8A%A8%E6%BC%AB%E7%BB%BC%E5%90%881</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.r10086.com/%E6%A8%B1%E9%81%93%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3.php?%E5%9B%BE%E7%89%87%E7%B3%BB%E5%88%97=%E5%8A%A8%E6%BC%AB%E7%BB%BC%E5%90%881" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'&amp;'+Math.random()*5;"></p><p>还有少女写真系列里面的COS系列：</p><p><a href="https://api.r10086.com/%E6%A8%B1%E9%81%93%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3.php?%E5%9B%BE%E7%89%87%E7%B3%BB%E5%88%97=%E5%B0%91%E5%A5%B3%E5%86%99%E7%9C%9F1S">https://api.r10086.com/%E6%A8%B1%E9%81%93%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3.php?%E5%9B%BE%E7%89%87%E7%B3%BB%E5%88%97=%E5%B0%91%E5%A5%B3%E5%86%99%E7%9C%9F1S</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.r10086.com/%E6%A8%B1%E9%81%93%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87api%E6%8E%A5%E5%8F%A3.php?%E5%9B%BE%E7%89%87%E7%B3%BB%E5%88%97=%E5%B0%91%E5%A5%B3%E5%86%99%E7%9C%9F1" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'&amp;'+Math.random()*5;""></p><h2 id="16-搏天api"><a href="#16-搏天api" class="headerlink" title="16 搏天api"></a>16 搏天api</h2><p>这里面还有其他的接口，比如随机动漫头像之类的</p><p><a href="https://api.btstu.cn/sjbz/api.php">https://api.btstu.cn/sjbz/api.php</a></p><p>三次元图片</p><p>名称 必填 类型 说明<br>  method 否 string 输出壁纸端[mobile|pc|zsy]默认为pc<br>  lx 否 string 选择输出分类[meizi|dongman|fengjing|suiji]，为空随机输出<br>  format 否 string 输出壁纸格式[json|images]默认为images</p><p style="text-align:center;"><span style="font-size:16px;"><img src="../../../../loading2.svg" data-original="https://api.btstu.cn/sjbz/api.php?lx=dongman&format=images" height="300" alt="点击刷新预览图" title="点击刷新预览图" style="height:300px;" onclick="event.stopPropagation();src=src+'?'+Math.random()*5;"></span></p><h2 id="17-小C的每日漫图介绍页的随机图"><a href="#17-小C的每日漫图介绍页的随机图" class="headerlink" title="17 小C的每日漫图介绍页的随机图"></a>17 小C的每日漫图介绍页的随机图</h2><p><a href="https://pixiv.xiaoc.cn/v1/img/random?vertical=1">https://pixiv.xiaoc.cn/v1/img/random?vertical=1</a></p><p>返回json格式，包含图片标题、pid、作者和图片链接，vertical&#x3D;1表示只有竖图</p><h2 id="18-Jitsuの随机涩图API-docs-anosu-top"><a href="#18-Jitsuの随机涩图API-docs-anosu-top" class="headerlink" title="18 Jitsuの随机涩图API(docs.anosu.top)"></a>18 Jitsuの随机涩图API(docs.anosu.top)</h2><p>具体使用就看文档吧，可以返回json，可以直接返回图片，可以加tag标签、r18等参数等等。</p><p><a href="https://docs.anosu.top/intro/params.html">请求参数 | API Docs (anosu.top)</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://image.anosu.top/pixiv/direct" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">收录来自群里传的梗：可以看到只不过是把r18参数设为了<span class="token number">1</span>然后标签做了对应以下链接<span class="token number">100</span><span class="token operator">%</span>出现涩图请用浏览器打开链接新年第一天大家祝大家冲个痛快https<span class="token punctuation">:</span><span class="token operator">//</span>image<span class="token punctuation">.</span>anosu<span class="token punctuation">.</span>top<span class="token operator">/</span>pixiv<span class="token operator">/</span>direct?r18<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>keyword<span class="token operator">=</span>azurlane碧蓝航线涩图https<span class="token punctuation">:</span><span class="token operator">//</span>image<span class="token punctuation">.</span>anosu<span class="token punctuation">.</span>top<span class="token operator">/</span>pixiv<span class="token operator">/</span>direct?r18<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>keyword<span class="token operator">=</span>bluearchive碧蓝档案涩图https<span class="token punctuation">:</span><span class="token operator">//</span>image<span class="token punctuation">.</span>anosu<span class="token punctuation">.</span>top<span class="token operator">/</span>pixiv<span class="token operator">/</span>direct?r18<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>keyword<span class="token operator">=</span>genshinimpact原神涩图https<span class="token punctuation">:</span><span class="token operator">//</span>image<span class="token punctuation">.</span>anosu<span class="token punctuation">.</span>top<span class="token operator">/</span>pixiv<span class="token operator">/</span>direct?r18<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>keyword<span class="token operator">=</span>arknights明日方舟涩图https<span class="token punctuation">:</span><span class="token operator">//</span>image<span class="token punctuation">.</span>anosu<span class="token punctuation">.</span>top<span class="token operator">/</span>pixiv<span class="token operator">/</span>direct?r18<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>keyword<span class="token operator">=</span>honkai崩坏三涩图https<span class="token punctuation">:</span><span class="token operator">//</span>image<span class="token punctuation">.</span>anosu<span class="token punctuation">.</span>top<span class="token operator">/</span>pixiv<span class="token operator">/</span>direct?r18<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>keyword<span class="token operator">=</span>fate命运涩图https<span class="token punctuation">:</span><span class="token operator">//</span>image<span class="token punctuation">.</span>anosu<span class="token punctuation">.</span>top<span class="token operator">/</span>pixiv<span class="token operator">/</span>direct?r18<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>keyword<span class="token operator">=</span>frontline少女前线涩图https<span class="token punctuation">:</span><span class="token operator">//</span>image<span class="token punctuation">.</span>anosu<span class="token punctuation">.</span>top<span class="token operator">/</span>pixiv<span class="token operator">/</span>direct?r18<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>keyword<span class="token operator">=</span>princess公主连接涩图https<span class="token punctuation">:</span><span class="token operator">//</span>image<span class="token punctuation">.</span>anosu<span class="token punctuation">.</span>top<span class="token operator">/</span>pixiv<span class="token operator">/</span>direct?r18<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>keyword<span class="token operator">=</span>idolmaster偶像大师涩图https<span class="token punctuation">:</span><span class="token operator">//</span>image<span class="token punctuation">.</span>anosu<span class="token punctuation">.</span>top<span class="token operator">/</span>pixiv<span class="token operator">/</span>direct?r18<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>keyword<span class="token operator">=</span>hololive皮套人涩图https<span class="token punctuation">:</span><span class="token operator">//</span>image<span class="token punctuation">.</span>anosu<span class="token punctuation">.</span>top<span class="token operator">/</span>pixiv<span class="token operator">/</span>direct?r18<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>keyword<span class="token operator">=</span>touhou东方涩图<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="19-Jitsuの随机涩图API-img-jitsu-top"><a href="#19-Jitsuの随机涩图API-img-jitsu-top" class="headerlink" title="19 Jitsuの随机涩图API(img.jitsu.top)"></a>19 Jitsuの随机涩图API(img.jitsu.top)</h2><p><a href="https://blog.jitsu.top/archives/3/" style="white-space:normal;"><span style="font-size:16px;">随机涩图API——随机返回我老婆（ - 迷途之旅 (jitsu.top)</span></a></p><p>这个也可以指定参数，调整图片大小，选择图片类型等，详见使用文档</p><p><a href="https://img.jitsu.top/#/instruction/?id=%e8%b0%83%e7%94%a8%e7%a4%ba%e4%be%8b"><span style="font-size:16px;">使用说明 - 随机漫图API 使用文档 (jitsu.top)</span></a></p><p><a href="https://moe.jitsu.top/api">https://moe.jitsu.top/api</a></p><p><a href="https://moe.jitsu.top/r18">https://moe.jitsu.top/r18</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://moe.jitsu.top/api" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="20-零七生活API"><a href="#20-零七生活API" class="headerlink" title="20 零七生活API"></a>20 零七生活API</h2><p><a href="https://api.oick.cn/random/api.php">https://api.oick.cn/random/api.php</a></p><p>可以加参数?type&#x3D;pc或者?type&#x3D;pe，表示电脑图或者手机图（横图和竖图）</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.oick.cn/random/api.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="21-桑帛云API"><a href="#21-桑帛云API" class="headerlink" title="21 桑帛云API"></a>21 桑帛云API</h2><p>这个里面也有一大堆接口，好像大部分都是用在qq群里根据别人的头像生成表情包的，也有一些随机图随机视频啥的，详情可以点进去看。</p><p>随机二次元动漫图</p><p><a href="https://api.lolimi.cn/API/dmt/api.php?type=image">https://api.lolimi.cn/API/dmt/api.php?type=image</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.lolimi.cn/API/dmt/api.php?type=image" height="300" alt="点击刷新预览图" title="点击刷新预览图" onclick="event.stopPropagation();src=src+'&amp;'+Math.random()*5;" style="height:300px;"></p><p>随机原神壁纸，返回来的是 text</p><p><a href="https://api.lolimi.cn/API/yuan/?type=text">https://api.lolimi.cn/API/yuan/?type=text</a></p><p>点击刷新预览图</p><h2 id="22-星河随机图片API"><a href="#22-星河随机图片API" class="headerlink" title="22 星河随机图片API"></a>22 星河随机图片API</h2><p>最近有更新的API</p><p>图片都是webp格式，速度很快</p><p>使用说明：随机图片API | ASXE &#x3D; 月落星沉</p><p>旧API：</p><p><a href="https://api.lovezyc.club/random.php">https://api.lovezyc.club/random.php</a></p><p>新API：</p><p><a href="https://api.asxe.vip/random.php">https://api.asxe.vip/random.php</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.asxe.vip/random.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><p>二次元风景：</p><p><a href="https://api.asxe.vip/scenery.php">https://api.asxe.vip/scenery.php</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.asxe.vip/scenery.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="23-LoliAPI-LoliAPI"><a href="#23-LoliAPI-LoliAPI" class="headerlink" title="23 LoliAPI | LoliAPI"></a>23 LoliAPI | LoliAPI</h2><p>有自适应二次元图片，手机端和PC端，随机二次元头像等。</p><p>二次元自适应：</p><p><a href="https://www.loliapi.com/acg/">https://www.loliapi.com/acg/</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://www.loliapi.com/acg/" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><p>二次元头像：</p><p><a href="https://www.loliapi.com/acg/pp/">https://www.loliapi.com/acg/pp/</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://www.loliapi.com/acg/pp/" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="24-魅影随机图片API"><a href="#24-魅影随机图片API" class="headerlink" title="24 魅影随机图片API"></a>24 魅影随机图片API</h2><p>有二次元图，三次元图，风景图和必应图，可以通过category选择</p><p>type可以选择直接302跳转图片地址或者返回xml或者返回json等。</p><p>二次元自适应随机图</p><p><a href="https://tuapi.eees.cc/api.php?category=dongman&amp;type=302">https://tuapi.eees.cc/api.php?category=dongman&amp;type=302</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://tuapi.eees.cc/api.php?category=dongman&type=302" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="25-赫萝随机图片API"><a href="#25-赫萝随机图片API" class="headerlink" title="25 赫萝随机图片API"></a>25 赫萝随机图片API</h2><p><a href="https://api.horosama.com/random.php">https://api.horosama.com/random.php</a></p><p>可以指定type（pc横图，mobile竖图，profile头像），format（jpg&#x2F;json）和分辨率resolution （1080p，2k，4k，small（头像适用））</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.horosama.com/random.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="26-如诗的API接口"><a href="#26-如诗的API接口" class="headerlink" title="26 如诗的API接口"></a>26 如诗的API接口</h2><p>除了这个pixiv壁纸外还有单独的PC、手机、表情包少女 Menhera-chan、必应壁纸和三次元风景壁纸的接口等等</p><p><a href="https://api.likepoems.com/img/pc">https://api.likepoems.com/img/pc</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.likepoems.com/img/pc" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="27-小小API"><a href="#27-小小API" class="headerlink" title="27 小小API"></a>27 小小API</h2><p>二次元（type是pc或者wap表示横图或者竖图）：</p><p><a href="https://v2.api-m.com/api/randomAcgPic?type=pc&amp;return=302">https://v2.api-m.com/api/randomAcgPic?type=pc&amp;return=302</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://v2.api-m.com/api/randomAcgPic?type=pc&return=302" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="28-素颜API"><a href="#28-素颜API" class="headerlink" title="28 素颜API"></a>28 素颜API</h2><p>里面有原神、甘城猫猫（猫羽雫）、jk、黑丝、随机二次元等随机图，还有其他可用的api接口。</p><p>原神随机图</p><p><a href="https://api.suyanw.cn/api/ys">https://api.suyanw.cn/api/ys</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.suyanw.cn/api/ys" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><p>甘城猫猫随机图</p><p><a href="https://api.suyanw.cn/api/mao">https://api.suyanw.cn/api/mao</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.suyanw.cn/api/mao" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><p>自适应二次元随机图</p><p><a href="https://api.suyanw.cn/api/comic/api.php">https://api.suyanw.cn/api/comic/api.php</a></p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.suyanw.cn/api/comic/api.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="29-无铭API"><a href="#29-无铭API" class="headerlink" title="29 无铭API"></a>29 无铭API</h2><p>里面也收录了很多API，不过大部分需要免费注册之后获取key之后才能使用。</p><p>随机动漫壁纸（需要注册后免费获取key）</p><p><a href="https://jkapi.com/api/dm_wallpaper">https://jkapi.com/api/dm_wallpaper</a></p><h2 id="30-御坂API"><a href="#30-御坂API" class="headerlink" title="30 御坂API"></a>30 御坂API</h2><p>随机p站插画（支持r18与非r18）<br><a href="https://ybapi.cn/API/pixiv.php">https://ybapi.cn/API/pixiv.php</a><br>参数1<br>r18&#x3D;非必填，填true为输出r18，不填则输出非r18<br>参数2<br>type&#x3D;非必填，填text输出文本格式，不填则输出json格式</p><p>新随机二次元PC横图</p><p>请求地址：<br><a href="https://ybapi.cn/API/dmt.php">https://ybapi.cn/API/dmt.php</a></p><p>随机二次元动漫图片（输出pc端横图）<br>请求地址：<br><a href="https://ybapi.cn/API/pc_acgimg.php">https://ybapi.cn/API/pc_acgimg.php</a></p><p>随机二次元动漫图片（输出pe端竖图）<br>请求地址：<br><a href="https://ybapi.cn/API/pe_acgimg.php">https://ybapi.cn/API/pe_acgimg.php</a></p><h2 id="31-夏沫博客美图古风二次元接口"><a href="#31-夏沫博客美图古风二次元接口" class="headerlink" title="31 夏沫博客美图古风二次元接口"></a>31 夏沫博客美图古风二次元接口</h2><p>作者开了防盗链，不过应该还能给qq机器人之类的用一用</p><p>接口文档：</p><p><a href="https://cdn.seovx.com/">https://cdn.seovx.com/</a></p><p><a href="https://www.seovx.com/73.html">https://www.seovx.com/73.html</a></p><p>防盗链白名单域名授权申请：</p><p><a href="https://www.seovx.com/1480.html">https://www.seovx.com/1480.html</a></p><p>二次元：</p><p><a href="https://cdn.seovx.com/d/">https://cdn.seovx.com/d/</a></p><p><a href="https://cdn.seovx.com/d/?mom=302">https://cdn.seovx.com/d/?mom=302</a></p><p>古风：</p><p><a href="https://cdn.seovx.com/ha/">https://cdn.seovx.com/ha/</a></p><p><a href="https://cdn.seovx.com/ha/?mom=302">https://cdn.seovx.com/ha/?mom=302</a></p><h2 id="32-糖豆子API"><a href="#32-糖豆子API" class="headerlink" title="32 糖豆子API"></a>32 糖豆子API</h2><p>他家的都是返回文本，所以只能访问后再查看了。</p><p>糖豆子api <a href="http://api.tangdouz.com/">http://api.tangdouz.com/</a><br>随机二次元<a href="http://api.tangdouz.com/sjdmbz.php">http://api.tangdouz.com/sjdmbz.php</a><br>随机兽耳<a href="http://api.tangdouz.com/sjer.php">http://api.tangdouz.com/sjer.php</a><br>随机二次元竖图<a href="http://api.tangdouz.com/abz/dm.php">http://api.tangdouz.com/abz/dm.php</a><br>随机美腿<a href="http://api.tangdouz.com/mt.php">http://api.tangdouz.com/mt.php</a><br>美女图<a href="http://api.tangdouz.com/mn.php">http://api.tangdouz.com/mn.php</a></p><h2 id="33-希速云API"><a href="#33-希速云API" class="headerlink" title="33 希速云API"></a>33 希速云API</h2><p>他家现在需要 APIKey，所以暂不支持显示预览。</p><p>随机二次元</p><p><a href="https://api.sdbj.top/api/ecy?apiKey=%E4%BD%A0%E7%9A%84apikey">https://api.sdbj.top/api/ecy?apiKey=你的apikey</a></p><h2 id="34-遇见API"><a href="#34-遇见API" class="headerlink" title="34 遇见API"></a>34 遇见API</h2><p><a href="https://api.yujn.cn/">https://api.yujn.cn/</a></p><p>随机动漫图：</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="http://api.yujn.cn/api/ecy.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><p>高质量acg图片：</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="http://api.yujn.cn/api/ACG.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><p>原神图：</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="http://api.yujn.cn/api/ys.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="35-最要学习API"><a href="#35-最要学习API" class="headerlink" title="35 最要学习API"></a>35 最要学习API</h2><p><a href="https://api.zylearning.top/">https://api.zylearning.top/</a></p><p>动漫壁纸：</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="http://api.zylearning.top/api/wallpaper?lx=dm" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="36-TenAPI"><a href="#36-TenAPI" class="headerlink" title="36 TenAPI"></a>36 TenAPI</h2><p><a href="https://tenapi.cn/">https://tenapi.cn/</a></p><p>随机动漫图 <a href="https://tenapi.cn/v2/acg">https://tenapi.cn/v2/acg</a></p><p>请求示例一：</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.qicaiyun.top/sjbz/api.php?lx=dongman" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><p>请求示例二：</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.qicaiyun.top/sjbz/api.php?method=mobile&lx=suiji" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><p>请求参数说明：<br>名称    必填    类型    说明<br>method         string    mobiel(手机端),pc(电脑端)<br>lx         string    dongman(动漫壁纸),meizi(美女壁纸),fengjing(风景壁纸)suiji(动漫和美女随机)</p><h2 id="37-ALAPI"><a href="#37-ALAPI" class="headerlink" title="37 ALAPI"></a>37 ALAPI</h2><p><a href="https://www.alapi.cn/">https://www.alapi.cn/</a></p><p>随机动漫图</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://v2.alapi.cn/api/acg?token=KA6k5H7oBNZavgEJ" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="38-玖逸API"><a href="#38-玖逸API" class="headerlink" title="38 玖逸API"></a>38 玖逸API</h2><p><a href="http://api.idcnow.cn/">http://api.idcnow.cn/</a></p><p>这个貌似是点进去后下载<br>二次元随机背景图：<a href="http://api.idcnow.cn/api/ecyimg.php">http://api.idcnow.cn/api/ecyimg.php</a><br>新浪反代：<a href="https://cdn.cdnjson.com/%E5%90%8E%E9%9D%A2%E5%8A%A0%E6%96%B0%E6%B5%AA%E5%9B%BE%E7%89%87%E7%9A%84%E5%9F%9F%E5%90%8D%EF%BC%8C%E4%B8%8D%E5%B8%A6https://">https://cdn.cdnjson.com/后面加新浪图片的域名，不带https://</a></p><h2 id="39-故梦API"><a href="#39-故梦API" class="headerlink" title="39 故梦API"></a>39 故梦API</h2><p><a href="https://api.gumengya.com/">https://api.gumengya.com</a></p><p>随机二次元壁纸</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="https://api.gumengya.com/Api/DmImg?format=image" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><h2 id="40-殇白API"><a href="#40-殇白API" class="headerlink" title="40 殇白API"></a>40 殇白API</h2><p><a href="http://api.caonmtx.cn/">http://api.caonmtx.cn/</a></p><p>随机动漫图片</p><p style="text-align:center;"><img src="../../../../loading2.svg" data-original="http://api.caonmtx.cn/api/dongman.php" height="300" alt="点击刷新预览图" title="点击刷新预览图" align onclick="event.stopPropagation();src=src+'?'+Math.random()*5;" style="height:300px;"></p><p>写在最后：如果你也有好的图片API，欢迎联系博主反馈！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="真正的生产力" scheme="https://blog.pengdonglai.com/categories/%E7%9C%9F%E6%AD%A3%E7%9A%84%E7%94%9F%E4%BA%A7%E5%8A%9B/"/>
    
    
    <category term="二次元图片" scheme="https://blog.pengdonglai.com/tags/%E4%BA%8C%E6%AC%A1%E5%85%83%E5%9B%BE%E7%89%87/"/>
    
    <category term="API" scheme="https://blog.pengdonglai.com/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>日语动词练习——N5上</title>
    <link href="https://blog.pengdonglai.com/2024/04/05/japanese-words-1/"/>
    <id>https://blog.pengdonglai.com/2024/04/05/japanese-words-1/</id>
    <published>2024-04-05T08:49:18.000Z</published>
    <updated>2024-09-22T09:18:57.152Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><link rel="stylesheet" type="text/css" href="https://japanese-beta.vercel.app/words/verb/words.css"><!-- <link rel="stylesheet" type="text/css" href="./words.css"> -->写在前面：<p>本博客的主人在这段时间内学日语，这里会列举一些日语动词以便于帮助记忆，并且可以提供一些打字练习。</p><h2 id="变化规则"><a href="#变化规则" class="headerlink" title="变化规则"></a>变化规则</h2><h3 id="ます形"><a href="#ます形" class="headerlink" title="ます形"></a>ます形</h3><p>①五段动词：将结尾假名变成它同行的前一个假名后+ます</p><p>例：行く～行きます 買う～買います</p><p>②一段动词：去る＋ます</p><p>例：食べる～食べます 起きる～起きます</p><p>③カ变动词：来（く）る～来（き）ます</p><p>④サ变动词：する～します</p><p>例：勉強する～勉強します</p><p>特殊五段动词：帰る～帰ります 知る～知ります</p><p>入る～入ります 要る～要ります</p><p>切る～切ります 走る～走ります</p><h3 id="ない形"><a href="#ない形" class="headerlink" title="ない形"></a>ない形</h3><p>①五段动词：将结尾假名变成它同行的あ段上的假名后+ない。</p><p>例：行く→行かない 買う→買わない</p><p>②一段动词：去る+ない</p><p>例：食べる→食べない 起きる→起きない</p><p>③カ变动词：来る→来（こ）ない</p><p>④サ变动词：する→しない</p><p>例：勉強する→勉強しない</p><p>特殊五段动词：帰る→帰らない 知る→知らない</p><p>其它的以此类推，将る变成ら+ない</p><h3 id="て形"><a href="#て形" class="headerlink" title="て形"></a>て形</h3><p>（1）五段动词：</p><p>①く→いて ぐ→いで</p><p>例：書く→書いて 脱ぐ→脱いで</p><p>②う、つ、る为结尾的，去掉う、つ、る＋って</p><p>例：買う→買って 立つ→立って 終わる→終わって</p><p>③む、ぬ、ぶ为结尾的去掉+む、ぬ、ぶ＋んで</p><p>例：飲む→飲んで 死ぬ→死んで 飛ぶ→飛んで</p><p>④以す为结尾的す→して</p><p>例：話す→話して</p><p>（2）一段动词：去る+て</p><p>例：食べる→食べて 起きる→起きて</p><p>（3）カ变动词：来る→来（き）て</p><p>（4）サ变动词：する→して</p><p>例：勉強する→勉強して</p><p>例外：行く→行って 帰る→帰って 知る→知って</p><h3 id="た型"><a href="#た型" class="headerlink" title="た型"></a>た型</h3><p>同て型，将て变为た即可。</p><h3 id="可能形"><a href="#可能形" class="headerlink" title="可能形"></a>可能形</h3><p>①五段动词：将结尾假名变成它同行的下一个假名后+る。</p><p>例：行く→行ける 買う→買える</p><p>②一段动词：去る+られる。</p><p>例：食べる→食べられる 起きる→起きられる</p><p>③カ变动词：来る→来（こ）られる</p><p>④サ变动词：する→できる</p><p>例：勉強する→勉強できる</p><h3 id="假定形"><a href="#假定形" class="headerlink" title="假定形"></a>假定形</h3><p>①五段动词：将结尾假名变成它同行的下一个假名后+ば</p><p>例：行く→行けば 買う→買えば</p><p>②一段动词：去る+れば</p><p>例：食べる→食べれば 起きる→起きれば</p><p>③カ变动词：来る→来（く）れば</p><p>④サ变动词：する→すれば</p><p>例：散歩する→散歩すれば</p><p>⑤形容词：去い+ければ</p><p>例：安い→安ければ おいしい→おいしければ</p><p>⑥形容动词：去だ+なら</p><p>例：暇だ→暇なら 簡単だ→簡単なら</p><p>名词：名词直接+なら</p><p>例：日本人→日本人なら</p><h3 id="意向形"><a href="#意向形" class="headerlink" title="意向形"></a>意向形</h3><p>①五段动词：将结尾假名变成它同行的最后一个假名后+う</p><p>例：行く→行こう 買う→買おう</p><p>②一段动词：去る+よう</p><p>例：食べる→食べよう 起きる→起きよう</p><p>③カ变动词：来る→来（こ）よう</p><p>④サ变动词： する→しよう</p><p>例：散歩する→散歩しよう</p><h3 id="命令形"><a href="#命令形" class="headerlink" title="命令形"></a>命令形</h3><p>①五段动词：将结尾假名变成它同行的下一个假名即可.</p><p>例：行く→行け 買う→買え</p><p>②一段动词：去る+ろ</p><p>例：起きる→起きろ 食べる→食べろ</p><p>③カ变动词：来る→来（こ）い</p><p>④サ变动词：する→しろ</p><p>例：勉強する→勉強しろ</p><h3 id="禁止形"><a href="#禁止形" class="headerlink" title="禁止形"></a>禁止形</h3><p>所有词的字典形（原形、基本形）+な</p><p>例：行く→行くな 起きる→起きるな 来る→来（く）るな 勉強する→勉強するな</p><h3 id="被动形"><a href="#被动形" class="headerlink" title="被动形"></a>被动形</h3><p>①五段动词：将结尾假名变成它所在行的あ段上假名后+れる</p><p>例：踏む→踏まれる 呼ぶ→呼ばれる</p><p>②一段动词：去る+られる</p><p>例：褒める→褒められる 食べる→食べられる</p><p>③カ变动词： 来る→来（こ）られる</p><p>④サ变动词：する→される</p><p>例：発明する→発明される</p><h3 id="使役形"><a href="#使役形" class="headerlink" title="使役形"></a>使役形</h3><p>①五段动词：将结尾假名变成它所在行的あ段上假名后+せる。</p><p>例：行く→行かせる 飲む→飲ませる</p><p>②一段动词：去る+させる</p><p>例：食べる→食べさせる 起きる→起きさせる</p><p>③カ变动词：来る→来（こ）させる</p><p>④サ变动词： する→させる</p><p>例：勉強する→勉強させる</p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>本篇介绍 N5 他动词。具体来说，可以通过本篇内容去对动词本身记忆，以及它的变形，进行刷题练习，达到记忆的效果。接下来是关于练习的说明：</p><ul><li>这里点击按钮你要学习的词性，点击后展开，再点击关闭</li></ul><div class="flex-row-box"><button class="btn-small waves-effect waves-light" onclick="hideALine(event, 'chinese')">隐藏中文</button><button class="btn-small waves-effect waves-light" onclick="hideALine(event, 'jisyo')">隐藏字典型</button><button class="btn-small waves-effect waves-light" onclick="hideALine(event, 'masu')">隐藏ます型</button><button class="btn-small waves-effect waves-light" onclick="hideALine(event, 'te')">展开て型</button><button class="btn-small waves-effect waves-light" onclick="hideALine(event, 'nai')">展开ない型</button><button class="btn-small waves-effect waves-light" onclick="hideALine(event, 'ta')">展开た型</button><button class="btn-small waves-effect waves-light" onclick="hideALine(event, 'meirei')">展开命令型</button><button class="btn-small waves-effect waves-light" onclick="hideALine(event, 'ishi')">展开意志型</button><button class="btn-small waves-effect waves-light" onclick="hideALine(event, 'ba')">展开ば型</button><button class="btn-small waves-effect waves-light" onclick="hideALine(event, 'kanou')">展开可能型</button><button class="btn-small waves-effect waves-light" onclick="hideALine(event, 'ukemi')">展开被动型</button><button class="btn-small waves-effect waves-light" onclick="hideALine(event, 'shieki')">展开使役型</button></div><ul><li>这里点击测试按钮，可以测试一下自己是否能正确打出单词，会以选择的词性为判断正确答案</li></ul><div class="flex-row-box"><button class="btn-small waves-effect waves-light" onclick="changeHeimuStatus('chinese')">测试中文</button><button class="btn-small waves-effect waves-light" onclick="changeHeimuStatus('jisyo')">测试字典型</button><button class="btn-small waves-effect waves-light" onclick="changeHeimuStatus('masu')">测试ます型</button><button class="btn-small waves-effect waves-light" onclick="changeHeimuStatus('te')">测试て型</button><button class="btn-small waves-effect waves-light" onclick="changeHeimuStatus('nai')">测试ない型</button><button class="btn-small waves-effect waves-light" onclick="changeHeimuStatus('ta')">测试た型</button><button class="btn-small waves-effect waves-light" onclick="changeHeimuStatus('meirei')">测试命令型</button><button class="btn-small waves-effect waves-light" onclick="changeHeimuStatus('ishi')">测试意志型</button><button class="btn-small waves-effect waves-light" onclick="changeHeimuStatus('ba')">测试ば型</button><button class="btn-small waves-effect waves-light" onclick="changeHeimuStatus('kanou')">测试可能型</button><button class="btn-small waves-effect waves-light" onclick="changeHeimuStatus('ukemi')">测试被动型</button><button class="btn-small waves-effect waves-light" onclick="changeHeimuStatus('shieki')">测试使役型</button></div><div class="test-mode">当前测试模式：无</div><div class="japanese-words"></div><script src="https://cdn.jsdelivr.net/npm/kuroshiro@1.1.0/dist/kuroshiro.min.js"></script><script src="https://cdn.jsdelivr.net/npm/kuroshiro-analyzer-kuromoji@1.1.0/dist/kuroshiro-analyzer-kuromoji.min.js"></script><script src="https://japanese-beta.vercel.app/words/verb/words.js"></script><!-- <script src="./words.js"></script> --><script>  process('n5t');</script><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/04/05/japanese-words-1/1.webp"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="日语学习" scheme="https://blog.pengdonglai.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="日本語" scheme="https://blog.pengdonglai.com/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
    <category term="动词" scheme="https://blog.pengdonglai.com/tags/%E5%8A%A8%E8%AF%8D/"/>
    
    <category term="自动化测试" scheme="https://blog.pengdonglai.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>N4 日语部分语法点归总</title>
    <link href="https://blog.pengdonglai.com/2024/02/09/japanese-grammar-1/"/>
    <id>https://blog.pengdonglai.com/2024/02/09/japanese-grammar-1/</id>
    <published>2024-02-09T04:18:41.000Z</published>
    <updated>2024-09-22T09:18:57.150Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>本文会不定期打补丁。本文引用了部分公开于互联网的信息，若部分内容对您的著作权等权利造成了侵犯，请及时联系我，我会核实后及时删除这部分内容。</p></blockquote><p>我们一般说 N4N5 两个级别，是日语的初级级别。这个级别相对来说学习的语法比较简单，单词也很多都是在日常当中出现的比较多的。这其中，N5 的考试标准是学完新标准日本语初级上册，N4 的考试标准是学完新标准日本语上下册，比 N5 多了一本书。N5 需要学完一本书，词汇量大概在 1200 左右。</p><p>作为参考，官方对 N4 给出了这样的定义：</p><p>读：能够阅读和理解由基本词汇及汉字所组成的讲述日常生活中最熟悉话题的文章。<br>听：能够大致听懂语速稍慢的日常会话。</p><p>听的部分，后面会和之前英语一样，整理几篇学习的资料。不过，这个方面应该各位喜欢二次元的同好如果抱着对二次元的热爱，从学习的角度出发去一边训练听力，一边追求爱好，那进步应该会更加潜移默化一些。</p><p>在笔者看来，如果把初级语法定义为「稍微会一点」日语的门槛，这个门槛进入之后，对于日语的理解对于完全的小白来说，会有个完全不一样的认知。也拥有了所谓自学的能力。初级的语法中，相对比较难的部分，就放在了 N4。因此从 N4 开始，我会对所有的语法进行总结，从而让我自己能对知识进行快速定位。</p><h2 id="第一类：名词类"><a href="#第一类：名词类" class="headerlink" title="第一类：名词类"></a>第一类：名词类</h2><h3 id="规律汇总"><a href="#规律汇总" class="headerlink" title="规律汇总"></a>规律汇总</h3><h4 id="名词：N-二类形容词：A2"><a href="#名词：N-二类形容词：A2" class="headerlink" title="名词：N &#x2F; 二类形容词：A2"></a>名词：N &#x2F; 二类形容词：A2</h4><p>N＋の＋N・A2＋な＋N</p><p>Nではない＋N・A2ではない＋N</p><p>Nだった＋N・A2だった＋N</p><p>Nではなかった＋N・A2ではなかった＋N</p><h4 id="一类形容词：A1"><a href="#一类形容词：A1" class="headerlink" title="一类形容词：A1"></a>一类形容词：A1</h4><p>A1い＋N</p><p>A1くない＋N</p><p>A1かった＋N</p><p>A1くなかった＋N</p><h4 id="动词：する"><a href="#动词：する" class="headerlink" title="动词：する"></a>动词：する</h4><p>动词普通型+N</p><p>する＋N</p><p>しない＋N</p><p>した＋N</p><p>しなかった＋N</p><h3 id="详细介绍"><a href="#详细介绍" class="headerlink" title="详细介绍"></a>详细介绍</h3><h4 id="つもり、予定"><a href="#つもり、予定" class="headerlink" title="つもり、予定"></a>つもり、予定</h4><p>〜つもり：打算</p><p>留学のつもり。打算留学。</p><p>タバコを吸わないつもり。不打算抽烟。</p><p>〜予定 计划（比つもり正式,有具体的安排）</p><p>一週間滞在の予定です。计划逗留一周。</p><p>出張する予定。计划出差。</p><h4 id="はず"><a href="#はず" class="headerlink" title="はず"></a>はず</h4><p>〜はず：照理说应该 客观推断</p><p>行くはず、行かないはず、綺麗なはず、忙しいはず</p><p>留守のはず</p><p>その単語は先週勉強したはずですが、忘れてしまいました。那个单词应该上周学过的，但现在却忘了。</p><h4 id="ほうがいい、たらどうですか"><a href="#ほうがいい、たらどうですか" class="headerlink" title="ほうがいい、たらどうですか"></a>ほうがいい、たらどうですか</h4><p>均表示某种「提议」。</p><p>〜ほうがいい：我建议你还是…的好</p><p>タバコは止めたほうがいいです。我建议你香烟还是别抽的好</p><p>飲まないほうがいいです。 我建议你还是不要吃的好</p><p>注意这个意思和后面的〜たらどうですか意思是差不多的。这个相比于〜たらどうですか更为委婉。</p><p>〜たらどうですか：「…那样做怎么样」，表示提议或劝诱。这种意思下，どうですか是可以省略的内容，尤其是在口语中。</p><p>吉田君、パーティーには出席しないって。吉田说他不来参加宴会了。</p><p>もう一度誘ってみたら。你再邀请他一次吧。</p><h4 id="とおりに"><a href="#とおりに" class="headerlink" title="とおりに"></a>とおりに</h4><p>〜とおりに〜　按照、照着</p><p>彼が言ったとおりに、やってください。请照着他说的做</p><p>見たとおりに、話してください。请把你看见的说出来</p><p>説明書のとおりに、組み立てました。按说明书进行了组装</p><h4 id="あとで"><a href="#あとで" class="headerlink" title="あとで"></a>あとで</h4><p>〜あとで：之后</p><p>ご飯を食べたあとで散歩します。吃饭之后散步。</p><p>食事のあとで、散歩します。吃饭之后散步。</p><h4 id="ように、ような"><a href="#ように、ような" class="headerlink" title="ように、ような"></a>ように、ような</h4><p>ように有多重意思。注意不要和よう搞混了。</p><ol><li>Ａ（非意志Vる／Vない）+ように：为了（〜ようになる、〜ようにする）。前面跟的动词不能是「意志动词」。</li></ol><p>家が買えるように、貯金します。为了买房而存钱。</p><blockquote><p>意志动词：只要动词无法以「たい、ましょう、ください、てもいいです、なければなりません、禁止形」等方式表现时就是「非意志动词」。</p></blockquote><blockquote><p>接續「ために」時，前面是放「意志動詞」或「名詞」，因此形成以下這種句型：「Ａ（意志Vる／名詞の）＋ために＋Ｂます」。</p></blockquote><ol start="2"><li>Ａのように〜：表示比喻，跟…一样。&#x3D; ような</li></ol><p>数学の先生は鬼婆のように怖いです。数学老师像鬼婆婆一样可怕。</p><ol start="3"><li>V原／Vない＋ようになりました：表示能力变化。</li></ol><p>生のものも食べ慣れるようになりました。可以吃生的东西了（以前吃不了生的东西、以前没有的东西现在变得有了）</p><ol start="4"><li>V原／Vない＋ようにしています：表示受到影响习惯的或持续努力的动作。</li></ol><p>毎日運動して、何でも食べるようにしています。我每天运动，这让我什么都吃。（表示有一个持续性的的动作，表示习惯的或持续努力的动作）</p><ol start="5"><li>V原／Vない＋ようにする：表示将某行为设置为目标并且努力去做到。</li></ol><p>仕事内容と経歴を整理して、すぐに答えられるようにした。整理工作内容与经历，以便于能马上就回答问题。</p><ol start="6"><li>V原／Vない+ようにしてください：比较客气的叮嘱对方。</li></ol><p>遅刻しないようにしてください。请不要迟到哦！</p><ol start="7"><li>V原／Vない+ように：表示希望。</li></ol><p>后多接「祈る、願う、望む、祈念する」等表示期望的动词。但是也可以不接，直接放在结尾。</p><p>皆さんが日本語能力試験に合格できますように。希望大家的日语能力测验都能合格。</p><p>早く回復するよう祈っています。祝你早日康复。</p><h4 id="ために"><a href="#ために" class="headerlink" title="ために"></a>ために</h4><p>〜ために：为了。和おうに其中一个用法是一样的。</p><p>日本語を勉強するために。为了学习日语。</p><p>人は何のために生きているのだろう？人是为什么而活的呢？</p><h4 id="のは、のを、のが"><a href="#のは、のを、のが" class="headerlink" title="のは、のを、のが"></a>のは、のを、のが</h4><p>〜のは、のを、のが就是动词的名词化</p><p>テニスをするのは面白い　打网球很有趣</p><p>歩くのが速い　走路很快</p><p>バナナを買うのを忘れた　忘了买香蕉</p><h4 id="途中で"><a href="#途中で" class="headerlink" title="途中で"></a>途中で</h4><p>〜途中で　~的路上</p><p>学校へ行く途中で 去学校的路上</p><p>ジョギングの途中で  跑步的路上</p><h4 id="ところ・ばかり"><a href="#ところ・ばかり" class="headerlink" title="ところ・ばかり"></a>ところ・ばかり</h4><p>〜ところ 正要（强调瞬间完成的事情）</p><p>これから大阪へ行くところです。我这就去大阪</p><p>〜ばかり：た形＋ばかり 表示刚刚（相比ところ时间拉的更长一些，只要说话者觉得时间短就行）</p><p>先週会社に入ったばかりですから、何もわかりません。我上周刚进公司，啥都不懂</p><p>ばかり还有总是…、都是…、一味…的意思。具体表示什么意思得看接续：</p><p>N＋ばかり：表示「都是」的意思。</p><p>ここ数日、雨ばかりね。这几天一直在下雨呢。</p><p>て形＋ばかりいる／Nばかり～ている：一直，总是（大概率表示负面意思）</p><p>食べてばかりいると、太りますよ。如果一直吃，就会发胖哦。</p><p>彼はいつも嘘ばかりついているから、信用されていない。因为他总是在撒谎，所以不被信任。</p><h4 id="場合は"><a href="#場合は" class="headerlink" title="場合は"></a>場合は</h4><p>〜場合は  在~~的时候 (各类词的接续)</p><p>雨の場合は　在下雨的时候</p><p>必要な場合は　在需要的时候</p><p>調子が悪い場合は　状态不好的时候</p><p>遅れた場合は　迟到了的时候</p><p>なければならない場合は　不得已的时候</p><h4 id="まま"><a href="#まま" class="headerlink" title="まま"></a>まま</h4><p>意思：保持原样</p><p>昨日は電気をつけたまま寝てしまった。昨天我开着灯睡着了。</p><p>これは生のままでも食べられますか？这个可以生吃吗？</p><h4 id="ことがある、ことになる、ことにする"><a href="#ことがある、ことになる、ことにする" class="headerlink" title="ことがある、ことになる、ことにする"></a>ことがある、ことになる、ことにする</h4><p>ことがある、ことになる、ことにする前面均接动词终止形。</p><p>ことになる、ことにする的区别是「是否为自己强烈的意志做决定」。</p><p>ことがある：有时也会</p><p>私は会議中でも、寝てしまうことがある。我在开会时，偶尔也会不小心睡着。</p><p>ことになる：尽管不是自己决定的，委婉地表达自己将要做某事</p><p>多数決の結果、次の生徒会長は僕がすることになった。根据多数票的结果，我将成为下一任学生会长。</p><p>ことにする：表达自己决定将要做某事。</p><p>ダイエットのために、お菓子をやめることにします。为了减肥，我决定戒掉甜食。</p><h2 id="第二类：动词变形类"><a href="#第二类：动词变形类" class="headerlink" title="第二类：动词变形类"></a>第二类：动词变形类</h2><h3 id="可能型"><a href="#可能型" class="headerlink" title="可能型"></a>可能型</h3><p>表示能够进行某种动作。与“〜ことができます”意义相同。</p><p>一类动词：う段 ⇒  え段 ＋ る (基本形的最后一个音变成相应的“え”段上的音，再加“る”)</p><p>二类动词：る ⇒ られる (基本形的“る”变成“られる”)</p><p>三类动词：来る ⇒ 来られる、する ⇒ できる</p><table align="center" border="1" cellpadding="1" cellspacing="1" style="width:573px;"><caption>   <strong><span>动词可能形式变化规则</span></strong>  </caption><tbody><tr><td style="width:78px;"><strong>类形</strong></td><td style="width:122px;"><strong>基本形</strong></td><td style="width:171px;"><strong>可能形式(基本形)</strong></td><td style="width:199px;"><strong>可能形式(ます形)</strong></td></tr><tr><td colspan="1" rowspan="2" style="width:78px;">一类动词</td><td style="width:122px;">書く (かく)</td><td style="width:171px;">書ける(かける)</td><td style="width:199px;">書けます(かけます)</td></tr><tr><td style="width:122px;">読む (よむ)</td><td style="width:171px;">読める(読める)</td><td style="width:199px;">読めます(よめます)</td></tr><tr><td colspan="1" rowspan="2" style="width:78px;">二类动词</td><td style="width:122px;">食べる (たべる)</td><td style="width:171px;">食べられる (たべられる)</td><td style="width:199px;">食べられます(たべられます)</td></tr><tr><td style="width:122px;">見る (みる)</td><td style="width:171px;"> <p>見られる (みられる)</p> </td><td style="width:199px;">見られます(みられます)</td></tr><tr><td colspan="1" rowspan="2" style="width:78px;">三类动词</td><td style="width:122px;">来る (くる)</td><td style="width:171px;">来られる(こられる)</td><td style="width:199px;"> <p>来られます(こられます)</p> </td></tr><tr><td style="width:122px;">する</td><td style="width:171px;">できる</td><td style="width:199px;">できます</td></tr></tbody></table><h3 id="命令型"><a href="#命令型" class="headerlink" title="命令型"></a>命令型</h3><p>说话人对听话人下达命令的表达形式。</p><p>一类动词：う段 ⇒  え段 (基本形的最后一个音变成相应的“え”段上的音)</p><p>二类动词：る ⇒ ろ (基本形的“る”变成“ろ”)  ★  “くれる”的命令形是例外，为“くれ”。</p><p>三类动词：来る ⇒ 来い、する ⇒ しろ</p><table align="center" border="1" cellpadding="1" cellspacing="1" style="width:500px;"><caption>   <strong><span>动词命令形变化规则</span></strong>  </caption><tbody><tr><td><strong>类形</strong></td><td><strong>基本形</strong></td><td><strong>命令形</strong></td></tr><tr><td colspan="1" rowspan="2" style="width:144px;">一类动词</td><td style="width:143px;">書く (かく)</td><td style="width:241px;">書け (かけ)</td></tr><tr><td style="width:143px;">読む (よむ)</td><td style="width:241px;">読め (よめ)</td></tr><tr><td colspan="1" rowspan="3" style="width:144px;">二类动词</td><td style="width:143px;">食べる (たべる)</td><td style="width:241px;">食べろ (たべろ)</td></tr><tr><td style="width:143px;">見る (みる)</td><td style="width:241px;">見ろ (みろ)</td></tr><tr><td style="width:143px;"><span><strong>くれる</strong></span></td><td style="width:241px;"><span><strong>くれ</strong></span></td></tr><tr><td colspan="1" rowspan="2" style="width:144px;">三类动词</td><td style="width:143px;">来る (くる)</td><td style="width:241px;">来い (こい)</td></tr><tr><td style="width:143px;">する</td><td style="width:241px;">しろ</td></tr></tbody></table><h3 id="意志型"><a href="#意志型" class="headerlink" title="意志型"></a>意志型</h3><p>说话人当场表示自己的决心、意志。</p><p>一类动词：う段 ⇒  お段 ＋ う(基本形的最后一个音变成相应的“お”段上的长音)</p><p>二类动词：る ⇒ よう (基本形的“る”变成“よう”)</p><p>三类动词：来る ⇒ 来よう、する ⇒ しよう</p><table align="center" border="1" cellpadding="1" cellspacing="1" style="width:500px;"><caption>   <strong><span>动词意志形变化规则</span></strong>  </caption><tbody><tr><td><strong>类形</strong></td><td style="width:154px;"><strong>基本形</strong></td><td style="width:207px;"><strong>意志形</strong></td></tr><tr><td colspan="1" rowspan="2" style="width:144px;">一类动词</td><td style="width:154px;">書く (かく)</td><td style="width:207px;">書こう (かこう)</td></tr><tr><td style="width:154px;">読む (よむ)</td><td style="width:207px;">読もう (よもう)</td></tr><tr><td colspan="1" rowspan="2" style="width:144px;">二类动词</td><td style="width:154px;">食べる (たべる)</td><td style="width:207px;">食べよう (たべよう)</td></tr><tr><td style="width:154px;">見る (みる)</td><td style="width:207px;">見よう (みよう)</td></tr><tr><td colspan="1" rowspan="2" style="width:144px;">三类动词</td><td style="width:154px;">来る (くる)</td><td style="width:207px;">来よう (こよう)</td></tr><tr><td style="width:154px;">する</td><td style="width:207px;">しよう</td></tr></tbody></table><h3 id="ば形、假定型"><a href="#ば形、假定型" class="headerlink" title="ば形、假定型"></a>ば形、假定型</h3><p>表示假定条件时(如果…)。ば形有“动词ば形”和“一类形容词ば形”。</p><p>一类动词：う段 ⇒  え段 ＋ ば (基本形的最后一个音变成相应的“え”段上的音，再加“ば”)</p><p>二类动词：る ⇒ れば (基本形的“る”变成“れば”)</p><p>三类动词：来る ⇒ 来れば、する ⇒ すれば</p><table align="center" border="1" cellpadding="1" cellspacing="1" style="width:500px;"><caption>   <strong><span>动词ば形变化规则</span></strong>  </caption><tbody><tr><td><strong>类形</strong></td><td style="width:145px;"><strong>基本形</strong></td><td style="width:239px;"><strong>ば形</strong></td></tr><tr><td colspan="1" rowspan="2" style="width:144px;">一类动词</td><td style="width:145px;">書く (かく)</td><td style="width:239px;">書けば (かけば)</td></tr><tr><td style="width:145px;">読む (よむ)</td><td style="width:239px;">読めば (よめば)</td></tr><tr><td colspan="1" rowspan="2" style="width:144px;">二类动词</td><td style="width:145px;">食べる (たべる)</td><td style="width:239px;">食べれば (たべれば)</td></tr><tr><td style="width:145px;">見る (みる)</td><td style="width:239px;"> <p>見れば (みれば)</p> </td></tr><tr><td colspan="1" rowspan="2" style="width:144px;">三类动词</td><td style="width:145px;">来る (くる)</td><td style="width:239px;">来れば (<strong>くれば</strong>)</td></tr><tr><td style="width:145px;">する</td><td style="width:239px;">すれば</td></tr></tbody></table><p>除了动词，一类形容词也拥有假定型：把词尾的“い” ⇒ “ければ”</p><table align="center" border="1" cellpadding="1" cellspacing="1" style="width:500px;"><caption>   <strong><span>一类形容词ば形变化规则</span></strong>  </caption><tbody><tr><td style="width:116px;"><strong>类形</strong></td><td style="width:169px;"><strong>基本形</strong></td><td style="width:216px;"><strong>ば形</strong></td></tr><tr><td colspan="1" rowspan="2" style="width:116px;">一类形容词</td><td style="width:169px;">ない </td><td style="width:216px;">なければ</td></tr><tr><td style="width:169px;">楽しい (たのしい)</td><td style="width:216px;">楽しければ (たのしければ)</td></tr></tbody></table><p>〜ばよかった: はあ、こんなもの買わなければよかった。損した。啊，要是没买这个东西就好了。真吃亏。</p><h3 id="被动型"><a href="#被动型" class="headerlink" title="被动型"></a>被动型</h3><p>表示作主语的人或者事物承受某种动作或影响</p><p>一类动词：把ない形的“ない” ⇒ “れる”</p><p>二类动词：把ない形的“ない” ⇒ “られる”</p><p>三类动词：来る ⇒ 来られる、する ⇒ される</p><table align="center" border="1" cellpadding="1" cellspacing="1" style="width:573px;"><caption>   <strong><span>动词被动形式变化规则</span></strong>  </caption><tbody><tr><td style="width:78px;"><strong>类形</strong></td><td style="width:122px;"><strong>基本形</strong></td><td style="width:171px;"><strong>被动形式(基本形)</strong></td><td style="width:199px;"><strong>被动形式(ます形)</strong></td></tr><tr><td colspan="1" rowspan="2" style="width:78px;">一类动词</td><td style="width:122px;">書く (かく)</td><td style="width:171px;">書かれる(かかれる)</td><td style="width:199px;">書かれます(かかれます)</td></tr><tr><td style="width:122px;">読む (よむ)</td><td style="width:171px;">読まれる(よまれる)</td><td style="width:199px;">読まれます(よまれます)</td></tr><tr><td colspan="1" rowspan="2" style="width:78px;">二类动词</td><td style="width:122px;">食べる (たべる)</td><td style="width:171px;">食べられる (たべられる)</td><td style="width:199px;">食べられます(たべられます)</td></tr><tr><td style="width:122px;">見る (みる)</td><td style="width:171px;"> <p>見られる (みられる)</p> </td><td style="width:199px;">見られます(みられます)</td></tr><tr><td colspan="1" rowspan="2" style="width:78px;">三类动词</td><td style="width:122px;">来る (くる)</td><td style="width:171px;">来られる(こられる)</td><td style="width:199px;"> <p>来られます(こられます)</p> </td></tr><tr><td style="width:122px;">する</td><td style="width:171px;">される</td><td style="width:199px;">されます</td></tr></tbody></table><h3 id="使役型"><a href="#使役型" class="headerlink" title="使役型"></a>使役型</h3><p>表示使役主体强制或指示动作主体进行动作；使役主体对动作主体的行为许可或放任。</p><p>一类动词：把ない形的“ない” ⇒ “せる”</p><p>二类动词：把ない形的“ない” ⇒ “させる”</p><p>三类动词：来る ⇒ 来させる、する ⇒ させる</p><table align="center" border="1" cellpadding="1" cellspacing="1" style="width:573px;"><caption>   <strong><span>动词使役形式变化规则</span></strong>  </caption><tbody><tr><td style="width:78px;"><strong>类形</strong></td><td style="width:122px;"><strong>基本形</strong></td><td style="width:171px;"><strong>使役形式(基本形)</strong></td><td style="width:199px;"><strong>使役形式(ます形)</strong></td></tr><tr><td colspan="1" rowspan="2" style="width:78px;">一类动词</td><td style="width:122px;">書く (かく)</td><td style="width:171px;">書かせる(かかせる)</td><td style="width:199px;">書かせます(かかせます)</td></tr><tr><td style="width:122px;">読む (よむ)</td><td style="width:171px;">読ませる(よませる)</td><td style="width:199px;">読ませます(よませます)</td></tr><tr><td colspan="1" rowspan="2" style="width:78px;">二类动词</td><td style="width:122px;">食べる (たべる)</td><td style="width:171px;">食べさせる(たべさせる)</td><td style="width:199px;">食べさせます(たべさせます)</td></tr><tr><td style="width:122px;">見る (みる)</td><td style="width:171px;"> <p>見させる (みさせる)</p> </td><td style="width:199px;">見させます(みさせます)</td></tr><tr><td colspan="1" rowspan="2" style="width:78px;">三类动词</td><td style="width:122px;">来る (くる)</td><td style="width:171px;">来させる(こさせる)</td><td style="width:199px;"> <p>来させます(こさせます)</p> </td></tr><tr><td style="width:122px;">する</td><td style="width:171px;">させる</td><td style="width:199px;">させます</td></tr></tbody></table><h3 id="使役被动型"><a href="#使役被动型" class="headerlink" title="使役被动型"></a>使役被动型</h3><p>由使役形式加被动形式构成。一般表示（句子的主语）<strong>被迫</strong>性的动作。</p><p>一类动词：</p><ul><li>第一种方法：把“ない”形的“ない”⇒“せられる”(比较少用)；</li><li>第二种方法：把ない形的“ない” ⇒ “される”(常用，但对于动词结尾是“す”的情况不适用)；</li></ul><p>二类动词：把ない形的“ない” ⇒ “させられる”</p><p>三类动词：来る ⇒ 来させられる、する ⇒ させられる</p><table align="center" border="1" cellpadding="1" cellspacing="1" style="width:573px;"><caption>   <strong><span>动词使役被动形式变化规则</span></strong>  </caption><tbody><tr><td style="width:95px;"><strong>类形</strong></td><td style="width:138px;"><strong>基本形</strong></td><td style="width:159px;"><strong>使役被动形式(基本形)</strong></td><td style="width:178px;"><strong>使役被动形式(ます形)</strong></td></tr><tr><td colspan="1" rowspan="2" style="width:95px;">一类动词</td><td style="width:138px;">書く (かく)</td><td style="width:159px;"> <p>書かされる</p> <p>(かかされる)</p> </td><td style="width:178px;"> <p>書かされます</p> <p>(かかされます)</p> </td></tr><tr><td style="width:138px;">読む (よむ)</td><td style="width:159px;"> <p>読まされる</p> <p>(よまされる)</p> </td><td style="width:178px;"> <p>読まされます</p> <p>(よまされます)</p> </td></tr><tr><td colspan="1" rowspan="2" style="width:95px;">二类动词</td><td style="width:138px;">食べる (たべる)</td><td style="width:159px;"> <p>食べさせられる</p> <p>(たべさせられる)</p> </td><td style="width:178px;"> <p>食べさせられます</p> <p>(たべさせられます)</p> </td></tr><tr><td style="width:138px;">見る (みる)</td><td style="width:159px;"> <p>見させられる</p> <p>(みさせられる)</p> </td><td style="width:178px;"> <p>見させられます</p> <p>(みさせられます)</p> </td></tr><tr><td colspan="1" rowspan="2" style="width:95px;">三类动词</td><td style="width:138px;">来る (くる)</td><td style="width:159px;"> <p>来させられる</p> <p>(こさせられる)</p> </td><td style="width:178px;"> <p>来させられます</p> <p>(こさせられます)</p> </td></tr><tr><td style="width:138px;">する</td><td style="width:159px;">させられる</td><td style="width:178px;">させられます</td></tr></tbody></table><h2 id="第三类：其它语法"><a href="#第三类：其它语法" class="headerlink" title="第三类：其它语法"></a>第三类：其它语法</h2><h3 id="详细介绍-1"><a href="#详细介绍-1" class="headerlink" title="详细介绍"></a>详细介绍</h3><h4 id="なら"><a href="#なら" class="headerlink" title="なら"></a>なら</h4><p><a href="/2024/08/11/japanese-grammar-2/#toc-heading-9">可以在这个链接看 N3 关于「条件、假定」的总结</a></p><p>普通形 + なら<br>N + なら</p><ol><li>表示假定。多用于对未知事物进行假设或把对方提到的事情作为前提条件，后项发表自己的意见，看法，建议等。可译为：要是…，假如…</li></ol><p>車を運転するならお酒を飲んではいけません。 如果开车的话，不能喝酒。</p><ol start="2"><li>提示主题。多用于会话场合，把之前的话题作为自己的主题再次提出。</li></ol><p>鎌倉へ行くなら、このお店がお勧めですよ。 去镰仓的话，推荐去这家店。</p><h4 id="〜か"><a href="#〜か" class="headerlink" title="〜か"></a>〜か</h4><p>在句子内部表示疑问的说法。</p><p>疑問詞 + V（普通形）か〜</p><p>先生がどこにいるか知ってる？你知道老师在哪里吗？</p><p>高雄へどうやって行くか知っていますか。你知道怎么去高雄吗？</p><p>其他接续还有：</p><p>疑問詞 + イA（普通形）か〜</p><p>疑問詞 + ナA（普通形） だ か〜 ※ナA ~~だ</p><h4 id="ても"><a href="#ても" class="headerlink" title="ても"></a>ても</h4><ol><li>〜ても 即使……</li></ol><p>いくら食べても太らないからいいですね。不管怎么吃都不胖，真好。</p><ol start="2"><li>〜てもいい、なくてもいい 表示许可，允许，相当于「可以…..」；「可以不……」</li></ol><p>ねえお母さん、お菓子買ってもいい？自分のお小遣いで買うから。妈妈，我可以买点心吗？用我的零花钱。</p><h4 id="〜んです"><a href="#〜んです" class="headerlink" title="〜んです"></a>〜んです</h4><p>口语用法：んです</p><p>书面用法：のです</p><p>不改变句子原本的意思，只是表示强调作用。中文映射举例：我是因为…原因迟到的；这个时候表示强调迟到的原因。</p><p>考虑以下两个陈述句：</p><ol><li>雨が降っている。客观地陈述了当你向外看时正在下雨的事实。</li><li>雨が降っているんだ。</li></ol><p>2 可能发生在以下场景：</p><p>在一家咖啡店，我看到一个人拿着湿雨伞进来，我问他为什么。</p><p>结果，他说：「下雨了。」雨が降っているんだ。</p><p>考虑以下两个疑问句：</p><ol><li>もう、レポートを書きましたか？只是简单的疑问说，你给对方写报告了吗？</li><li>＜相手の完成したレポートを見て＞ もう、レポートを書いたんですか！？</li></ol><p>2 可能发生在以下场景：</p><p>对方已经写完了。我觉得他写的真的很快。</p><p>我想说，我看到后觉得「真快！」。用于说话人有一定的「前提」，由于看到或听到，就有了说话的欲望。もう、レポートを書いたんですか！？</p><p><strong>在不熟悉用法的时候，尽量不要在日常使用。这是因为这样的表达带有言下之意。</strong></p><h4 id="〜ながら〜"><a href="#〜ながら〜" class="headerlink" title="〜ながら〜"></a>〜ながら〜</h4><p>动词ます形+ながら+动词 指两个动作在同一时间段内进行、一边……一边……(可以一边打工、一边学习)</p><p>吉田さんは音楽を聞きながら勉強します。（吉田先生一边听音乐一边学习）</p><p>动词ます形+ながら 指事物发展中产生了出乎意料的变化，没有达到应有的效果 虽然……但是……<br>毎日よくピアノを弾いていながら、上手にならない。（虽然每天都弹钢琴，但是也没变熟练）</p><p>名词+ながら 前接名词，经常表示事物的全部。全部……，都……<br>クラスメートながら医者になりました。（同学都成为了医生）</p><blockquote><p>动词ます形+当前文法+动词，还可以有这些用法：<br>1.1 〜過ぎます・〜すぎます・过头了<br>1.2 〜やすい・容易: 先生の授業はわかりやすいです。老师讲的课很好懂。<br>1.3 〜にくい・很难: ちょっと言いにくいんだけど、私はあの人が好きじゃないんだ。虽然有点难开口，但我不喜欢那个人。</p></blockquote><h4 id="〜てしまいます"><a href="#〜てしまいます" class="headerlink" title="〜てしまいます"></a>〜てしまいます</h4><p>结束，或者完蛋的意思。</p><p>財布を無くしてしまいました。完蛋，钱包给弄丢了。</p><h4 id="しています、てあります、ておきます"><a href="#しています、てあります、ておきます" class="headerlink" title="しています、てあります、ておきます"></a>しています、てあります、ておきます</h4><p>N5 学过了他动词：他动词＋しています 正在进行 表示一种状态 表示一种习惯</p><p>自动词〜が〜しています 表示某件事情自己已经完成，表示完成的状态。<strong>无所谓目的</strong>。</p><p>他动词〜が〜てあります</p><ol><li>动作结果肉眼能看见的，它表示动作存续，或者表述一种状态。</li></ol><p>壁にピカソの絵がかけしています。墙壁上挂着毕加索的画。</p><ol><li>动作结果肉眼看不见的，一般表示「提前准备」，且这种状态有目的。</li></ol><p>ホテルはもう予約してあります。酒店已经预定了。</p><p>他动词〜を〜ておきます 为了将来而事先做某事。而且常常有「事情已经做完」的意思。</p><p>（孩子马上就要回来吃饭的上下文）ご飯を作っておきます。强调「做饭」这件事情已经做完了，以便于让孩子感受到。</p><ol><li>事先做….. 这种意思非常类似于上面</li></ol><p>新しい内容を勉强する前に、自分でよく予習しておく。学习新内容之前，先自己好好预习。</p><ol start="2"><li>保持住状态</li></ol><p>そのままにしておいてください。请保持原样。</p><h4 id="あげる、くれる、もらう"><a href="#あげる、くれる、もらう" class="headerlink" title="あげる、くれる、もらう"></a>あげる、くれる、もらう</h4><p>共同点：都有主语和宾语。而且通常为主语和宾语之间单向的给、帮助等善意的事情。但是使用方式稍微有点不同。</p><p>あげる・くれる主语都为做事的发出方。もらう则是接受方，对应其「接受」的意思。<br>あげる和くれる主语不同，如果主语为「我」，则使用あげる。详见下面：</p><p>我方给对方的句型：我方 は 对方 に あげる<br>对方给我方的句型：对方 は 我方 に くれる</p><p>和て加在一起，形成复合动词。例如：给你买、给我看等。</p><p>あげる：表示主语给第二、三人称及其一方的人做某事。主语为动作发出者；动作接受者以补语形式出现，用补格助词「に」表示。</p><p>わたしはあなたに少女マンガを買ってあげましょう。我给你买少女漫画吧。</p><p>くれる：表示主语为第一人称及其一方的人做某事。句子的主语是动作发出者，动作接受者则以补语形式出现，但第一人称常省略。</p><p>有希ちゃんが日本で撮った写真を見せてくれました。有希酱给我看了在日本拍的相片。</p><p>もらう：表示主语让别人为自己做某事。主语是动作的接受者，动作发出者以补语形式出现，用补格助词「に」或「から」表示。</p><p>わたしは彼氏からプレゼントを買ってもらいました。男友给我买了礼物。</p><h4 id="でしよう、がもしれない"><a href="#でしよう、がもしれない" class="headerlink" title="でしよう、がもしれない"></a>でしよう、がもしれない</h4><p>でしよう</p><p>漢字の練習なら、この本がいいでしょう。如果你想练习汉字，这本书应该是个不错的选择。</p><p>がもしれない</p><p>山田さんは図書館にいるかもしれません。山田先生可能在图书馆中。</p><p>がもしれない相比于でしよう不可能性，更高。</p><h4 id="かどうか、か〜ないか"><a href="#かどうか、か〜ないか" class="headerlink" title="かどうか、か〜ないか"></a>かどうか、か〜ないか</h4><p>かどうか</p><p>接续：</p><ul><li>名词+かどうか</li><li>动词普通型&#x2F;终止型+かどうか</li><li>形容词普通型&#x2F;终止型+かどうか</li></ul><p>好きかどうか聞けば分かるでしょう。喜欢还是不喜欢，问一下就知道了吧。（名词+かどうか）</p><p>美味しいかどうかは食べてみないとわからない。吃了后才能知道是否好吃。（形容词+かどうか）</p><p>台風で休暇になるかどうかまだわからない。还不知道台风的时候是否会放假。（动词+かどうか）</p><p>か〜ないか</p><p>かどうか中间不断开表示做不做如，か〜ないか中间必须是前面动作的重复语气上更强如，两者也都可以表示「无论」的意思。</p><p>か〜ないかのうちに：刚…还没…时</p><p>日曜休んだか休んでないかのうちに終わってまた月曜。感觉周日还没休息够就又到了周一。</p><h4 id="で、ので、のに"><a href="#で、ので、のに" class="headerlink" title="で、ので、のに"></a>で、ので、のに</h4><p>で：动词，形容词て型：</p><p>毎晩暑くて、寝られません。每晚很热，睡不着。</p><p>ので：可以视作名词，在更正式的场合使用。</p><p>なくて：和否定放在一起的用法。</p><p>旅行にいけなくて、残念です。不能去旅行，好遗憾。</p><p>のに：表示「竟然」的意思，有一种不可思议的意思。</p><p>午後は試験なのに、彼はまだゲー厶をやっています。明明下午要考试，他却还在玩游戏。</p><h4 id="てみます"><a href="#てみます" class="headerlink" title="てみます"></a>てみます</h4><p>尝试去做某事…</p><p>くつを買う前に、サイズが合うかどうか、はいてみます。买鞋前，大小是否合适，要试穿下。</p><h4 id="そうです"><a href="#そうです" class="headerlink" title="そうです"></a>そうです</h4><ol><li>表示推测：表示对某种事物样态的观感或根据某种情形推测事态的发展。</li></ol><p>ます・い类形容词 + そうです</p><ol start="2"><li>表示听说：表示从别人那里听到某种信息。知道具体的信息来源时。</li></ol><p>完整句子 + そうです</p><p>对比ようです：表示「听说」做的判断，使用そうです；表示「自己推测」做的判断使用ようです。</p><p>一般常见的表达还有：そうだ</p><p>おまえ、うまそうだな。你看起来好像很好吃。（表示推测）</p><p>うわさでは、佐藤さんは李さんのことが好きだそうです。据小道消息，佐藤喜欢小李。（表示听说）</p><h4 id="たら、〜たらどうですか、〜たらいいですか"><a href="#たら、〜たらどうですか、〜たらいいですか" class="headerlink" title="たら、〜たらどうですか、〜たらいいですか"></a>たら、〜たらどうですか、〜たらいいですか</h4><ol><li>たら：如果……；</li></ol><p>安かったら、買いたいです。如果便宜的话，我想买。</p><ol start="2"><li>たらどうですか：「…那样做怎么样」，表示提议或劝诱。这种意思下，どうですか是可以省略的内容，尤其是在口语中。</li></ol><p>吉田君、パーティーには出席しないって。吉田说他不来参加宴会了。</p><p>もう一度誘ってみたら。你再邀请他一次吧。</p><ol start="3"><li>たらいいですか：怎么做才好呢，这个就纯表示疑问了。</li></ol><p>ホテルのをキャンセルしたいんですが、 どうしたらいいですか。想取消酒店预订，该怎么做呢？</p><h4 id="〜し"><a href="#〜し" class="headerlink" title="〜し"></a>〜し</h4><p>又…又…</p><ol><li>表示两个或两个以上的事项同时存在。常与も呼应。</li></ol><p>遊んでもいたいし、勉強もしたい。既想玩，又想学习。</p><ol start="2"><li>表示同时存在的事项是后续句子的理由。</li></ol><p>休みだし、天気もいいし，どこかに出かけませんか。今天休息，天气也不错，去哪儿玩玩儿吧。</p><h4 id="しか〜ない、ほかない"><a href="#しか〜ない、ほかない" class="headerlink" title="しか〜ない、ほかない"></a>しか〜ない、ほかない</h4><p>有两种表现形式：</p><p>〜しか〜ない</p><p>〜しかない</p><p>表示提示一个事项而排斥其他。一般被翻译为「只有、只能」的意思。视前面添加动词还是名词而定。</p><p>手伝ってくれる人が誰もいないから。自分でやるしかない。没有人能帮我，只能自己来。</p><p>以上的「しかない」皆可被替换为「ほかない」，如「自分でやるほかない」。</p><p>漫画、わたしはBLしか読まない。漫画，我只看 BL 漫画。</p><h4 id="〜ていただけませんか"><a href="#〜ていただけませんか" class="headerlink" title="〜ていただけませんか"></a>〜ていただけませんか</h4><p>可以帮我……吗</p><p>わたしが日本語で書いた作文を見ていただけませんか。可以帮我看下我的日语作文吗？</p><h4 id="〜といいです"><a href="#〜といいです" class="headerlink" title="〜といいです"></a>〜といいです</h4><p>可以……样。</p><p>A: 日本語の力を試したいんですけど、何かテストがありますか。我测试下自己的日语水平，有什么考试可以推荐吗？</p><p>B: じゃあ、日本語能力試験を受けるといいですよ。恩，你可以参加日本语能力考。</p><h4 id="〜ことにする"><a href="#〜ことにする" class="headerlink" title="〜ことにする"></a>〜ことにする</h4><p>决定… 其中、こと可以省略。</p><p>晩ご飯はおでんにする。晚饭决定吃关东煮。</p><p>明日からダイエットすることにしよう。我决心从明天开始减肥。</p><h4 id="〜とは"><a href="#〜とは" class="headerlink" title="〜とは"></a>〜とは</h4><p>所谓</p><p>神とは何ぞや。（所谓）神究竟是什么？</p><h4 id="〜く・〜に＋する"><a href="#〜く・〜に＋する" class="headerlink" title="〜く・〜に＋する"></a>〜く・〜に＋する</h4><blockquote><p>N5 学过になる&#x2F;くなる。<br>大学の友だちは、英語の先生になりました。大学朋友成为了一名英语老师。</p></blockquote><p>把…变成、将…变成</p><p>高いですね。もっと安くしてください。太贵了，请再便宜点。</p><p>すみませんが、少し静かにしてください。不好意思，请保持安静。</p><h4 id="みたいだ、みたいな-みたいに"><a href="#みたいだ、みたいな-みたいに" class="headerlink" title="みたいだ、みたいな &#x2F; みたいに"></a>みたいだ、みたいな &#x2F; みたいに</h4><p>みたいだ：好像跟…一样。估计是…</p><p>頭が痛いし、体も暑いし、熱があるみたいだ。头又疼，身体又热，好像发烧了。</p><p>みたいな &#x2F; みたいに：像…那样的</p><p>トムみたいに日本語が上手に話せるようになりたいなあ。我希望能像汤姆一样说好日语。</p><h4 id="〜って"><a href="#〜って" class="headerlink" title="〜って"></a>〜って</h4><p>named &#x2F; called。被称呼名字用。被称之为…</p><p>これはビビンバ っていう韓国の食べ物だよ。这是叫做石锅拌饭的韩国料理哦。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="日语学习" scheme="https://blog.pengdonglai.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="日本語" scheme="https://blog.pengdonglai.com/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
    <category term="语法" scheme="https://blog.pengdonglai.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>海星来来的 2023 总结</title>
    <link href="https://blog.pengdonglai.com/2024/01/09/2023-summary/"/>
    <id>https://blog.pengdonglai.com/2024/01/09/2023-summary/</id>
    <published>2024-01-09T04:28:29.000Z</published>
    <updated>2024-06-03T17:04:59.281Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="🌈海星来来的-2023-总结🌈"><a href="#🌈海星来来的-2023-总结🌈" class="headerlink" title="🌈海星来来的 2023 总结🌈"></a>🌈海星来来的 2023 总结🌈</h1><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">&lt;/2023>&lt;2024><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="📑-先来一波碎碎念"><a href="#📑-先来一波碎碎念" class="headerlink" title="📑 先来一波碎碎念"></a>📑 先来一波碎碎念</h2><p>HTML 使用 Tag 标签，标记 DOM 元素的开始与结束，所以我也用这种方式来表示 2023 的结束与 2024 的开端。好巧不巧，今天在网上看到一位前端大佬的总结也是用的这个方式，于是我就干脆也「拿来主义」了。</p><p>2023 年对我来说肯定是充满意义的一年了。首先，对于本博客来说，当然就是它的主人选择在今年开始重新开始更新。</p><p>在今年，我开始了社会人的生活，打工人的标记也正式粘贴在了我身上。相比于在象牙塔的时光，我也变得更加稳重和成熟。也许是因为过去我被保护的太好了，尚未沾染社会气息的我曾经一度被各种「学生病」困扰，比如说玻璃心之类。身份的转变也一度让我迷茫，但是现在看来确实是在往好的方面发展。</p><p>2024 希望可以做出更多有意义的事情，也期望可以逃脱平庸的重力，在个人能力上更近一步。</p><h2 id="💠-年度纪念品"><a href="#💠-年度纪念品" class="headerlink" title="💠 年度纪念品"></a>💠 年度纪念品</h2><blockquote><p>一般来说，选择纪念品作为本年度的代表物，是非常有意义的一件事。当我试图找寻以前的记忆，我发现总是一些纪念品，它们成为了我的「锚点」，和记忆一起成为了心流中印象最深刻的部分。哪怕是有一天不写文字总结了，我也要将这个部分单独写出来，成为我的年度记忆。</p></blockquote><h3 id="1-1-🎶-音乐"><a href="#1-1-🎶-音乐" class="headerlink" title="1.1 🎶 音乐"></a>1.1 🎶 音乐</h3><p>本年度我重新精听了肖邦的许多作品，相比于多年以前，我对肖邦的作品的理解更加深刻。肖邦的作品在我的印象中一直是「浪漫」的，但是这一次我听出了更多。不过，在评选的时候，这些被评出来的作品仍然具有浓厚的浪漫色彩。</p><p>我选择的是 Ballade No.3，在这里我选择了 YouTube 播放最高的 Zimmerman 演奏的版本。我曾经试图拿 Op.22（全称为 Andante Spianato and Grande Polonaise Brillante in E flat major Op. 22）第二首来 argue，但是最终我仍然选择了 Ballade No.3，也许可能是因为它没有太多重复的部分？首先，我觉得相比于 op22，肖叙三拥有一个非常华丽的华彩段，这种华彩的片段和前面的小圆舞曲形成了鲜明的反差。这种反差直击我的心灵——能这样做到的曲目真心很少。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/BkPLDoZXlHQ?si=em-9Y7Blfq9d5eeJ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe></div><p>肖邦的协奏曲，不多说，今年反复循环播放。用再多的言语也无法形容我对它的赞美。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/614oSsDS734?si=YEyQNeG3rWmM2HGd" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe></div><p>除了钢琴曲之外，交响乐方面，我选择了 The Nutcracker 作为我的年度 TOP。我想，这不仅是在 2019 年精听贝多芬九首交响曲之后，能重新让我眼前一亮的作品。也是因为它像是一把钥匙，能让我感受到久违的熟悉感。小时候曾经有接触过《猫和老鼠》之类的动画，里面大量采用了胡桃夹子的曲目。柴可夫斯基的曲子具备明显的特点，具有过年版喜庆的气氛。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/tR_Z1LUDQuQ?si=HXaYCHfmmakcZtgw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe></div><p>除了古典之外，受到二次元爱好的影响，我也会选择一部 ACG 专辑作为我的年度 TOP。毫无疑问，原神的枫丹音乐：原神-白露澈明之泉 Fountain of Belleau 可以作为这个的选择。<br>枫丹主城区，《百乐谐荣之城》正如之前专辑的主城专属音乐一样，有着浓厚的地域色彩。整个乐曲编曲婉转且轻松，提琴，手风琴以及民谣吉他等多种乐器协奏变调入水一般细腻。《露景澈映》则是主城区音乐的精华之作，首先从旋律方面来说，很少有这样的宫廷为背景的音乐能做到华丽而又不俗套。相反，传递了一种积极向上，人民安居乐业的氛围。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/znHhRYBmfck?si=thAMZw82aUGnIdnm" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe></div><p>野外区域，《刺玫的旋律》风格明显与其它音乐不同，主要是针对于刺玫会的描写，从乐器角度分析，笛子在这个音乐里面起到了主要作用（好吧确实是喜欢娜维娅）。风景背景我挑了很久（因为很多曲子都非常好），我最后选择了《深溪映繁星》，因为这首曲子不但展现了夕阳下星星快要在天上展现、溪水缓缓流淌的场景，而且包含了浓烈地、对过去的哀思。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/gwGOp351clk?si=ITt0i9a0jtqIRp1l" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe></div><p>海洋之下的曲子更是这部专辑的精华所在。首先《凋萎于昔时之花》确实是毫无争议的选择，当时刚看完水仙十字的剧情解析，回到安眠处就是这首，心里五味杂陈，感受到的是遗憾，渴望，无助，对往事的追忆，永远葬在了这篇蓝色的天地与小小的童话中。《流光过隙》这首曲子可以排在第二名，亮点主要是它的旋律，以及和甘露花海背景音乐的首尾呼应。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/xZSDdaYjV_c?si=eSSP_KVplIfxYY5q" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe></div><p>最后，《歌裴莉娅的晨歌 &amp; 科培琉司的辞行》也带给了我不小的惊喜<del>原来圆舞曲可以被用来这么干</del>。歌裴莉娅的主题曲无愧于晨歌之名，整体沁心明快，妙用弦乐点缀的水晶质感，宛若个人的独步舞步。科培琉司弦乐更有鲜明的层次感，更立体，少了很多少女般轻盈水晶质感，多了更多舞步的响板与街拍，钢琴独奏舞出了特有的棱角。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 56.3%; margin: 20px 0"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://www.youtube-nocookie.com/embed/xUcJtXtLb_I?si=t2mprb44PVGW-bKJ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe></div><h3 id="1-2-🍿-动漫"><a href="#1-2-🍿-动漫" class="headerlink" title="1.2 🍿 动漫"></a>1.2 🍿 动漫</h3><p>2023 年总体来说动漫没有 2022 那么有惊喜感。但是 2023 年的动漫带给我的印象普遍都很深刻，对于我这样子喜欢萌系画风的老人来说，《别当欧尼酱了》可以说是为数不多的惊喜了。惊喜感最主要来自于它的画风，以及剧情。画风这个东西是一眼看上去就能看得出来是否喜欢的，《别酱》可以说是正中下怀，人物的画风很好的展现了萌点，画风也相对合理，从细节也可以看出来确实下了血本。剧情方面比较偏日常，但不太同于一般的性转番套路。也让我作为一个男性也可以理解女孩子许许多多的不便，教导了我去尊重异性，求同存异。<del>才不是因为想要一个像美波里这样的妹妹呢！</del></p><p><del>顺带一提，这应该是我为数不多完整下载保存了的番剧。</del></p><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/01/09/2023-summary/1.avif"></div><p>不同于《别酱》，《MyGO》这部作品可以说在动漫圈获得了绝大部分好评，应该还是因为它的剧情确实值得一提，在我看来主要是它相比于一般的二次元整天架空描述美好，它确实描绘了非常真实可见的人设。和 2022 年的《孤独摇滚》相比，MyGO 是用动画的手法，展现出日常番可以达到的一种上限。一般来说，我们把套路化，一眼就能看穿的剧情，称之为「厕纸剧情」，但是 MyGO 真的需要去仔细地看，暂停，讨论，才能体会到制作组的那些各种小细节，精细的伏笔。从这个方面来看，MyGO 确实没有落入俗套。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/01/09/2023-summary/2.avif"></div><h3 id="1-3-🎮-游戏"><a href="#1-3-🎮-游戏" class="headerlink" title="1.3 🎮 游戏"></a>1.3 🎮 游戏</h3><p>由于工作方面的原因，我没有了整块时间玩单机游戏。所以今年我选择了《崩坏·星穹铁道》作为我的年度游戏（不得不提，确实省肝）。<br>所以说什么时候可以让流萤加入我的队伍呢？</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2024/01/09/2023-summary/3.webp"></div><h2 id="🌞-我的足迹"><a href="#🌞-我的足迹" class="headerlink" title="🌞 我的足迹"></a>🌞 我的足迹</h2><p>不全是去玩，有些地方是去办理事情，几乎没留下照片，<del>绝对不是因为懒</del>。所以这里用 LOGO 代替图片<del>这样子也可以做到性能优化</del>。</p><ul><li>2.1 深圳</li></ul><p>充满活力和创新精神的城市，也是充满机遇和挑战的城市。</p><p><svg data-v-0dd9719b="" version="1.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewbox="0 0 340.000000 250.000000" preserveaspectratio="xMidYMid meet" color-interpolation-filters="sRGB" style="margin: auto;"> <rect data-v-0dd9719b="" x="0" y="0" width="100%" height="100%" fill="#ffffff" fill-opacity="1" class="background"/>  <g data-v-0dd9719b="" class="iconmbgsvg" transform="translate(109.33943176269531,56.97978210449219)"><g fill="#333333" hollow-target="textNormalTran"><g opacity="0.55" transform="translate(4.4105682373046875,0)" mask="url(#587d7694-31b2-41a6-942c-6e1b42309c72)"><g><rect fill="#333333" fill-opacity="0" stroke-width="2" x="0" y="0" width="112.5" height="136.04043726419658" class="image-rect"/> <svg filter="url(#colors9324727152)" x="0" y="0" width="112.5" height="136.04043726419658" filtersec="colorsf5439152929" class="image-svg-svg primary" style="overflow: visible;"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewbox="0.0009374618530273438 -0.00272369384765625 29.740001678466797 35.96284484863281"><path transform="translate(-2.0390625 32.0020751953125)" d="M9.63-31.08L9.63-31.08Q15.54-33.12 21.23-30.66L21.23-30.66Q23.34-29.25 25.45-30.09L25.45-30.09Q27.42-31.36 28.62-29.25L28.62-29.25Q29.67-26.44 30.94-23.63L30.94-23.63Q31.64-22.36 31.78-21.09L31.78-21.09Q31.50-20.32 29.32-19.76L29.32-19.76Q28.55-19.97 27.77-21.30L27.77-21.30Q20.88-30.23 11.46-26.79L11.46-26.79Q9.07-24.96 9.84-22.50L9.84-22.50Q10.20-21.02 12.52-19.55L12.52-19.55L23.77-14.84Q26.86-13.64 29.18-10.69L29.18-10.69Q33.75-0.49 22.01 3.59L22.01 3.59Q17.93 4.50 13.64 3.16L13.64 3.16Q11.25 2.18 10.34 2.32L10.34 2.32Q9.35 2.32 6.96 3.45L6.96 3.45Q6.61 3.23 5.70 1.13L5.70 1.13L2.04-7.66Q2.53-8.65 4.71-9.28L4.71-9.28Q5.20-9.07 7.03-6.40L7.03-6.40Q12.73 0.35 19.34-0.42L19.34-0.42Q21.87-0.35 23.55-3.66L23.55-3.66Q24.33-6.40 21.16-8.51L21.16-8.51Q15.54-11.11 9.91-13.43L9.91-13.43Q3.09-17.16 3.87-23.98L3.87-23.98Q4.50-29.11 9.63-31.08Z"/></svg></svg> <defs><filter id="colors9324727152"><feColorMatrix type="matrix" values="0 0 0 0 0.9921875  0 0 0 0 0.828125  0 0 0 0 0.39453125  0 0 0 1 0" class="icon-fecolormatrix"/></filter> <filter id="colorsf5439152929"><feColorMatrix type="matrix" values="0 0 0 0 0.99609375  0 0 0 0 0.99609375  0 0 0 0 0.99609375  0 0 0 1 0" class="icon-fecolormatrix"/></filter> <filter id="colorsb3437685060"><feColorMatrix type="matrix" values="0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 1 0" class="icon-fecolormatrix"/></filter></defs></g><rect v-gra="id" width="124.5" height="148.04043579101562" transform="translate(-6, -6)" style="pointer-events:none;" fill="url(#2QmNWYNcemXPbAHNtAAF7)"/></g> <g transform="translate(0,30.86731719970703)"><g data-gra="path-name" fill-rule="" class="tp-name" transform="translate(0,0)"><g transform="scale(1)"><g><path d="M53.19-48.61L53.19-48.61Q53.72-48.94 54.79-48.68L54.79-48.68Q59.57-44.76 59.3-40.31L59.3-40.31Q58.04-38.71 55.78-39.18L55.78-39.18Q51.93-39.98 50.47-39.98L50.47-39.98Q49.14-39.78 47.81-39.31L47.81-39.31Q46.88-39.11 46.48-38.12L46.48-38.12Q46.48-37.79 46.22-37.05L46.22-37.05Q44.16-34 46.35-32.8L46.35-32.8Q48.21-32.21 49.87-33.4L49.87-33.4Q52.73-35.26 54.05-33.34L54.05-33.34Q55.32-30.48 51.8-29.22L51.8-29.22Q50.34-28.55 47.02-28.62L47.02-28.62Q43.89-28.09 41.64-30.68L41.64-30.68Q40.84-32.27 40.91-33.34L40.91-33.34Q41.04-37.19 41.77-39.98L41.77-39.98Q43.76-41.77 45.75-39.78L45.75-39.78Q47.55-39.11 49.61-42.1L49.61-42.1Q50.07-42.57 50.34-43.76L50.34-43.76Q49.94-44.96 47.95-44.56L47.95-44.56Q39.18-44.09 32.01-42.5L32.01-42.5Q28.02-40.97 28.09-38.38L28.09-38.38Q27.82-37.05 27.89-35.73L27.89-35.73Q28.02-33.67 25.83-31.81L25.83-31.81Q23.97-30.41 23.51-30.68L23.51-30.68Q23.11-31.14 22.78-33.14L22.78-33.14Q21.85-40.04 25.17-46.42L25.17-46.42Q25.96-47.95 27.36-46.48L27.36-46.48Q28.82-45.49 30.28-45.82L30.28-45.82Q39.25-47.35 49.01-47.21L49.01-47.21Q51.2-46.75 53.19-48.61ZM11.42-45.22L11.42-45.22Q13.21-46.02 17.4-44.09L17.4-44.09Q19.86-42.63 20.19-39.84L20.19-39.84Q19.99-37.12 18.46-36.52L18.46-36.52Q16.4-35.93 13.61-39.58L13.61-39.58Q11.49-40.51 10.23-42.96L10.23-42.96Q9.76-44.23 11.42-45.22ZM33.54-36.06L33.54-36.06Q36.19-38.25 37.85-34.27L37.85-34.27Q38.12-32.27 35.2-30.81L35.2-30.81Q30.95-27.89 28.55-27.03L28.55-27.03Q26.56-26.43 26.5-26.76L26.5-26.76Q28.02-31.68 33.54-36.06ZM7.24-29.29L7.24-29.29Q9.03-30.48 11.16-29.48L11.16-29.48Q17.46-26.96 13.68-22.51L13.68-22.51Q12.95-22.05 10.96-23.57L10.96-23.57Q9.89-24.7 8.83-25.3L8.83-25.3Q5.78-26.76 7.24-29.29ZM36.66-24.9L36.66-24.9Q35.53-28.95 38.91-27.96L38.91-27.96Q41.11-27.03 41.44-24.97L41.44-24.97Q41.84-23.18 43.56-23.44L43.56-23.44 51.53-24.24Q54.19-24.7 55.52-24.3L55.52-24.3Q59.57-22.58 58.9-18.93L58.9-18.93Q58.44-17.73 57.51-17.6L57.51-17.6Q55.71-16.67 51.53-17.6L51.53-17.6Q47.28-18.13 44.63-17.53L44.63-17.53Q43.03-17.66 42.5-15.87L42.5-15.87Q43.23-5.18 42.43-1.13L42.43-1.13Q42.3 2.59 39.84 3.72L39.84 3.72Q37.45 5.18 35.39 6.97L35.39 6.97Q33.4 7.77 33 4.91L33 4.91Q32.47 2.86 29.62 0.86L29.62 0.86Q29.48 0.46 31.48 0.93L31.48 0.93Q33.4 1.53 34.53 1.33L34.53 1.33Q36.59 0.46 36.59-1.73L36.59-1.73Q37.39-7.37 37.19-13.55L37.19-13.55Q37.59-17.33 33.47-16L33.47-16Q29.09-15.34 25.5-14.14L25.5-14.14Q23.24-13.08 21.05-16L21.05-16Q19.66-18.2 23.04-20.05L23.04-20.05Q25.96-21.18 33.67-22.25L33.67-22.25 36.13-22.71Q37.19-23.57 36.66-24.9ZM14.21-12.82L14.21-12.82Q15.74-14.68 14.41-11.62L14.41-11.62Q11.42-4.98 14.61-1L14.61-1Q15.87 1.13 14.01 3.32L14.01 3.32Q10.96 6.38 8.7 1.26L8.7 1.26Q7.44-2.46 8.1-6.11L8.1-6.11 12.15-10.16Q13.08-11.49 14.21-12.82ZM49.27-12.15L49.27-12.15Q52-12.55 55.05-9.7L55.05-9.7Q57.77-6.71 58.11-3.12L58.11-3.12Q58.37-0.8 56.58 0.8L56.58 0.8Q55.25 1.66 53.92 0.66L53.92 0.66Q52.33-0.2 52.33-1.79L52.33-1.79Q51.73-4.58 50.14-7.11L50.14-7.11Q49.14-8.3 48.74-9.76L48.74-9.76Q48.34-11.09 49.27-12.15ZM22.98-10.09L22.98-10.09Q24.04-11.95 25.43-10.56L25.43-10.56Q26.3-9.83 28.29-10.43L28.29-10.43Q28.69-10.63 27.56-8.63L27.56-8.63Q25.96-5.18 26.3-1.46L26.3-1.46Q26.63 1.06 25.5 1.66L25.5 1.66Q23.77 2.52 22.84 0.53L22.84 0.53Q21.91-1.99 21.85-4.78L21.85-4.78Q21.71-8.23 22.98-10.09ZM121.86-46.82L121.86-46.82Q122.79-49.07 124.58-48.41L124.58-48.41Q128.76-47.15 127.96-42.9L127.96-42.9Q127.37-34.93 127.63-30.41L127.63-30.41Q127.96-20.39 127.83-4.25L127.83-4.25Q128.1 1.39 123.85 6.04L123.85 6.04Q122.65 8.17 122.45 8.04L122.45 8.04Q121.66 6.44 121.39 2.26L121.39 2.26Q121.06-14.74 120.93-32.01L120.93-32.01Q120.33-40.11 121.86-46.82ZM84-45.16L84-45.16Q86.93-46.88 89.38-43.03L89.38-43.03Q89.71-42.1 89.52-40.38L89.52-40.38Q89.05-37.52 89.12-34.66L89.12-34.66Q89.52-33.6 91.31-34.13L91.31-34.13Q95.03-33.54 95.09-30.48L95.09-30.48Q95.36-27.29 91.64-23.84L91.64-23.84Q88.92-21.85 88.65-20.12L88.65-20.12 88.52-16.4Q88.39-14.68 88.92-14.54L88.92-14.54Q89.65-14.34 91.24-15.67L91.24-15.67 93.23-17.07Q95.23-18.53 95.36-16.54L95.36-16.54Q94.83-13.68 93.3-11.89L93.3-11.89Q88.79-4.91 83.27-0.86L83.27-0.86Q81.68 0.66 79.29 0.07L79.29 0.07Q77.43-0.53 76.96-1.66L76.96-1.66Q75.7-5.11 78.96-8.3L78.96-8.3Q80.88-9.96 82.81-11.36L82.81-11.36Q83.21-12.29 83.21-13.88L83.21-13.88 83.21-17.07Q83.14-18 82.34-18.59L82.34-18.59Q78.36-18.73 74.97-23.38L74.97-23.38Q73.91-24.84 75.04-26.03L75.04-26.03Q76.57-27.82 80.22-29.62L80.22-29.62Q83.54-30.75 82.94-33.4L82.94-33.4Q83.01-36.39 82.54-39.45L82.54-39.45Q82.21-42.57 84-45.16ZM100.8-42.96L100.8-42.96Q101.87-43.96 103.73-42.3L103.73-42.3Q104.79-41.44 105.05-39.78L105.05-39.78Q104.32-33.34 104.39-25.5L104.39-25.5Q104.26-11.09 94.83-0.07L94.83-0.07Q93.17 1.59 93.43-0.4L93.43-0.4Q94.1-4.18 96.69-10.36L96.69-10.36Q99.28-18.46 99.28-26.76L99.28-26.76 99.21-38.25Q99.21-40.64 100.8-42.96ZM111.23-40.57L111.23-40.57Q114.82-42.04 115.48-37.65L115.48-37.65Q113.62-24.11 114.22-9.5L114.22-9.5Q114.55-7.04 112.82-4.05L112.82-4.05Q111.23-2.26 110.83-2.32L110.83-2.32Q109.5-4.12 109.5-6.71L109.5-6.71Q109.3-10.36 109.37-14.28L109.37-14.28Q109.37-26.3 109.64-38.58L109.64-38.58Q110.04-39.58 111.23-40.57Z" transform="translate(-6.767361164093018, 48.79457473754883)"/></g> <!----> <!----> <!----> <!----> <!----> <!----> <!----></g></g> <g data-gra="path-slogan" fill-rule="" class="tp-slogan" fill="#020f40" transform="translate(33.904592514038086,63.8420524597168)"><!----> <!----> <g transform="scale(1, 1)"><g transform="scale(1)"><path d="M5.98-5.08L5.98-5.08L5.08-5.08Q5-6.45 3.28-6.52L3.28-6.52Q1.68-6.48 1.68-5.27L1.68-5.27Q1.68-4.49 2.54-4.38L2.54-4.38L4.57-3.91Q6.17-3.52 6.17-1.95L6.17-1.95Q6.13 0.04 3.36 0.12L3.36 0.12Q1.84 0.12 1.21-0.51L1.21-0.51Q0.43-1.09 0.47-2.30L0.47-2.30L1.41-2.30Q1.45-0.66 3.36-0.63L3.36-0.63Q5.23-0.66 5.27-1.84L5.27-1.84Q5.43-2.81 3.71-3.13L3.71-3.13L2.23-3.44Q0.70-3.87 0.70-5.16L0.70-5.16Q0.82-7.27 3.20-7.34L3.20-7.34Q5.90-7.34 5.98-5.08ZM8.36-4.22L12.11-4.22L12.11-7.15L13.09-7.15L13.09 0L12.11 0L12.11-3.32L8.36-3.32L8.36 0L7.38 0L7.38-7.15L8.36-7.15L8.36-4.22ZM15.66-0.86L19.96-0.86L19.96 0L14.69 0L14.69-7.15L19.88-7.15L19.88-6.33L15.66-6.33L15.66-4.10L19.57-4.10L19.57-3.24L15.66-3.24L15.66-0.86ZM22.38-7.15L25.98-1.37L25.98-7.15L26.91-7.15L26.91 0L25.82 0L22.19-5.78L22.15-5.78L22.15 0L21.21 0L21.21-7.15L22.38-7.15ZM29.10-0.86L33.52-0.86L33.52 0L27.89 0L27.89-0.78L32.27-6.33L28.20-6.33L28.20-7.15L33.52-7.15L33.52-6.33L29.10-0.86ZM35.43-4.22L39.18-4.22L39.18-7.15L40.16-7.15L40.16 0L39.18 0L39.18-3.32L35.43-3.32L35.43 0L34.45 0L34.45-7.15L35.43-7.15L35.43-4.22ZM42.73-0.86L47.03-0.86L47.03 0L41.76 0L41.76-7.15L46.95-7.15L46.95-6.33L42.73-6.33L42.73-4.10L46.64-4.10L46.64-3.24L42.73-3.24L42.73-0.86ZM49.45-7.15L53.05-1.37L53.05-7.15L53.98-7.15L53.98 0L52.89 0L49.26-5.78L49.22-5.78L49.22 0L48.28 0L48.28-7.15L49.45-7.15Z" transform="translate(-0.466889880952381, 7.34375)"/></g></g></g></g></g></g><defs v-gra="od"/><defs v-gra="id"><filter id="91798e63-951a-4f05-a8bb-2981ac7336f8" filterunits="userSpaceOnUse"><feColorMatrix type="matrix" values="0 0 0 0 0.99609375  0 0 0 0 0.99609375  0 0 0 0 0.99609375  0 0 0 1 0"/></filter><linearGradient x1="0" y1="1" x2="0" y2="0" id="2QmNWYNcemXPbAHNtAAF7"><stop offset="0%" stop-color="#a18cd1"/><stop offset="100%" stop-color="#fbc2eb"/></linearGradient><filter id="42443b3f1de60f6b6fd3b6a9844b4764" filterunits="objectBoundingBox"><feColorMatrix type="matrix" values="0 0 0 0 0.99609375  0 0 0 0 0.99609375  0 0 0 0 0.99609375  0 0 0 1 0"/></filter></defs><mask v-gra="im" id="587d7694-31b2-41a6-942c-6e1b42309c72"><g opacity="0.55" filter="url(#91798e63-951a-4f05-a8bb-2981ac7336f8)"><g><rect fill="#333333" fill-opacity="0" stroke-width="2" x="0" y="0" width="112.5" height="136.04043726419658" class="image-rect"/> <svg x="0" y="0" width="112.5" height="136.04043726419658" filtersec="colorsf5439152929" class="image-svg-svg primary" style="overflow: visible;"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewbox="0.0009374618530273438 -0.00272369384765625 29.740001678466797 35.96284484863281"><path transform="translate(-2.0390625 32.0020751953125)" d="M9.63-31.08L9.63-31.08Q15.54-33.12 21.23-30.66L21.23-30.66Q23.34-29.25 25.45-30.09L25.45-30.09Q27.42-31.36 28.62-29.25L28.62-29.25Q29.67-26.44 30.94-23.63L30.94-23.63Q31.64-22.36 31.78-21.09L31.78-21.09Q31.50-20.32 29.32-19.76L29.32-19.76Q28.55-19.97 27.77-21.30L27.77-21.30Q20.88-30.23 11.46-26.79L11.46-26.79Q9.07-24.96 9.84-22.50L9.84-22.50Q10.20-21.02 12.52-19.55L12.52-19.55L23.77-14.84Q26.86-13.64 29.18-10.69L29.18-10.69Q33.75-0.49 22.01 3.59L22.01 3.59Q17.93 4.50 13.64 3.16L13.64 3.16Q11.25 2.18 10.34 2.32L10.34 2.32Q9.35 2.32 6.96 3.45L6.96 3.45Q6.61 3.23 5.70 1.13L5.70 1.13L2.04-7.66Q2.53-8.65 4.71-9.28L4.71-9.28Q5.20-9.07 7.03-6.40L7.03-6.40Q12.73 0.35 19.34-0.42L19.34-0.42Q21.87-0.35 23.55-3.66L23.55-3.66Q24.33-6.40 21.16-8.51L21.16-8.51Q15.54-11.11 9.91-13.43L9.91-13.43Q3.09-17.16 3.87-23.98L3.87-23.98Q4.50-29.11 9.63-31.08Z"/></svg></svg> <defs><filter id="colors9324727152"><feColorMatrix type="matrix" values="0 0 0 0 0.9921875  0 0 0 0 0.828125  0 0 0 0 0.39453125  0 0 0 1 0" class="icon-fecolormatrix"/></filter> <filter id="colorsf5439152929"><feColorMatrix type="matrix" values="0 0 0 0 0.99609375  0 0 0 0 0.99609375  0 0 0 0 0.99609375  0 0 0 1 0" class="icon-fecolormatrix"/></filter> <filter id="colorsb3437685060"><feColorMatrix type="matrix" values="0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 1 0" class="icon-fecolormatrix"/></filter></defs></g></g></mask></svg></p><ul><li>2.2 香港</li></ul><p>东西方文化的交融，现代与传统的碰撞。</p><p><svg data-v-0dd9719b="" version="1.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewbox="0 0 340.000000 250.000000" preserveaspectratio="xMidYMid meet" color-interpolation-filters="sRGB" style="margin: auto;"> <rect data-v-0dd9719b="" x="0" y="0" width="100%" height="100%" fill="#fef5ef" fill-opacity="1" class="background"/>  <g data-v-0dd9719b="" fill="#4e374f" class="basesvg" transform="translate(117.61896133422852,92.1216049194336)"><g data-gra="path-name" fill-rule="" class="tp-name" transform="translate(0,0)"><g transform="scale(1)"><g><path d="M12.51 4.35L12.51 4.35Q13.54 4.89 15.42 4.11 17.29 3.33 17.29 2.42 17.29 1.5 17.94 1.02L17.94 1.02Q18.21 0.86 27.5 0.86L27.5 0.86Q28.2 0.86 29.49 0.86L29.49 0.86Q35.61 0.86 36.63 1.07 37.65 1.29 37.54 2.52L37.54 2.52Q37.49 2.85 37.49 3.01L37.49 3.01Q37.49 3.76 38 4.08 38.51 4.4 39.5 4.22 40.5 4.03 41.84 3.38L41.84 3.38Q42.75 2.95 42.89 2.63 43.02 2.31 42.92 0.38L42.92 0.38Q42.81-2.26 42.75-8.11 42.7-13.96 42.81-14.39L42.81-14.39Q43.08-15.25 43.72-15.58L43.72-15.58Q44.53-16.01 44.53-16.44L44.53-16.44Q44.53-16.7 42.89-18.32 41.25-19.93 40.82-20.03L40.82-20.03Q39.91-20.3 39.58-20.22 39.26-20.14 38.46-19.17L38.46-19.17Q37.65-18.15 37.38-18.05L37.38-18.05Q36.68-17.67 31.15-17.62L31.15-17.62Q28.31-17.62 27.34-17.62L27.34-17.62Q19.23-17.62 18.15-17.7 17.08-17.78 15.31-18.53L15.31-18.53Q13.21-19.5 13.19-20.03 13.16-20.57 15.15-21.81L15.15-21.81Q19.39-24.49 22.56-27.45L22.56-27.45Q24.28-29.11 24.71-28.2L24.71-28.2Q25.19-27.18 24.76-21.38L24.76-21.38Q24.71-20.03 24.95-19.66 25.19-19.28 26.16-19.28L26.16-19.28Q27.98-19.39 29.06-20.11 30.13-20.84 30.08-21.91L30.08-21.91Q29.38-31.15 30.56-31.21L30.56-31.21Q31.04-31.21 32.07-29.7L32.07-29.7Q34.64-25.83 38.62-22.72L38.62-22.72Q39.42-22.13 40.07-21.54 40.71-20.95 41.04-20.71 41.36-20.46 42.19-20.01 43.02-19.55 44.58-18.8L44.58-18.8Q47.37-17.51 47.86-17.4 48.34-17.29 48.55-17.94L48.55-17.94Q49.52-20.63 51.51-21.43L51.51-21.43Q53.12-22.08 50.65-22.61L50.65-22.61Q46.51-23.58 41.98-25.57 37.44-27.55 34.8-29.46 32.17-31.37 33.09-32.17L33.09-32.17Q33.3-32.39 42-32.44L42-32.44Q48.93-32.5 50.11-32.58 51.29-32.66 51.4-33.14L51.4-33.14Q51.67-34 48.29-36.52L48.29-36.52Q46.84-37.6 46.46-37.6 46.08-37.6 45.17-36.36L45.17-36.36Q43.88-34.7 43.45-34.43L43.45-34.43Q42.59-34 38.62-34L38.62-34Q36.85-34 36.58-34L36.58-34Q36.09-34 35.23-34L35.23-34Q30.88-34.05 30.29-34.43L30.29-34.43Q29.81-34.75 29.81-36.25L29.81-36.25Q29.81-36.63 29.81-36.79L29.81-36.79Q29.76-39.26 30.27-39.75 30.78-40.23 33.68-40.55L33.68-40.55Q37.06-40.93 38.78-41.2L38.78-41.2Q42.06-41.68 43.13-41.41L43.13-41.41Q44.96-40.93 45.01-41.36L45.01-41.36Q45.01-41.84 42.97-43.99L42.97-43.99Q40.98-46.03 40.66-46.19 40.34-46.35 38.78-45.92L38.78-45.92Q32.87-44.2 24.2-42.51 15.52-40.82 9.02-40.18L9.02-40.18Q7.95-40.07 7.65-39.91 7.36-39.75 7.47-39.42L7.47-39.42Q7.63-39.1 12.25-39.13 16.87-39.16 22.08-39.48L22.08-39.48Q24.12-39.64 24.52-39.26 24.92-38.89 24.92-36.85L24.92-36.85Q24.92-35.18 24.76-34.75 24.6-34.32 24.01-34.16L24.01-34.16Q23.26-33.95 15.07-34 6.88-34.05 4.4-34.32L4.4-34.32Q3.44-34.38 3.38-34.21 3.33-34.05 3.87-32.98L3.87-32.98Q4.4-32.01 4.73-31.9 5.05-31.8 6.88-32.07L6.88-32.07Q9.88-32.44 14.45-32.47 19.01-32.5 19.34-32.12L19.34-32.12Q19.66-31.8 19.36-31.21 19.07-30.62 17.78-29L17.78-29Q15.25-25.94 11.44-22.75 7.63-19.55 3.97-17.51L3.97-17.51Q3.22-17.08 3.06-16.87 2.9-16.65 3.17-16.38L3.17-16.38Q3.33-16.17 3.97-16.38L3.97-16.38Q5.69-16.97 8.97-18.48L8.97-18.48Q11.01-19.39 11.44-19.01 11.87-18.64 12.08-15.9L12.08-15.9Q12.25-14.18 12.25-7.3 12.25-0.43 12.08 1.61L12.08 1.61Q11.98 3.28 12.03 3.71 12.08 4.14 12.51 4.35ZM36.85-0.86L36.85-0.86Q36.42-0.64 27.45-0.64 18.48-0.64 18.05-0.86L18.05-0.86Q17.19-1.29 17.19-4.24 17.19-7.2 18.05-7.57L18.05-7.57Q18.48-7.84 27.45-7.84 36.42-7.84 36.85-7.57L36.85-7.57Q37.71-7.2 37.71-4.24 37.71-1.29 36.85-0.86ZM36.95-9.51L36.95-9.51Q36.58-9.29 27.42-9.32 18.26-9.35 17.94-9.56L17.94-9.56Q17.13-9.99 17.19-12.73 17.24-15.47 18.05-15.84L18.05-15.84Q18.48-16.11 27.45-16.11 36.42-16.11 36.85-15.84L36.85-15.84Q37.65-15.47 37.71-12.73 37.76-9.99 36.95-9.51ZM63.54 4.51L63.54 4.51Q64.29 4.67 65.23 4.24 66.17 3.81 66.66 3.12L66.66 3.12Q67.57 1.72 67.46-0.43 67.35-2.58 66.17-6.98L66.17-6.98Q65.58-9.18 66.2-12.6 66.82-16.01 69.45-24.55L69.45-24.55Q69.88-26.1 70.42-26.32 70.95-26.53 74.07-26.53L74.07-26.53Q77.4-26.53 77.91-26.21 78.42-25.89 77.77-24.33L77.77-24.33Q76.54-21.27 73.75-17.59 70.95-13.91 68.37-11.82L68.37-11.82Q67.73-11.33 67.62-11.17 67.51-11.01 67.68-10.69L67.68-10.69Q67.89-10.31 69.8-11.36 71.7-12.41 74.07-14.18L74.07-14.18Q75.73-15.42 76.11-15.36L76.11-15.36Q76.7-15.2 76.75-11.17L76.75-11.17Q76.81-10.21 76.81-6.98L76.81-6.98Q76.86 0.64 77.18 1.61L77.18 1.61Q77.45 2.31 78.42 2.79L78.42 2.79Q78.47 2.79 78.58 2.85L78.58 2.85Q80.41 3.76 90.05 3.68 99.69 3.6 102.16 2.63L102.16 2.63Q103.45 2.15 103.88 0.54L103.88 0.54Q104.25-0.86 103.29-0.86L103.29-0.86Q103.23-0.86 102.75-1.34L102.75-1.34Q102.1-1.88 101.94-2.5 101.78-3.12 101.73-5.53L101.73-5.53Q101.62-8.7 101.35-8.7 101.08-8.7 100.6-6.61L100.6-6.61Q99.63-2.95 99.15-2.26L99.15-2.26Q98.29-1.13 95.28-1.02L95.28-1.02Q94.37-0.97 89.7-0.97L89.7-0.97Q88.95-0.97 87.71-0.97L87.71-0.97Q82.98-0.97 82.23-1.45L82.23-1.45Q81.53-1.83 81.53-3.65L81.53-3.65Q81.53-3.87 81.53-4.3L81.53-4.3Q81.53-5 81.53-5.42L81.53-5.42Q81.53-5.75 81.53-6.28L81.53-6.28Q81.48-9.02 81.96-9.51L81.96-9.51Q82.45-9.99 85.29-9.99L85.29-9.99 85.56-9.99Q86.31-9.99 86.69-9.99L86.69-9.99Q90.56-9.99 91.2-9.8 91.85-9.61 91.85-8.33L91.85-8.33Q91.85-7.57 92.36-7.44 92.87-7.3 94.53-7.68L94.53-7.68Q96.14-8.06 96.41-8.49 96.68-8.92 96.57-10.96L96.57-10.96Q96.25-16.54 96.84-16.97L96.84-16.97Q97.32-17.35 99.1-15.52L99.1-15.52Q102.86-11.66 103.77-12.03L103.77-12.03Q103.98-12.14 104.15-12.57L104.15-12.57Q104.52-13.7 105.41-14.74 106.29-15.79 107.21-16.11L107.21-16.11Q108.39-16.6 107.05-17.13L107.05-17.13Q106.83-17.24 106.51-17.35L106.51-17.35Q102.75-18.75 98.77-21.56 94.8-24.38 94.8-25.73L94.8-25.73Q94.8-26.21 95.34-26.32L95.34-26.32Q96.09-26.48 100.98-26.53L100.98-26.53Q105.38-26.59 106.19-26.67 106.99-26.75 107.21-27.12L107.21-27.12Q107.48-27.5 106.37-28.74 105.27-29.97 103.61-31.26L103.61-31.26Q102.59-31.96 102.27-31.82 101.94-31.69 100.87-30.24L100.87-30.24Q99.74-28.68 99.28-28.36 98.83-28.04 97.65-28.04L97.65-28.04Q96.14-28.04 95.87-28.55 95.61-29.06 95.61-31.85L95.61-31.85Q95.61-32.23 95.61-32.87L95.61-32.87Q95.55-34.86 96.04-35.23L96.04-35.23Q96.52-35.66 99.79-35.66L99.79-35.66Q100.55-35.66 100.98-35.66L100.98-35.66Q104.63-35.72 105.3-35.8 105.97-35.88 106.19-36.25L106.19-36.25Q106.46-36.68 105.41-37.92 104.36-39.16 102.75-40.39L102.75-40.39Q101.73-41.09 101.41-40.95 101.08-40.82 99.96-39.16L99.96-39.16Q98.94-37.71 98.13-37.3 97.32-36.9 96.36-37.38L96.36-37.38Q95.55-37.81 95.55-40.31 95.55-42.81 96.36-43.29L96.36-43.29Q97.49-43.99 95.61-44.69L95.61-44.69Q94.8-45.01 93.35-45.44L93.35-45.44Q90.61-46.14 90.45-45.92L90.45-45.92Q90.34-45.82 90.4-45.22L90.4-45.22Q91.36-38.24 90.07-37.44L90.07-37.44Q89.7-37.17 87.28-37.14 84.86-37.11 84.38-37.38L84.38-37.38Q83.47-37.81 83.47-40.12 83.47-42.43 84.38-43.24L84.38-43.24Q85.24-43.99 84.27-44.53L84.27-44.53Q83.68-44.79 82.34-45.22L82.34-45.22Q79.01-46.19 78.74-45.92L78.74-45.92Q78.58-45.76 78.63-45.22L78.63-45.22Q78.85-43.4 78.93-40.87 79.01-38.35 78.85-38.03L78.85-38.03Q78.26-36.79 72.29-37.44L72.29-37.44Q70.95-37.54 70.84-37.44 70.74-37.33 71.22-36.31L71.22-36.31Q71.76-35.23 71.92-35.1 72.08-34.97 72.99-35.18L72.99-35.18Q75.25-35.66 76.7-35.66L76.7-35.66Q78.42-35.66 78.77-35.13 79.12-34.59 79.12-31.85L79.12-31.85Q79.12-28.84 78.66-28.44 78.2-28.04 74.87-28.04 71.54-28.04 71.14-28.44 70.74-28.84 71.54-31.47L71.54-31.47Q72.24-33.73 72.03-33.84L72.03-33.84Q71.92-33.89 71.6-33.89L71.6-33.89Q71.38-33.89 68.64-27.34L68.64-27.34Q68.27-26.43 67.57-24.81L67.57-24.81Q63-13.86 62.04-12.46L62.04-12.46Q61.34-11.49 60.26-11.44L60.26-11.44Q60.16-11.44 60-11.44 59.83-11.44 59.73-11.44L59.73-11.44Q58.76-11.39 58.57-11.28 58.38-11.17 58.49-10.74L58.49-10.74Q58.65-10.37 59.3-10.26L59.3-10.26Q61.18-9.88 61.79-7.49 62.41-5.1 61.88-0.21L61.88-0.21Q61.71 1.34 61.82 2.34 61.93 3.33 62.33 3.84 62.73 4.35 63.54 4.51ZM91.09-11.76L91.09-11.76Q90.66-11.55 86.72-11.52 82.77-11.49 82.34-11.71L82.34-11.71Q81.59-12.08 81.45-14.8 81.32-17.51 82.02-18.15L82.02-18.15Q82.29-18.42 86.5-18.5 90.72-18.58 91.15-18.32L91.15-18.32Q92.01-17.89 91.95-15.04 91.9-12.19 91.09-11.76ZM91.36-20.25L91.36-20.25Q90.93-20.03 86.77-20.01 82.61-19.98 82.12-20.2L82.12-20.2Q80.83-20.73 82.18-22.72L82.18-22.72Q82.23-22.83 82.39-23.07 82.55-23.31 82.77-23.74 82.98-24.17 83.14-24.38L83.14-24.38Q84.11-26.1 84.68-26.32 85.24-26.53 88.46-26.53L88.46-26.53Q92.11-26.53 92.65-26.21L92.65-26.21Q93.03-25.94 93.51-24.71L93.51-24.71Q94.42-22.24 93.73-22.24L93.73-22.24Q93.56-22.24 92.65-21.32L92.65-21.32Q91.9-20.63 91.36-20.25ZM90.29-28.31L90.29-28.31Q89.97-28.04 87.23-28.04L87.23-28.04Q84.33-28.04 83.95-28.44 83.57-28.84 83.57-31.85 83.57-34.86 83.98-35.26 84.38-35.66 87.23-35.66L87.23-35.66Q90.02-35.66 90.45-35.23 90.88-34.8 90.88-31.9L90.88-31.9Q90.88-28.84 90.29-28.31ZM62.95-25.89L62.95-25.89Q64.78-24.98 65.9-26.43 67.03-27.88 66.01-29.81L66.01-29.81Q65.31-31.21 63.41-32.33 61.5-33.46 59.03-33.89L59.03-33.89Q57.95-34.11 57.87-33.84 57.79-33.57 58.71-32.66L58.71-32.66Q60.96-30.24 62.3-26.48L62.3-26.48Q62.41-26.1 62.95-25.89ZM67.08-37.06L67.08-37.06Q69.77-36.04 70.42-37.97L70.42-37.97Q71.11-39.85 69.39-42.16L69.39-42.16Q68.37-43.51 66.82-44.31L66.82-44.31Q63.38-46.08 62.09-45.65L62.09-45.65Q61.45-45.44 62.2-44.58L62.2-44.58Q64.83-41.84 65.9-38.94L65.9-38.94Q66.39-37.65 66.52-37.46 66.66-37.28 67.08-37.06Z" transform="translate(-3.000465154647827, 46.2333869934082)"/></g> <!----> <!----> <!----> <!----> <!----> <!----> <!----></g></g> <g data-gra="path-slogan" fill-rule="" class="tp-slogan" fill="#f75835" transform="translate(16.03104019165039,56.80429458618164)"><!----> <!----> <g transform="scale(1, 1)"><g transform="scale(1)"><path d="M2.06-5.06L6.56-5.06L6.56-8.58L7.73-8.58L7.73 0L6.56 0L6.56-3.98L2.06-3.98L2.06 0L0.89 0L0.89-8.58L2.06-8.58L2.06-5.06ZM16.31-4.27L16.31-4.27Q16.13-7.64 13.31-7.83L13.31-7.83Q10.45-7.69 10.31-4.27L10.31-4.27Q10.45-0.94 13.31-0.80L13.31-0.80Q16.13-0.98 16.31-4.27ZM17.48-4.27L17.48-4.27Q17.20 0 13.31 0.14L13.31 0.14Q9.38 0 9.09-4.27L9.09-4.27Q9.33-8.72 13.31-8.81L13.31-8.81Q17.20-8.67 17.48-4.27ZM20.25-8.58L24.56-1.64L24.56-8.58L25.69-8.58L25.69 0L24.38 0L20.02-6.94L19.97-6.94L19.97 0L18.84 0L18.84-8.58L20.25-8.58ZM33.89-3.61L31.27-3.61L31.27-4.59L35.02-4.59L35.02 0L34.27 0L33.98-1.08Q33 0.09 31.17 0.14L31.17 0.14Q29.44 0.14 28.50-0.75L28.50-0.75Q27.09-2.06 27.14-4.36L27.14-4.36Q27.47-8.63 31.22-8.81L31.22-8.81Q34.41-8.63 34.88-6L34.88-6L33.75-6Q33.28-7.78 31.17-7.83L31.17-7.83Q28.50-7.64 28.36-4.31L28.36-4.31Q28.36-0.75 31.22-0.75L31.22-0.75Q32.25-0.75 33-1.31L33-1.31Q33.94-2.06 33.89-3.61L33.89-3.61ZM42.66-4.31L41.30-3.05L41.30 0L40.13 0L40.13-8.58L41.30-8.58L41.30-4.41L45.47-8.58L47.11-8.58L43.50-5.11L47.20 0L45.66 0L42.66-4.31ZM54.89-4.27L54.89-4.27Q54.70-7.64 51.89-7.83L51.89-7.83Q49.03-7.69 48.89-4.27L48.89-4.27Q49.03-0.94 51.89-0.80L51.89-0.80Q54.70-0.98 54.89-4.27ZM56.06-4.27L56.06-4.27Q55.78 0 51.89 0.14L51.89 0.14Q47.95 0 47.67-4.27L47.67-4.27Q47.91-8.72 51.89-8.81L51.89-8.81Q55.78-8.67 56.06-4.27ZM58.83-8.58L63.14-1.64L63.14-8.58L64.27-8.58L64.27 0L62.95 0L58.59-6.94L58.55-6.94L58.55 0L57.42 0L57.42-8.58L58.83-8.58ZM72.47-3.61L69.84-3.61L69.84-4.59L73.59-4.59L73.59 0L72.84 0L72.56-1.08Q71.58 0.09 69.75 0.14L69.75 0.14Q68.02 0.14 67.08-0.75L67.08-0.75Q65.67-2.06 65.72-4.36L65.72-4.36Q66.05-8.63 69.80-8.81L69.80-8.81Q72.98-8.63 73.45-6L73.45-6L72.33-6Q71.86-7.78 69.75-7.83L69.75-7.83Q67.08-7.64 66.94-4.31L66.94-4.31Q66.94-0.75 69.80-0.75L69.80-0.75Q70.83-0.75 71.58-1.31L71.58-1.31Q72.52-2.06 72.47-3.61L72.47-3.61Z" transform="translate(-0.890625, 8.8125)"/></g></g></g></g><defs v-gra="od"/></svg></p><ul><li>2.3 武汉</li></ul><p>我从这里离开，从这里开始。</p><p><svg data-v-0dd9719b="" version="1.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewbox="0 0 340.000000 250.000000" preserveaspectratio="xMidYMid meet" color-interpolation-filters="sRGB" style="margin: auto;"> <rect data-v-0dd9719b="" x="0" y="0" width="100%" height="100%" fill="#ffffff" fill-opacity="1" class="background"/>  <g data-v-0dd9719b="" fill="#b5925c" class="pmspacesvg" transform="translate(105.77999877929688,66.59093856811523)"><!----> <g mask="url(#54a2a05c-fa63-4f20-86bd-ec9094162b29)"><g><rect data-gra="graph-name" fill="#b5925c" fill-opacity="0.5" x="0" y="72.0999984741211" width="128.44000244140625" height="30.72000026702881"/> <rect data-gra="graph-name" fill="#b5925c" fill-opacity="1" x="0" y="10" width="128.44000244140625" height="72.0999984741211"/></g> <g fill-opacity="0" transform="translate(0,10)"><g><rect data-gra="graph-name-bg" stroke-width="2" class="i-icon-bg" x="0" y="0" width="128.44000244140625" height="96.81812286376953"/> <!----> <!----> </g> <g transform="translate(10,10)"><g data-gra="path-name" fill-rule="" class="tp-name" fill="#ffffff" fill-opacity="1" transform="translate(0,0)"><g transform="scale(1)"><g><path d="M29.06-38.03L29.06-38.03 7.36-38.03 6.93-39.53 19.66-39.53 23.58-44.79Q27.98-41.25 30.62-38.89L30.62-38.89Q30.4-38.03 29.06-38.03ZM52.69-13.32L53.23-13.21 51.83-3.28Q54.73 2.58 52.91 4.08L52.91 4.08Q51.35 5.48 49.23 5.16 47.1 4.83 45.33 3.87 43.56 2.9 42.27 1.56L42.27 1.56Q35.77-5.37 33.09-16.54L33.09-16.54Q32.66-16.11 31.85-16.11L31.85-16.11 23.96-16.11 23.96-5.96Q25.62-6.18 34.91-7.36L34.91-7.36 34.97-6.71Q26.21-2.42 7.09 3.97L7.09 3.97Q6.5 5.05 5.42 5.32L5.42 5.32 1.18-3.33Q1.77-3.38 2.58-3.46 3.38-3.54 4.51-3.68 5.64-3.81 6.39-3.87L6.39-3.87 6.39-23.85 14.82-23.15Q14.66-22.18 13.27-21.91L13.27-21.91 13.27-4.62 16.44-5 16.44-29.17 25.73-28.36Q25.62-27.23 23.96-26.96L23.96-26.96 24.01-17.67 27.39-22.77Q30.72-19.66 32.92-17.46L32.92-17.46Q31.74-22.67 31.21-30.24L31.21-30.24 2.15-30.24 1.72-31.8 31.1-31.8Q30.72-38.51 30.72-46.78L30.72-46.78 40.82-45.82Q40.71-44.47 38.89-44.2L38.89-44.2Q38.67-36.63 38.89-31.8L38.89-31.8 41.41-31.8 45.22-36.47Q44.63-36.68 44.2-36.95L44.2-36.95Q43.45-40.61 40.44-44.15L40.44-44.15 40.82-44.42Q48.34-44.58 50.22-41.36L50.22-41.36Q51.4-39.37 49.9-37.54L49.9-37.54Q48.82-36.2 47.05-36.15L47.05-36.15Q51.72-32.66 53.55-31.15L53.55-31.15Q53.28-30.24 51.94-30.24L51.94-30.24 38.99-30.24Q39.91-13.11 47.27-6.18L47.27-6.18Q48.18-5.16 48.88-6.34L48.88-6.34Q50.54-8.92 52.69-13.32L52.69-13.32ZM61.07-46.03L61.07-46.03 61.45-46.3Q69.77-45.65 71.97-41.73L71.97-41.73Q73.32-39.37 71.76-37.28L71.76-37.28Q70.25-35.23 67.62-35.77L67.62-35.77Q66.55-35.99 65.47-36.68L65.47-36.68Q64.61-41.2 61.07-46.03ZM56.29-33.46L56.29-33.46 56.67-33.73Q64.67-33.35 66.82-29.59L66.82-29.59Q68.16-27.29 66.6-25.24L66.6-25.24Q65.1-23.26 62.52-23.85L62.52-23.85Q61.61-24.06 60.69-24.65L60.69-24.65Q59.89-29 56.29-33.46ZM73.91-38.08L73.91-38.08 74.77-37.87Q70.25-22.5 68.8-15.36L68.8-15.36Q68-11.6 68.05-9.78L68.05-9.78Q68.11-8.49 69.39-5.56 70.68-2.63 70.58 0.27L70.58 0.27Q70.52 2.47 69.02 3.87 67.51 5.26 65.21 5.26L65.21 5.26Q62.3 5.26 61.61 2.36L61.61 2.36Q62.47-2.04 62.36-5.67 62.25-9.29 61.23-9.99L61.23-9.99Q60-10.8 58.22-10.96L58.22-10.96 58.22-11.92 60.8-11.92Q61.28-11.92 61.5-11.98 61.71-12.03 61.98-12.27 62.25-12.51 62.52-13.11L62.52-13.11Q63.54-14.72 64.96-17.83 66.39-20.95 73.91-38.08ZM97.81-39.16L97.81-39.16 79.71-39.16Q82.29-25.94 90.02-16.38L90.02-16.38Q95.5-26.48 97.81-39.16ZM97.27-40.71L101.35-44.96 108.23-38.62Q107.74-37.71 105.76-37.49L105.76-37.49Q102.37-21.59 94.53-11.55L94.53-11.55Q100.76-5.75 109.62-1.45L109.62-1.45 109.3-0.75Q103.5-0.64 100.71 5L100.71 5Q94.05 0 89.7-6.23L89.7-6.23Q82.23 0.91 71.17 5L71.17 5 70.68 4.46Q80.19-1.5 86.74-11.06L86.74-11.06Q80.78-22.02 78.74-39.16L78.74-39.16 74.12-39.16 73.64-40.71 97.27-40.71Z" transform="translate(-1.1800000667572021, 46.779998779296875)"/></g> <!----> <!----> <!----> <!----> <!----> <!----> <!----></g></g> <g data-gra="path-slogan" fill-rule="" class="tp-slogan" fill-opacity="1" fill="#ffffff" transform="translate(32.19000053405762,68.0999984741211)"><!----> <!----> <g transform="scale(1, 1)"><g transform="scale(1)"><path d="M5.67-7.13L5.63-7.13L3.66 0L2.44 0L0.19-8.58L1.41-8.58L3.05-1.59L3.09-1.59L5.02-8.58L6.28-8.58L8.20-1.59L8.25-1.59L9.84-8.58L11.11-8.58L8.86 0L7.64 0L5.67-7.13ZM17.86-3.19L17.86-8.58L19.03-8.58L19.03-3.05Q18.89 0.05 15.52 0.14L15.52 0.14Q12.38 0.05 12.23-2.86L12.23-2.86L12.23-8.58L13.41-8.58L13.41-3.19Q13.45-0.84 15.56-0.80L15.56-0.80Q17.86-0.84 17.86-3.19L17.86-3.19ZM21.98-5.06L26.48-5.06L26.48-8.58L27.66-8.58L27.66 0L26.48 0L26.48-3.98L21.98-3.98L21.98 0L20.81 0L20.81-8.58L21.98-8.58L21.98-5.06ZM35.11 0L34.27-2.48L30.80-2.48L29.91 0L28.73 0L31.97-8.58L33.28-8.58L36.38 0L35.11 0ZM32.53-7.31L31.17-3.52L33.84-3.52L32.58-7.31L32.53-7.31ZM38.81-8.58L43.13-1.64L43.13-8.58L44.25-8.58L44.25 0L42.94 0L38.58-6.94L38.53-6.94L38.53 0L37.41 0L37.41-8.58L38.81-8.58Z" transform="translate(-0.1875, 8.578125)"/></g></g></g></g></g></g></g><mask id="54a2a05c-fa63-4f20-86bd-ec9094162b29"><g fill="white"><rect data-gra="graph-name" fill-opacity="1" x="0" y="72.0999984741211" width="128.44000244140625" height="30.72000026702881"/> <rect data-gra="graph-name" fill-opacity="1" x="0" y="10" width="128.44000244140625" height="72.0999984741211"/></g> <g fill-opacity="0" transform="translate(0,10)" fill="black"><g><rect data-gra="graph-name-bg" stroke-width="2" class="i-icon-bg" x="0" y="0" width="128.44000244140625" height="96.81812286376953"/>   </g> <g transform="translate(10,10)"><g data-gra="path-name" fill-rule="" class="tp-name" fill-opacity="1" transform="translate(0,0)"><g transform="scale(1)"><g><path d="M29.06-38.03L29.06-38.03 7.36-38.03 6.93-39.53 19.66-39.53 23.58-44.79Q27.98-41.25 30.62-38.89L30.62-38.89Q30.4-38.03 29.06-38.03ZM52.69-13.32L53.23-13.21 51.83-3.28Q54.73 2.58 52.91 4.08L52.91 4.08Q51.35 5.48 49.23 5.16 47.1 4.83 45.33 3.87 43.56 2.9 42.27 1.56L42.27 1.56Q35.77-5.37 33.09-16.54L33.09-16.54Q32.66-16.11 31.85-16.11L31.85-16.11 23.96-16.11 23.96-5.96Q25.62-6.18 34.91-7.36L34.91-7.36 34.97-6.71Q26.21-2.42 7.09 3.97L7.09 3.97Q6.5 5.05 5.42 5.32L5.42 5.32 1.18-3.33Q1.77-3.38 2.58-3.46 3.38-3.54 4.51-3.68 5.64-3.81 6.39-3.87L6.39-3.87 6.39-23.85 14.82-23.15Q14.66-22.18 13.27-21.91L13.27-21.91 13.27-4.62 16.44-5 16.44-29.17 25.73-28.36Q25.62-27.23 23.96-26.96L23.96-26.96 24.01-17.67 27.39-22.77Q30.72-19.66 32.92-17.46L32.92-17.46Q31.74-22.67 31.21-30.24L31.21-30.24 2.15-30.24 1.72-31.8 31.1-31.8Q30.72-38.51 30.72-46.78L30.72-46.78 40.82-45.82Q40.71-44.47 38.89-44.2L38.89-44.2Q38.67-36.63 38.89-31.8L38.89-31.8 41.41-31.8 45.22-36.47Q44.63-36.68 44.2-36.95L44.2-36.95Q43.45-40.61 40.44-44.15L40.44-44.15 40.82-44.42Q48.34-44.58 50.22-41.36L50.22-41.36Q51.4-39.37 49.9-37.54L49.9-37.54Q48.82-36.2 47.05-36.15L47.05-36.15Q51.72-32.66 53.55-31.15L53.55-31.15Q53.28-30.24 51.94-30.24L51.94-30.24 38.99-30.24Q39.91-13.11 47.27-6.18L47.27-6.18Q48.18-5.16 48.88-6.34L48.88-6.34Q50.54-8.92 52.69-13.32L52.69-13.32ZM61.07-46.03L61.07-46.03 61.45-46.3Q69.77-45.65 71.97-41.73L71.97-41.73Q73.32-39.37 71.76-37.28L71.76-37.28Q70.25-35.23 67.62-35.77L67.62-35.77Q66.55-35.99 65.47-36.68L65.47-36.68Q64.61-41.2 61.07-46.03ZM56.29-33.46L56.29-33.46 56.67-33.73Q64.67-33.35 66.82-29.59L66.82-29.59Q68.16-27.29 66.6-25.24L66.6-25.24Q65.1-23.26 62.52-23.85L62.52-23.85Q61.61-24.06 60.69-24.65L60.69-24.65Q59.89-29 56.29-33.46ZM73.91-38.08L73.91-38.08 74.77-37.87Q70.25-22.5 68.8-15.36L68.8-15.36Q68-11.6 68.05-9.78L68.05-9.78Q68.11-8.49 69.39-5.56 70.68-2.63 70.58 0.27L70.58 0.27Q70.52 2.47 69.02 3.87 67.51 5.26 65.21 5.26L65.21 5.26Q62.3 5.26 61.61 2.36L61.61 2.36Q62.47-2.04 62.36-5.67 62.25-9.29 61.23-9.99L61.23-9.99Q60-10.8 58.22-10.96L58.22-10.96 58.22-11.92 60.8-11.92Q61.28-11.92 61.5-11.98 61.71-12.03 61.98-12.27 62.25-12.51 62.52-13.11L62.52-13.11Q63.54-14.72 64.96-17.83 66.39-20.95 73.91-38.08ZM97.81-39.16L97.81-39.16 79.71-39.16Q82.29-25.94 90.02-16.38L90.02-16.38Q95.5-26.48 97.81-39.16ZM97.27-40.71L101.35-44.96 108.23-38.62Q107.74-37.71 105.76-37.49L105.76-37.49Q102.37-21.59 94.53-11.55L94.53-11.55Q100.76-5.75 109.62-1.45L109.62-1.45 109.3-0.75Q103.5-0.64 100.71 5L100.71 5Q94.05 0 89.7-6.23L89.7-6.23Q82.23 0.91 71.17 5L71.17 5 70.68 4.46Q80.19-1.5 86.74-11.06L86.74-11.06Q80.78-22.02 78.74-39.16L78.74-39.16 74.12-39.16 73.64-40.71 97.27-40.71Z" transform="translate(-1.1800000667572021, 46.779998779296875)"/></g>       </g></g> <g data-gra="path-slogan" fill-rule="" class="tp-slogan" fill-opacity="1" transform="translate(32.19000053405762,68.0999984741211)">  <g transform="scale(1, 1)"><g transform="scale(1)"><path d="M5.67-7.13L5.63-7.13L3.66 0L2.44 0L0.19-8.58L1.41-8.58L3.05-1.59L3.09-1.59L5.02-8.58L6.28-8.58L8.20-1.59L8.25-1.59L9.84-8.58L11.11-8.58L8.86 0L7.64 0L5.67-7.13ZM17.86-3.19L17.86-8.58L19.03-8.58L19.03-3.05Q18.89 0.05 15.52 0.14L15.52 0.14Q12.38 0.05 12.23-2.86L12.23-2.86L12.23-8.58L13.41-8.58L13.41-3.19Q13.45-0.84 15.56-0.80L15.56-0.80Q17.86-0.84 17.86-3.19L17.86-3.19ZM21.98-5.06L26.48-5.06L26.48-8.58L27.66-8.58L27.66 0L26.48 0L26.48-3.98L21.98-3.98L21.98 0L20.81 0L20.81-8.58L21.98-8.58L21.98-5.06ZM35.11 0L34.27-2.48L30.80-2.48L29.91 0L28.73 0L31.97-8.58L33.28-8.58L36.38 0L35.11 0ZM32.53-7.31L31.17-3.52L33.84-3.52L32.58-7.31L32.53-7.31ZM38.81-8.58L43.13-1.64L43.13-8.58L44.25-8.58L44.25 0L42.94 0L38.58-6.94L38.53-6.94L38.53 0L37.41 0L37.41-8.58L38.81-8.58Z" transform="translate(-0.1875, 8.578125)"/></g></g></g></g></g></mask><defs v-gra="od"/></svg></p><ul><li>2.4 重庆</li></ul><p>它是火锅之都，是夜景之王，是巴渝文化的发源地。</p><p><svg data-v-0dd9719b="" version="1.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100%" height="100%" viewbox="0 0 340.000000 250.000000" preserveaspectratio="xMidYMid meet" color-interpolation-filters="sRGB" style="margin: auto;"> <rect data-v-0dd9719b="" x="0" y="0" width="100%" height="100%" fill="#ffffff" fill-opacity="1" class="background"/>  <g data-v-0dd9719b="" fill="#133157" class="basesvg" transform="translate(116.73458862304688,91.51874923706055)"><g data-gra="path-name" fill-rule="" class="tp-name" transform="translate(0,0)"><g transform="scale(1)"><g><path d="M14.3-19.75L14.3-13.97 24.59-13.97 24.59-19.75 14.3-19.75ZM24.59-21.34L24.59-26.95 14.3-26.95 14.3-21.34 24.59-21.34ZM40.42-21.34L40.42-26.95 29.92-26.95 29.92-21.34 40.42-21.34ZM29.92-19.75L29.92-13.97 40.42-13.97 40.42-19.75 29.92-19.75ZM29.92 1.16L43.45 1.16Q43.62-3.14 48.4-3.14L48.4-3.14Q53.24-2.42 53.08 1.87L53.08 1.87Q52.85 2.75 51.54 2.75L51.54 2.75 2.42 2.75 1.93 1.16 24.59 1.16 24.59-5.12 6.71-5.12 6.21-6.71 24.59-6.71 24.59-12.38 14.3-12.38 14.3-11.28Q14.3-10.84 12.81-10.18L12.81-10.18Q11.33-9.57 9.85-9.57L9.85-9.57 9.07-9.57 9.07-28.49 24.59-28.49 24.59-33.6 3.35-33.6 2.92-35.2 24.59-35.2 24.59-39.93Q15.56-39.27 6.43-39.27L6.43-39.27 6.33-40.26Q15.46-41.09 25.63-42.84L25.63-42.84Q35.86-44.66 41.91-46.53L41.91-46.53 46.64-41.69Q45.7-40.87 43.4-41.91L43.4-41.91Q37.45-40.98 29.92-40.31L29.92-40.31 29.92-35.2 43.17-35.2Q43.4-39.05 47.91-39.05L47.91-39.05Q52.41-38.34 52.2-34.48L52.2-34.48Q51.98-33.6 50.71-33.6L50.71-33.6 29.92-33.6 29.92-28.49 39.88-28.49Q40.15-31.35 44.22-31.35L44.22-31.35Q48.29-30.03 48.02-27.17L48.02-27.17Q47.3-26.4 45.7-26.07L45.7-26.07 45.7-11.82Q45.65-11.55 44.05-10.95L44.05-10.95Q47.35-7.87 49.5-6L49.5-6Q49.28-5.12 48.02-5.12L48.02-5.12 29.92-5.12 29.92 1.16ZM40.87-6.71L43.84-10.39Q42.52-10.39 41.3-10.39L41.3-10.39 40.42-10.39 40.42-12.38 29.92-12.38 29.92-6.71 40.87-6.71ZM79.36-46.37L79.36-46.37 79.75-46.75Q86.95-46.04 88.83-42.52L88.83-42.52Q89.92-40.42 88.55-38.88L88.55-38.88Q87.12-37.29 84.86-38.45L84.86-38.45Q84.7-38.55 84.59-38.61L84.59-38.61Q83.44-42.41 79.36-46.37ZM106.97-36.35L67.65-36.35 67.65-23.54Q67.65-20.24 67.48-17.77L67.48-17.77Q67.38-15.29 66.77-11.82L66.77-11.82Q66.22-8.42 65.12-5.72L65.12-5.72Q64.08-3.08 62.09-0.22 60.12 2.64 57.31 4.84L57.31 4.84 56.59 4.34Q60.28-1.1 61.44-7.81L61.44-7.81Q62.59-14.57 62.59-23.48L62.59-23.48 62.59-37.95 99.88-37.95Q99.94-41.91 104.22-41.91L104.22-41.91Q108.52-41.2 108.46-37.23L108.46-37.23Q108.24-36.35 106.97-36.35L106.97-36.35ZM104.88-21.67L104.88-21.67 88.22-21.67Q90.47-13.8 95.81-8.74L95.81-8.74Q101.15-3.74 108.46-1.38L108.46-1.38 108.35-0.71Q104.28 0.99 103.73 4.4L103.73 4.4Q91.69-2.42 87.5-19.36L87.5-19.36Q85.41-10.78 79.97-4.79L79.97-4.79Q74.53 1.16 64.19 4.57L64.19 4.57 63.69 3.96Q72.33-0.33 76.72-6.71L76.72-6.71Q81.13-13.14 82.61-21.67L82.61-21.67 69.8-21.67 69.36-23.27 82.83-23.27Q83.55-28.11 83.44-35.04L83.44-35.04 89.27-34.27Q88.99-27.23 88.33-23.27L88.33-23.27 96.85-23.27Q97.08-27.39 101.86-27.39L101.86-27.39Q106.65-26.68 106.42-22.55L106.42-22.55Q106.2-21.67 104.88-21.67Z" transform="translate(-1.9300000667572021, 46.75)"/></g> <!----> <!----> <!----> <!----> <!----> <!----> <!----></g></g> <g data-gra="path-slogan" fill-rule="" class="tp-slogan" fill="#fcb51f" transform="translate(16.400409698486328,57.59000015258789)"><!----> <!----> <g transform="scale(1, 1)"><g transform="scale(1)"><path d="M8.06-6.05L8.06-6.05L6.94-6.05Q6.52-7.78 4.55-7.83L4.55-7.83Q1.83-7.69 1.73-4.36L1.73-4.36Q1.73-0.80 4.59-0.80L4.59-0.80Q6.56-0.84 7.03-3.19L7.03-3.19L8.16-3.19Q7.64 0.05 4.36 0.14L4.36 0.14Q0.61 0 0.52-4.31L0.52-4.31Q0.70-8.63 4.55-8.81L4.55-8.81Q7.59-8.72 8.06-6.05ZM10.69-5.06L15.19-5.06L15.19-8.58L16.36-8.58L16.36 0L15.19 0L15.19-3.98L10.69-3.98L10.69 0L9.52 0L9.52-8.58L10.69-8.58L10.69-5.06ZM24.94-4.27L24.94-4.27Q24.75-7.64 21.94-7.83L21.94-7.83Q19.08-7.69 18.94-4.27L18.94-4.27Q19.08-0.94 21.94-0.80L21.94-0.80Q24.75-0.98 24.94-4.27ZM26.11-4.27L26.11-4.27Q25.83 0 21.94 0.14L21.94 0.14Q18 0 17.72-4.27L17.72-4.27Q17.95-8.72 21.94-8.81L21.94-8.81Q25.83-8.67 26.11-4.27ZM28.88-8.58L33.19-1.64L33.19-8.58L34.31-8.58L34.31 0L33 0L28.64-6.94L28.59-6.94L28.59 0L27.47 0L27.47-8.58L28.88-8.58ZM42.52-3.61L39.89-3.61L39.89-4.59L43.64-4.59L43.64 0L42.89 0L42.61-1.08Q41.63 0.09 39.80 0.14L39.80 0.14Q38.06 0.14 37.13-0.75L37.13-0.75Q35.72-2.06 35.77-4.36L35.77-4.36Q36.09-8.63 39.84-8.81L39.84-8.81Q43.03-8.63 43.50-6L43.50-6L42.38-6Q41.91-7.78 39.80-7.83L39.80-7.83Q37.13-7.64 36.98-4.31L36.98-4.31Q36.98-0.75 39.84-0.75L39.84-0.75Q40.88-0.75 41.63-1.31L41.63-1.31Q42.56-2.06 42.52-3.61L42.52-3.61ZM50.44-1.08L49.55-1.78L50.16-2.48L51.23-1.64Q52.22-2.63 52.22-4.27L52.22-4.27Q52.03-7.64 49.22-7.83L49.22-7.83Q46.36-7.69 46.22-4.27L46.22-4.27Q46.36-0.94 49.22-0.80L49.22-0.80Q49.92-0.80 50.44-1.08L50.44-1.08ZM52.17-0.94L53.30-0.05L52.73 0.56L51.42-0.33Q50.58 0.14 49.22 0.14L49.22 0.14Q45.28 0 45-4.27L45-4.27Q45.23-8.72 49.22-8.81L49.22-8.81Q53.11-8.67 53.39-4.27L53.39-4.27Q53.34-2.20 52.17-0.94L52.17-0.94ZM54.94-8.58L56.11-8.58L56.11 0L54.94 0L54.94-8.58ZM59.48-8.58L63.80-1.64L63.80-8.58L64.92-8.58L64.92 0L63.61 0L59.25-6.94L59.20-6.94L59.20 0L58.08 0L58.08-8.58L59.48-8.58ZM73.13-3.61L70.50-3.61L70.50-4.59L74.25-4.59L74.25 0L73.50 0L73.22-1.08Q72.23 0.09 70.41 0.14L70.41 0.14Q68.67 0.14 67.73-0.75L67.73-0.75Q66.33-2.06 66.38-4.36L66.38-4.36Q66.70-8.63 70.45-8.81L70.45-8.81Q73.64-8.63 74.11-6L74.11-6L72.98-6Q72.52-7.78 70.41-7.83L70.41-7.83Q67.73-7.64 67.59-4.31L67.59-4.31Q67.59-0.75 70.45-0.75L70.45-0.75Q71.48-0.75 72.23-1.31L72.23-1.31Q73.17-2.06 73.13-3.61L73.13-3.61Z" transform="translate(-0.515625, 8.8125)"/></g></g></g></g><defs v-gra="od"/></svg></p><h2 id="📚-2023-目标总结"><a href="#📚-2023-目标总结" class="headerlink" title="📚 2023 目标总结"></a>📚 2023 目标总结</h2><h3 id="🌱-做得好的"><a href="#🌱-做得好的" class="headerlink" title="🌱 做得好的"></a>🌱 做得好的</h3><ul><li>攒米的速度超过预期。</li><li>慢慢开始接触理财知识，并且开始实践。</li><li>开始第二门外语的学习，并且取得了一定成果。英语也有所进步。</li><li>为人处世方面更加成熟。</li><li>运动量有所恢复。</li></ul><h3 id="🔧-做得不太好的"><a href="#🔧-做得不太好的" class="headerlink" title="🔧 做得不太好的"></a>🔧 做得不太好的</h3><ul><li>运动量没有恢复到 2019 年的水平。仍然还有疫苗后遗症。</li><li>英语学习没有持之以恒。2024 没了试用期压力后，预计会有更好的投入。</li><li>并未参与任何开源项目。</li><li>因为失去个人电脑，所以不方便进行知识积淀。导致积累没有变多。</li><li>看番剧、看书没有以前多了。</li></ul><h2 id="🚀-2024-目标"><a href="#🚀-2024-目标" class="headerlink" title="🚀 2024 目标"></a>🚀 2024 目标</h2><ul><li>努力恢复运动量水平</li><li>继续攒米，理财收益率 4%+</li><li>日语考试通过 N2，让自己真正意义上能读懂，能使用第二种语言。不让自己的知识水平局限于半吊子。</li><li>完成一门国外的计算机课程（任意都行，暂定 6.824）。</li></ul><h2 id="🌈-ONE-MORE-THING"><a href="#🌈-ONE-MORE-THING" class="headerlink" title="🌈 ONE MORE THING"></a>🌈 ONE MORE THING</h2><p>最后分享一首我今年很喜欢的诗歌。</p><p><strong>Do not go gentle into that good night</strong>.</p><p>Dylan Thomas, 1914–1953</p><p>Do not go gentle into that good night,<br>Old age should burn and rave at close of day;<br>Rage, rage against the dying of the light.</p><p>Though wise men at their end know dark is right,<br>Because their words had forked no lightning they<br>Do not go gentle into that good night.</p><p>Good men, the last wave by, crying how bright<br>Their frail deeds might have danced in a green bay,<br>Rage, rage against the dying of the light.</p><p>Wild men who caught and sang the sun in flight,<br>And learn, too late, they grieved it on its way,<br>Do not go gentle into that good night.</p><p>Grave men, near death, who see with blinding sight<br>Blind eyes could blaze like meteors and be gay,<br>Rage, rage against the dying of the light.</p><p>And you, my father, there on the sad height,<br>Curse, bless, me now with your fierce tears, I pray.<br>Do not go gentle into that good night.<br>Rage, rage against the dying of the light.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="碎碎念" scheme="https://blog.pengdonglai.com/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
    <category term="碎碎念" scheme="https://blog.pengdonglai.com/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>How to create a CLI program using Node.js</title>
    <link href="https://blog.pengdonglai.com/2023/11/09/create-a-cli/"/>
    <id>https://blog.pengdonglai.com/2023/11/09/create-a-cli/</id>
    <published>2023-11-09T04:44:19.000Z</published>
    <updated>2024-06-03T17:04:59.286Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="导引"><a href="#导引" class="headerlink" title="导引"></a>导引</h2><p>这一篇博客主要收到了 YouTuber Fireship 的5分钟编程系列的如何快速使用 Node.js 写出一个 cli 程序的启发。正好工作之中也用到了，所以就此沉淀一篇文章，以防这个技能后面丢了。在这篇博客中，第一个部分我会还原我会尽量保持原视频的思路，然后删除一些可有可无的部分，作为二次加工，这样子吸收知识的效率会增加。之后我会来写深入的部分。</p><p>废话不多说，让我们进入正题。</p><p>The one thing that makes developers different than the common people out there is the command line the moment someone opens up a terminal and types out their first command. They’re instantly transformed into a jedi hacker.</p><p>[…some text is omitted here]</p><p>I realize that people will bash me for not using bash in this video but the <strong>node.js ecosystem</strong> has all kinds of awesome tools that can help you build an over-the-top command line tool that’ll make people think you’re some kind of coding wizard.</p><h2 id="练手程序1"><a href="#练手程序1" class="headerlink" title="练手程序1"></a>练手程序1</h2><p>通过这个程序我们会掌握基本编写 cli 的工具，以及对 cli 工具做出一些美化。</p><p>Let’s first take a look at what we’re building today. We have a command line tool that <strong>animates the text</strong> who wants to be a javascript millionaire then it will prompt you to <strong>enter your name</strong>. After that it goes through a series of multiple choice questions when you enter an answer it will show a <strong>loading spinner</strong>. If you get it right it will continue. But if you get it wrong it will <strong>exit the command line script and call you a loser</strong>. If you make it all the way to the end, you win it will <strong>show you some ascii text with a color gradient</strong> and a message.</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> chalk <span class="token keyword">from</span> <span class="token string">'chalk'</span><span class="token punctuation">;</span><span class="token keyword">import</span> inquirer <span class="token keyword">from</span> <span class="token string">'inquirer'</span><span class="token punctuation">;</span><span class="token keyword">import</span> gradient <span class="token keyword">from</span> <span class="token string">'gradient-string'</span><span class="token punctuation">;</span><span class="token keyword">import</span> chalkAnimation <span class="token keyword">from</span> <span class="token string">'chalk-animation'</span> <span class="token keyword">import</span> figlet <span class="token keyword">from</span> <span class="token string">'figlet'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> createSpinner <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'nanospinner'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>[…some text is omitted here]</p><p>需要导入的内容是以上这些，之后直接用 chalk 就可以给文字添加各种各样的样式啦！</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">bgGreen</span><span class="token punctuation">(</span><span class="token string">'hi mon!'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Running node index.js or just node period and the result should be the <strong>highlighted text colored text</strong> is cool, but what’s even better is animated colored text a package that builds on top of chalk called chalk animation allows us to easily create a rainbow animation and a bunch of others as well.</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">import</span> chalk <span class="token keyword">from</span> <span class="token string">'chalk'</span><span class="token punctuation">;</span><span class="token keyword">const</span> log <span class="token operator">=</span> console<span class="token punctuation">.</span>log<span class="token punctuation">;</span><span class="token comment">// Combine styled and normal strings</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">blue</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' World'</span> <span class="token operator">+</span> chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token string">'!'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Compose multiple styles using the chainable API</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span>blue<span class="token punctuation">.</span>bgRed<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token string">'Hello world!'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Pass in multiple arguments</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">blue</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">,</span> <span class="token string">'World!'</span><span class="token punctuation">,</span> <span class="token string">'Foo'</span><span class="token punctuation">,</span> <span class="token string">'bar'</span><span class="token punctuation">,</span> <span class="token string">'biz'</span><span class="token punctuation">,</span> <span class="token string">'baz'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Nest styles</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">,</span> chalk<span class="token punctuation">.</span>underline<span class="token punctuation">.</span><span class="token function">bgBlue</span><span class="token punctuation">(</span><span class="token string">'world'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'!'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Nest styles of the same type even (color, underline, background)</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span>  <span class="token string">'I am a green line '</span> <span class="token operator">+</span>  chalk<span class="token punctuation">.</span>blue<span class="token punctuation">.</span>underline<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token string">'with a blue substring'</span><span class="token punctuation">)</span> <span class="token operator">+</span>  <span class="token string">' that becomes green again!'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// ES2015 template literal</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">CPU: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token string">'90%'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">RAM: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token string">'40%'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">DISK: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>chalk<span class="token punctuation">.</span><span class="token function">yellow</span><span class="token punctuation">(</span><span class="token string">'70%'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Use RGB colors in terminal emulators that support it.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">underline</span><span class="token punctuation">(</span><span class="token string">'Underlined reddish color'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">hex</span><span class="token punctuation">(</span><span class="token string">'#DEADED'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token string">'Bold gray!'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>In the code here i’m creating a global variable for the player name then an async function called welcome the welcome screen will animate the text who wants to be a javascript millionaire. Now in the terminal we can only do one thing at a time and to display an animation we’ll need a couple of seconds to show it to the user to handle that.</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> playerName<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">sleep</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">ms <span class="token operator">=</span> <span class="token number">2000</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">welcome</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> rainbowTitle <span class="token operator">=</span> chalkAnimation<span class="token punctuation">.</span><span class="token function">rainbow</span><span class="token punctuation">(</span><span class="token string">'Who Wants To Be A JavaScript Millionaire? \n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rainbowTitle<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>chalk<span class="token punctuation">.</span><span class="token function">bgBlue</span><span class="token punctuation">(</span><span class="token string">'HOW TO PLAY'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">    I am a process on your computer.    If you get any question wrong I will be </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>chalk<span class="token punctuation">.</span><span class="token function">bgRed</span><span class="token punctuation">(</span><span class="token string">'killed'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">    So get all the questions right...  </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">await</span> <span class="token function">welcome</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Now we’re going to take a look at another very popular library used in many command line tools called <strong>inquirer</strong>, its job is to collect user input and has a variety of different ways for doing so to collect the user’s name. We’ll first create an inquirer prompt which can be customized with a variety of different options. You’ll first give the data a name and then the type specifies how that information should be collected an input is like a form that the user can type into. You can also do things like validate the input or provide a default value.</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">askName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">const</span> answers <span class="token operator">=</span> <span class="token keyword">await</span> inquirer<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'player_name'</span><span class="token punctuation">,</span>  <span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">'input'</span><span class="token punctuation">,</span>  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'What is your name?'</span><span class="token punctuation">,</span>  <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token string">'Player'</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>playerName <span class="token operator">=</span> answers<span class="token punctuation">.</span>player_name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>The next thing we’ll do is use inquirer to create multiple choice questions for the quiz this function will work in almost the exact same way. The only difference is that instead of an input we’re now using a list which has multiple choices to choose from. Now we’ll need to handle the ui differently based on whether or not the user selects the correct option.</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">question1</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> answers <span class="token operator">=</span> <span class="token keyword">await</span> inquirer<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'question_1'</span><span class="token punctuation">,</span>    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'list'</span><span class="token punctuation">,</span>    <span class="token literal-property property">message</span><span class="token operator">:</span> 'JavaScript was created <span class="token keyword">in</span> <span class="token number">10</span> days thenreleased on\'<span class="token punctuation">,</span>    <span class="token literal-property property">choices</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">'May 23rd, 1995'</span><span class="token punctuation">,</span>      <span class="token string">'Nov 24th, 1995'</span><span class="token punctuation">,</span>      <span class="token string">'Dec 4th, 1995'</span><span class="token punctuation">,</span>      <span class="token string">'Dec 17, 1996'</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">handleAnswer</span><span class="token punctuation">(</span>answers<span class="token punctuation">.</span>question_1 <span class="token operator">===</span> <span class="token string">'Nov 24th, 1995'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>…Called handle answer that takes a boolean as its argument. Inside the function we’ll create a <strong>loading spinner</strong> with a package called nanospinner that will run for 2 seconds while checking the answer if the answer is correct. Then we can say spin or success and move on to the next question otherwise we’re going to say spin or error and then call process exit with an argument of 1. <strong>When a process exits it usually has a code of 0 or 1. 1 means that it exited with errors 0 means everything was fine.</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> handleAnswer <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>isCorrect<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">const</span> spinner <span class="token operator">=</span> <span class="token function">createSpinner</span><span class="token punctuation">(</span><span class="token string">'Checking answer...'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>isCorrect<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  spinner<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Nice work </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>playerName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">. That's a legit answer</span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  spinner<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">text</span><span class="token operator">:</span>  <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Game over, you lose </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>playerName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">!</span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Let’s go ahead and run that function and you should get a multiple choice question that when answered correctly will give you a green check mark and when answered incorrectly we’ll give you a red x.</p><p>Now all the other questions are implemented in the exact same way so now let’s implement the screen for the winner. The function will clear the console’s current output and then format a message called congrats player name. Here’s a million dollars we’ll then pass the message on to <strong>figlet which is actually a javascript implementation of a popular program implemented in the c language</strong> what it does is generate ascii art from text which is really useful for making your non-programmer friends think you’re some kind of genius on top of that.</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">winner</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Congrats , </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>playerName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> !\n $ 1 , 0 0 0 , 0 0 0</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token function">figlet</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gradient<span class="token punctuation">.</span>pastel<span class="token punctuation">.</span><span class="token function">multiline</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/11/09/create-a-cli/1.png"></div><p>It look even more spectacular using the gradient string package. It’s kind of like chalk but instead of a plain color it creates a color gradient. And now we can await each step in the process for a complete command line tool it may seem trivial but knowing how to build your own cli tool can be extremely useful for productivity.</p><p>最后排列组合几个代码段，就大功告成了。当然，问题得自己设计好，不然的话可就太没挑战性了。</p><p>最后来张二次元，表示第一部分写完了！</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/11/09/create-a-cli/2.jpeg"></div><h2 id="练手程序2"><a href="#练手程序2" class="headerlink" title="练手程序2"></a>练手程序2</h2><p>我们现在已经有了一个可以跑起来的程序，但是只做这些是没有用处的。CLI 最重要的职责还是方便的帮我们完成自动化的操作。</p><p>例如，我们开发一个 web 页面，需要用到最多的工具是 Live Server。平时我们经常使用 <code>pnpm dev</code> 现在我们想让 <code>pnpm dev</code> 启动 <code>webpack</code> 或者 <code>esbuild</code> 的时候，同时启动 <code>live-server</code>，就需要用到多线程的知识了。</p><p>进程和线程的主要差别在于它们是不同的操作系统资源管理方式。进程有独立的地址空间，一个进程崩溃后，在保护模式下不会对其它进程产生影响，而线程只是一个进程中的不同执行路径。线程有自己的堆栈和局部变量，但线程之间没有单独的地址空间，一个线程死掉就等于整个进程死掉，所以多进程的程序要比多线程的程序健壮，但在进程切换时，耗费资源较大，效率要差一些。但对于一些要求同时进行并且又要共享某些变量的并发操作，只能用线程，不能用进程。</p><ol><li><p>简而言之，一个程序至少有一个进程，一个进程至少有一个线程。</p></li><li><p>线程的划分尺度小于进程，使得多线程程序的并发性高。</p></li><li><p>另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。</p></li><li><p>线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。</p></li><li><p>从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。</p></li></ol><p>JavaScript 是<strong>单线程</strong>语言，代表着一个 JS 进程程序只能拥有一个线程。所以在 Node.js 使用多线程，本质上是单独开辟了一个新进程，进程下有其他线程。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  process<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'testNodeJS'</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">process.pid: </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> process<span class="token punctuation">.</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用 <code>http.createServer()</code> 可以创建一个服务器进程，这个时候就可以通过 <code>console.log</code> 看到这个进程出现了。</p><p>Node.js 中的进程 process 是全局对象可以直接访问，下面是一些常用的功能：</p><ul><li><code>process.env</code>：环境变量，例如通过 <code>process.env.NODE_ENV</code> 获取不同环境项目配置信息。</li><li><code>process.nextTick</code>：这个在谈及 Event Loop 时经常为会提到，简单的来说它是用来执行异步操作的，执行顺序在promise.then之前，主任务之后。而在浏览器端，nextTick 会退化成 <code>setTimeout(callback, 0)</code>.</li><li><code>process.pid</code>：获取当前进程 id。</li><li><code>process.ppid</code>：当前进程对应的父进程。</li><li><code>process.cwd()</code>：获取当前进程工作目录。</li><li><code>process.platform</code>：获取当前进程运行的操作系统平台。</li><li><code>process.uptime()</code>：当前进程已运行时间，例如：pm2 守护进程的 uptime 值。</li><li>进程事件：<code>process.on(&#39;uncaughtException&#39;, cb)</code> 捕获异常信息、<code>process.on(&#39;exit&#39;, cb)</code> 进程推出监听。</li><li>三个标准流：<code>process.stdout</code> 标准输出、<code>process.stdin</code> 标准输入、<code>process.stderr</code> 标准错误输出。</li></ul><p><code>node:child_process</code> 模块提供了以与 popen(3) 类似但不完全相同的方式衍生子进程的能力。 此功能主要由 <code>child_process.spawn()</code> 函数提供：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> spawn <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node:child_process'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> ls <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'-lh'</span><span class="token punctuation">,</span> <span class="token string">'/usr'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ls<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">stdout: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ls<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">stderr: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ls<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'close'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">child process exited with code </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>code<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>默认情况下，会在父 Node.js 进程和衍生的子进程之间建立 <code>stdin</code>、<code>stdout</code> 和 <code>stderr</code> 的管道。 这些管道的容量有限（且特定于平台）。 如果子进程在没有捕获输出的情况下写入标准输出超过该限制，则子进程会阻塞等待管道缓冲区接受更多数据。 这与 shell 中管道的行为相同。 如果不消费输出，则使用 <code>&#123; stdio: &#39;ignore&#39; &#125;</code> 选项。</p><p>为方便起见，<code>node:child_process</code> 模块提供了一些同步和异步方法替代 <code>child_process.spawn()</code> 和 <code>child_process.spawnSync()</code>。 这些替代方法中的每一个都是基于 <code>child_process.spawn()</code> 或 <code>child_process.spawnSync()</code> 实现。</p><ul><li><code>child_process.exec()</code>: 衍生 shell 并在该 shell 中运行命令，完成后将 stdout 和 stderr 传给回调函数。</li><li><code>child_process.execFile()</code>: 与 <code>child_process.exec()</code> 类似，不同之处在于，默认情况下，它直接衍生命令，而不先衍生 shell。</li><li><code>child_process.fork()</code>: 衍生新的 Node.js 进程并使用建立的 IPC 通信通道（其允许在父子进程之间发送消息）调用指定的模块。</li><li><code>child_process.execSync()</code>: <code>child_process.exec()</code> 的同步版本，其将阻塞 Node.js 事件循环。</li><li><code>child_process.execFileSync()</code>: <code>child_process.execFile()</code> 的同步版本，其将阻塞 Node.js 事件循环。</li></ul><p>所以我们重写 <code>pnpm dev</code> 的时候，完全可以通过直接开一个子进程的方式运行 <code>http-server</code> 或者 <code>live-server</code>.</p><p>以下是 fork() 和 spawn() 之间的区别：</p><table><thead><tr><th><p style="text-align:center;">Spawn</p></th><th><p style="text-align:center;">Fork</p></th></tr></thead><tbody><tr><td>This starts sending data back to a parent process from the child process as soon as the child process starts executing.</td><td>This does not send data automatically, but we can use a global module name process to send data from the child process and in the parent module, using the name of the child the process to send to the child process.</td></tr><tr><td>It creates a new process through command rather than running on the same node process.</td><td>It makes several individual processes (child processes) but all of them run on the same node process as the parent.</td></tr><tr><td>In this, no new V8 instance is created.</td><td>In this, a new V8 instance is created.</td></tr><tr><td>It is used when we want the child process to return a large amount of data back to the parent process.</td><td>It is used to separate computation-intensive tasks from the main event loop.</td></tr></tbody></table><p>以下是建立一个子进程的方式，通过 spawn 方法来实现。并且用过 pipe 方法让子进程的 stdout 和主进程的 stdout 相连接。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> spawn <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建一个子进程，展示当前目录所有文件，cwd 指定子进程的工作目录，默认当前目录</span><span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'-l'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">cwd</span><span class="token operator">:</span> <span class="token string">'/xxx'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 让子进程的 stdio 和当前进程的 stdio 之间建立管道链接</span>child<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>pid<span class="token punctuation">,</span> child<span class="token punctuation">.</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>让我们继续，看一个例子。这个例子中父子进程之间相互通信。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 父进程代码</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> fork <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建子进程</span><span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token string">'child.js'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 监听子进程发送的消息</span>child<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span> <span class="token parameter">message</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>pid<span class="token punctuation">,</span> child<span class="token punctuation">.</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'父进程接收到消息:'</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 向子进程发送消息</span>child<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Hello from parent!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 子进程代码</span>process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span> <span class="token parameter">message</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 这里的 process 等同于上述的 child.pid</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'子进程接收到消息:'</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 向父进程发送消息</span>  process<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Hello from child!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>需要注意的是，父进程和子进程之间的通信是异步的。父进程发送消息后，不会阻塞等待子进程的响应，而是继续执行后续的代码。类似地，子进程发送消息后，也不会阻塞等待父进程的响应。</p></blockquote><p>通过这个示例，我们可以做到父子进程通信，这意味着我们的程序可以进一步完善了：当 <code>webpack</code> 或者 <code>esbuild</code> 主进程完成打包的时候，这个时候如果没有出错，我们完全可以执行 <code>console.clear()</code> 方法降低无效信息的密度，进而降低心智负担。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/11/09/create-a-cli/3.jpeg"></div><h2 id="练手程序3"><a href="#练手程序3" class="headerlink" title="练手程序3"></a>练手程序3</h2><p>我们或许可以通过很多种方法来实现网络编程，但是应用层之上，存在不止一种协议。但是平时我们基本上只写 http 相关协议，对于其它的协议我们知之甚少。</p><h3 id="HTTP（超文本传输协议）："><a href="#HTTP（超文本传输协议）：" class="headerlink" title="HTTP（超文本传输协议）："></a>HTTP（超文本传输协议）：</h3><p>Node.js 提供了 http 模块用于创建 HTTP 服务器和客户端。可以使用 <code>http.createServer</code> 方法创建一个 HTTP 服务器，监听指定的端口，并对请求进行处理。同时，也可以使用 http.request 方法创建一个 HTTP 客户端，向其他服务器发送 HTTP 请求并获取响应。<br>通过 <code>http.createServer</code> 创建的服务器可以监听客户端的请求，并根据请求的路径和方法（GET、POST 等）做出相应的处理。我们可以编写回调函数来处理请求并发送响应，或者使用其他框架（如 Express.js）来简化处理过程。</p><p>以下是一个 http 服务端和客户端示例：</p><p>服务端</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">,</span> <span class="token string">'text/plain'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'Hello, World!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'HTTP server listening on port 3000'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>客户端</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">'www.example.com'</span><span class="token punctuation">,</span>  <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'GET'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> req <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Status code: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>res<span class="token punctuation">.</span>statusCode<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>req<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="HTTPS（安全的超文本传输协议）："><a href="#HTTPS（安全的超文本传输协议）：" class="headerlink" title="HTTPS（安全的超文本传输协议）："></a>HTTPS（安全的超文本传输协议）：</h3><p>Node.js 提供了 https 模块用于创建 HTTPS 服务器和客户端。与 HTTP 类似，我们可以使用 <code>https.createServer</code> 方法创建一个 HTTPS 服务器，并使用 <code>https.request</code> 方法创建一个 HTTPS 客户端。<br>HTTPS 在传输过程中使用 SSL&#x2F;TLS 加密，提供了更高的安全性。为了使用 HTTPS，你需要为服务器配置 SSL 证书。可以使用自签名证书进行开发和测试，但在生产环境中，建议使用可信任的证书机构签发的证书。</p><p>服务端</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> https <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'https'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">key</span><span class="token operator">:</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">'private.key'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token literal-property property">cert</span><span class="token operator">:</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">'certificate.crt'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> server <span class="token operator">=</span> https<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">,</span> <span class="token string">'text/plain'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'Hello, World!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">443</span><span class="token punctuation">,</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'HTTPS server listening on port 443'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>客户端</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> https <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'https'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">'www.example.com'</span><span class="token punctuation">,</span>  <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">443</span><span class="token punctuation">,</span>  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'GET'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> req <span class="token operator">=</span> https<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Status code: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>res<span class="token punctuation">.</span>statusCode<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>req<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="FTP（文件传输协议）："><a href="#FTP（文件传输协议）：" class="headerlink" title="FTP（文件传输协议）："></a>FTP（文件传输协议）：</h3><p>在 Node.js 中，可以使用第三方模块（如 ftp、ftps 等）来实现 FTP 协议。这些模块提供了用于创建 FTP 客户端的 API，使你能够连接到 FTP 服务器并执行文件的上传、下载、删除等操作。你可以使用这些模块来与远程 FTP 服务器进行文件传输。</p><p>使用 Node.js 进行 FTP 文件上传操作：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> ftp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'ftp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ftp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'ready'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Connected to FTP server'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 上传文件</span>  <span class="token keyword">const</span> fileStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">'local-file.txt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  client<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>fileStream<span class="token punctuation">,</span> <span class="token string">'remote-file.txt'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Error uploading file:'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'File uploaded successfully'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 断开 FTP 连接</span>    client<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'FTP error:'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 连接到 FTP 服务器</span>client<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">'ftp.example.com'</span><span class="token punctuation">,</span>  <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">'username'</span><span class="token punctuation">,</span>  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">'password'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下载文件：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> ftp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'ftp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ftp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'ready'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Connected to FTP server'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 下载文件</span>  client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'remote-file.txt'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stream</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Error downloading file:'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> localFileStream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">'local-file.txt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      stream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>localFileStream<span class="token punctuation">)</span><span class="token punctuation">;</span>      localFileStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'close'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'File downloaded successfully'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        client<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'FTP error:'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 连接到 FTP 服务器</span>client<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">'ftp.example.com'</span><span class="token punctuation">,</span>  <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">'username'</span><span class="token punctuation">,</span>  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">'password'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="TCP（传输控制协议）："><a href="#TCP（传输控制协议）：" class="headerlink" title="TCP（传输控制协议）："></a>TCP（传输控制协议）：</h3><p>Node.js 的核心模块 net 提供了创建 TCP 服务器和客户端的 API。你可以使用 <code>net.createServer</code> 方法创建一个 TCP 服务器，并使用 <code>net.createConnection</code> 方法创建一个 TCP 客户端。<br>TCP 提供面向连接的可靠通信，适用于需要数据完整性和可靠性的场景。使用 TCP，你可以建立一个持久的连接，进行双向的数据传输。</p><p><strong>实际上，http 基于 TCP 实现</strong>，所以 TCP 完全就是 http 的实现。</p><h3 id="UDP（用户数据报协议）："><a href="#UDP（用户数据报协议）：" class="headerlink" title="UDP（用户数据报协议）："></a>UDP（用户数据报协议）：</h3><p>Node.js 的核心模块 <code>dgram</code> 提供了创建 UDP 服务器和客户端的 API。可以使用 <code>dgram.createSocket</code> 方法创建一个 UDP 服务器或客户端。<br>UDP 是面向无连接的协议，不提供可靠性和顺序保证。它更适合于实时性要求较高、对数据可靠性要求不高的场景，如音频、视频流等。</p><p>服务器：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> dgram <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'dgram'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> server <span class="token operator">=</span> dgram<span class="token punctuation">.</span><span class="token function">createSocket</span><span class="token punctuation">(</span><span class="token string">'udp4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'listening'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> address <span class="token operator">=</span> server<span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">UDP server listening on </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>address<span class="token punctuation">.</span>address<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>address<span class="token punctuation">.</span>port<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">msg<span class="token punctuation">,</span> rinfo</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Received message: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>msg<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> from </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>rinfo<span class="token punctuation">.</span>address<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>rinfo<span class="token punctuation">.</span>port<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">server</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token string">'localhost'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这两段代码中，</p><p>UDP 服务器通过 server.on(‘message’, …) 事件监听器来接收客户端发送的消息，并在控制台上打印收到的消息以及发送方的地址和端口。</p><p>UDP 客户端通过 client.send(…) 方法发送消息到指定的服务器地址和端口，然后通过回调函数来处理发送的结果。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> dgram <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'dgram'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> client <span class="token operator">=</span> dgram<span class="token punctuation">.</span><span class="token function">createSocket</span><span class="token punctuation">(</span><span class="token string">'udp4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> message <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">'Hello, UDP server!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>client<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Error sending message:'</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Message sent to UDP server'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  client<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>UDP 需要考虑的问题还有很多，比如处理修饰的数据包、乱序数据包和其他网络问题需要一些额外的逻辑来处理。我们编写一个单独的函数来处理这些问题。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 处理修饰的数据包和乱序数据包</span><span class="token keyword">function</span> <span class="token function">processPacket</span><span class="token punctuation">(</span><span class="token parameter">packet</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 在这里添加你的处理逻辑</span>    <span class="token comment">// 例如，假设数据包有一个序列号字段 seqNumber</span>  <span class="token keyword">const</span> expectedSeqNumber <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 期望的下一个序列号</span>  <span class="token keyword">const</span> seqNumber <span class="token operator">=</span> packet<span class="token punctuation">.</span>seqNumber<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>seqNumber <span class="token operator">===</span> expectedSeqNumber<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 处理正常顺序的数据包</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Received packet in correct order:'</span><span class="token punctuation">,</span> packet<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 更新下一个期望的序列号</span>    expectedSeqNumber<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token comment">// 处理数据包的其他操作...</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>seqNumber <span class="token operator">&lt;</span> expectedSeqNumber<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 处理修饰的数据包（重复收到的数据包）</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Received duplicate packet:'</span><span class="token punctuation">,</span> packet<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 忽略重复的数据包或进行其他处理...</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 处理乱序数据包</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Received out-of-order packet:'</span><span class="token punctuation">,</span> packet<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 缓存乱序数据包，等待后续的数据包到达...</span>  <span class="token punctuation">&#125;</span>    <span class="token comment">// 其他网络问题的处理逻辑...</span><span class="token punctuation">&#125;</span><span class="token comment">// 示例数据包</span><span class="token keyword">const</span> packet1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">seqNumber</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token string">'Packet 0'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> packet2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">seqNumber</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token string">'Packet 1'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> packet3 <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">seqNumber</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token string">'Packet 2'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 模拟接收数据包的顺序</span><span class="token function">processPacket</span><span class="token punctuation">(</span>packet1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">processPacket</span><span class="token punctuation">(</span>packet3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">processPacket</span><span class="token punctuation">(</span>packet2<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>processPacket</code> 函数用于处理接收到的数据包。它通过比较数据包的序列号与期望的序列号来判断数据包的状态。如果序列号与期望的序列号相等，则处理正常顺序的数据包；如果序列号小于期望的序列号，则处理修饰的数据包（重复数据包）；如果序列号大于期望的序列号，则处理乱序数据包。</p><h3 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h3><p>客户端频繁发起请求。WebSocket 协议建立在 HTTP 协议之上，使用类似握手的过程进行连接建立，并使用自定义的帧格式来传输数据。</p><p>下面是 WebSocket 的一些关键特点和工作原理的详细介绍：</p><ul><li><p>持久连接: 与传统的 HTTP 请求-响应模式不同，WebSocket 连接在客户端和服务器之间建立一次后，保持持久化连接，允许双向通信。这消除了每次通信都需要重新建立连接的开销。</p></li><li><p>全双工通信: WebSocket 允许客户端和服务器同时进行双向通信，可以在任一方向上发送和接收数据。这使得服务器能够实时地向客户端推送数据，而不需要客户端明确地发出请求。</p></li><li><p>低延迟: WebSocket 的持久连接和全双工通信特性使得数据传输更加实时和即时响应。相比于传统的轮询或长轮询方式，WebSocket 可以更快地传递数据，并降低延迟。</p></li><li><p>跨域支持: WebSocket 支持跨域通信，使得客户端可以与不同域名的服务器进行通信，而不受同源策略的限制。</p></li><li><p>安全性: WebSocket 可以通过加密协议（如 TLS&#x2F;SSL）进行安全连接，确保数据的机密性和完整性。</p></li></ul><p>我们用一段代码写清楚 WebSocket 是如何运行的：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> socket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">'ws://example.com/socket'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>socket<span class="token punctuation">.</span><span class="token function-variable function">onopen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'WebSocket connection established'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 在连接建立后，可以发送消息到服务器</span>  socket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Hello, server!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>socket<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> message <span class="token operator">=</span> event<span class="token punctuation">.</span>data<span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Received message from server:'</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>socket<span class="token punctuation">.</span><span class="token function-variable function">onclose</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'WebSocket connection closed'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>socket<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'WebSocket error:'</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>客户端使用 new WebSocket(url) 创建一个 WebSocket 连接，并通过事件处理程序处理连接建立、接收消息、连接关闭和错误等事件。通过 socket.send(message) 可以向服务器发送消息。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> WebSocket <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'ws'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建 WebSocket 服务器</span><span class="token keyword">const</span> wss <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket<span class="token punctuation">.</span>Server</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">8080</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 监听连接事件</span>wss<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'connection'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ws</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'WebSocket connection established.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 接收客户端发送的消息</span>  ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'message'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Received message from client:'</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 向客户端发送消息</span>    ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'Hello, client!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 监听连接关闭事件</span>  ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'close'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'WebSocket connection closed.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>类似的，服务端使用 <code>on</code> <code>send</code> 方法保持监听和向客户端传输数据。</p><p>那么，练手程序3——完成一个每分钟自动获取当前港币兑换人民币的程序，是不是就变得容易了呢？我们这里使用常用的 <code>axios</code> 实现。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'axios'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 定义函数获取汇率</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getExchangeRate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 向外部 API 发送请求获取汇率数据</span>    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'https://api.exchangerate-api.com/v4/latest/HKD'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 解析响应数据</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> rates <span class="token punctuation">&#125;</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">;</span>    <span class="token keyword">const</span> cnyRate <span class="token operator">=</span> rates<span class="token punctuation">.</span><span class="token constant">CNY</span><span class="token punctuation">;</span>    <span class="token comment">// 输出汇率信息</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">当前港币兑换人民币汇率为: 1 HKD = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>cnyRate<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> CNY</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'获取汇率失败:'</span><span class="token punctuation">,</span> error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 每分钟获取汇率</span><span class="token function">setInterval</span><span class="token punctuation">(</span>getExchangeRate<span class="token punctuation">,</span> <span class="token number">60000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如何，你学会了吗？是不是很容易呢？</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/11/09/create-a-cli/4.jpeg"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="技术总结" scheme="https://blog.pengdonglai.com/categories/%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="Node.js" scheme="https://blog.pengdonglai.com/tags/Node-js/"/>
    
    <category term="JavaScript" scheme="https://blog.pengdonglai.com/tags/JavaScript/"/>
    
    <category term="CLI" scheme="https://blog.pengdonglai.com/tags/CLI/"/>
    
    <category term="命令行" scheme="https://blog.pengdonglai.com/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>雅思写作沉淀（1）——Task2理念篇</title>
    <link href="https://blog.pengdonglai.com/2023/10/29/ielts-writing-1/"/>
    <id>https://blog.pengdonglai.com/2023/10/29/ielts-writing-1/</id>
    <published>2023-10-29T02:25:18.000Z</published>
    <updated>2024-06-03T17:04:59.399Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文总结自 bilibili Up 主 Vince9120。<a href="%5Bhttps://www.bilibili.com/video/BV145411a7ST?p=4&vd_source=afe81fa0acec03a62c58fe0fc394ca5b%5D(https://www.bilibili.com/video/BV145411a7ST?p=4&vd_source=afe81fa0acec03a62c58fe0fc394ca5b)">视频链接</a></p><p>欢迎来到海星来来的博客！本篇博客文章会对雅思写作 Part2 部分的内容做一个综述和讲解。首先，我们会形成一个总体印象，大概了解到考试内容到底考什么，对题型有一个大概的了解。之后，我们会了解下，什么样的文章是真的好，考官愿意给到高分，我们会有一个方向去努力。之后就是对考试心智的讲解——首先是整体心智的讲解，既写什么，怎么写。之后，对于文章划分的五层结构，每一层结构都给到了仔细的讲解和对应的范文，我们可以从其中学习或者复习其中的写作思路。</p><p>理念之后离不开实践，之后的沉淀文章应该会以实践篇为主，记录写作的点滴进步。</p><h2 id="常考题型总结-Intro"><a href="#常考题型总结-Intro" class="headerlink" title="常考题型总结 Intro"></a>常考题型总结 Intro</h2><p>以下总结了考试的几种分类。一般来说，可以分为 opinion 和 analysis 两种大类。其中 opinion 类考的最多，这其中一般都是两种观点之间的碰撞，需要写一篇文章来论述这两种不同的观点。</p><ul><li><p>Group 1: Opinion</p><ul><li>Agree &#x2F; disagree</li><li>Discuss both views</li><li>Positive or negative development?</li><li>Advantage outweigh disadvantage?</li></ul></li><li><p>Group 2: Analysis</p><ul><li>Problems &#x2F; Causes &#x2F; Reasons and Solutions</li></ul></li><li><p>九分要求全面回答问题并拓展文章；</p></li><li><p>七分作文回答问题，但有生硬感，五分作文缺乏结构和语法错误；</p></li></ul><h2 id="有效的文章结构-Structure"><a href="#有效的文章结构-Structure" class="headerlink" title="有效的文章结构 Structure"></a>有效的文章结构 Structure</h2><p>一般来说，一篇优秀的作文，它应该首先满足两个需求：字数需求和完成命题。对于议论文来说，五段式写作是一种用得不多，但是很有效的 mindset.</p><h3 id="关于字数"><a href="#关于字数" class="headerlink" title="关于字数"></a>关于字数</h3><p>对于目标 7 分以上，写作最好有 400 字左右。</p><h3 id="关于写作的思路：五段式写作"><a href="#关于写作的思路：五段式写作" class="headerlink" title="关于写作的思路：五段式写作"></a>关于写作的思路：五段式写作</h3><ol><li>The Beginning</li><li>Point 1 + Reasoning</li><li>Point 2 + Exemplification</li><li>Point 3 + Concession</li><li>The End</li></ol><p><strong>切记，不要直白的罗列观点，这样是最忌讳的。一般称之为 Listing.</strong></p><h3 id="一篇符合五段式写作的范文"><a href="#一篇符合五段式写作的范文" class="headerlink" title="一篇符合五段式写作的范文"></a>一篇符合五段式写作的范文</h3><table><thead><tr><th>The Structure</th><th>An example</th></tr></thead><tbody><tr><td>Hook</td><td>Social issues related to gender have been widely discussed among people over centuries. Due to gender differences, some people have claimed that certain jobs should accept either men or women.</td></tr><tr><td>Transition</td><td>However, such a statement suffers from logical and factual problems.</td></tr><tr><td>Points</td><td>I hardly agree with this one-sided proposal.</td></tr><tr><td>Point 1</td><td>To begin with, limiting the access to certain occupations on the basis of gender may ignore the individualities since the over-generalized characteristics of men and women are not always universal. Such an act may hurt the whole society.</td></tr><tr><td>Reasoning</td><td>For instance, if females are only allowed to enter particular careers be them nurses, teachers or accountants, those who are unenthusiastic and unable to handle these work and rejected from other professions might take these important positions. Males that are authentically passionate about these jobs will be faced with the risks of being jobless. Hence, the overall domestic unemployment rate will increase.</td></tr><tr><td>Point 2</td><td>Additionally, in a society where the exclusion of men or women from certain jobs is taken for granted by people, pre-existing gender stereotypes tend to be reinforced, which is undesirable for social equality.</td></tr><tr><td>Exemplification</td><td>For example, in many parts of the world girls are either explicitly or implicitly barred from entering certain professions such as science. As a result, girls might be discouraged from taking science classes at an early age, and later have less chance of finding good jobs. Had it not been for such bias, the society would have been more productive.</td></tr><tr><td>Concession hook</td><td>Admittedly, females and males with naturally selected biological dissimilarities either on brain structures or genes grant differentiated cognitive skills or physical strengths.</td></tr><tr><td>Point 3</td><td>Hence, labor division according to genders might enable a society to achieve productive efficiency.</td></tr><tr><td>Concession reasoning</td><td>However, the collaboration and cooperation between women and men making full use of their distinctive advantages might further facilitate the efficiency of working, which has been studied extensively by multiple groups of researchers worldwide.</td></tr><tr><td>Conclusion</td><td>In conclusion, having considered both sides of the statement, I still believe that in a diverse and dynamic society, people, regardless of their gender, ought to have equal opportunities and access to compete for the jobs that they desire for.</td></tr></tbody></table><p>在了解了五段式写作之后，我们就应该对各个题目进行深入分析了。事实上，虽然考试的题型不一样，但是本质上都是两种观点的碰撞和论证。而且这两种观点正好是某种社会现象的正反面。因此，所有关于 opinion 的题目我们都可以归纳到固定的答题心智中。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/29/ielts-writing-1/1.jpeg"></div><h2 id="关于审题-Analysis-of-Prompt"><a href="#关于审题-Analysis-of-Prompt" class="headerlink" title="关于审题 Analysis of Prompt"></a>关于审题 Analysis of Prompt</h2><p>一般来说，对于某种社会现象，都具有两面性。在题目没有明确规定的情况下，我们完全可以对两个方面都进行论述。但是这里会存在一个问题——在一篇文章中，我们是只论述一个观点好，还是两个观点好呢？</p><p>其实，两个观点相比于一个观点来说显得肯定更加客观。但是，两个观点的写作难度很明显也会大于一个，这是因为我们完全不好组织两个观点如何组织好文字，很容易讲不清楚。另外，我们从两个观点中形成一个令双方都能接受的折中观点，同样需要另外的思考。所以说，除非十分有把握，还是选择 one side 进行论述。</p><h3 id="One-Side-or-Both-Sides"><a href="#One-Side-or-Both-Sides" class="headerlink" title="One Side or Both Sides?"></a>One Side or Both Sides?</h3><ul><li>各有各的好处，考场上推荐使用 One Side</li><li>Both Sides 容易让老师耳目一新。但是富贵险中求，这种方式很容易在有限的时间内讲不清，跑题。</li><li>One Side 更加容易在考场上发挥，提前准备的空间足够多。</li></ul><p>在读题的时候首先要确定我们的观点，不同的观点这个时候就会有不同的写作方法。但是文章的结构是不变的，opinion 之下，对应3个 point.</p><p>实际上，这些 point 我们当然不可以直接在考场上直接想。在进行雅思写作的备考的时候，我们完全可以进行 high-level views 的准备。涉及到这些 views 的准备，我们可以适当准备一些素材。首先，我们归纳了一些高层次的观点，供你参考。</p><h3 id="一些高层次的观点"><a href="#一些高层次的观点" class="headerlink" title="一些高层次的观点"></a>一些高层次的观点</h3><ul><li>Effectiveness and efficiency</li><li>Economy and finance</li><li>Environment and health</li><li>Equality and fairness</li><li>Feasibility and compatibility</li><li>Culture and globalization</li><li>Technology and internet</li><li>个人微观，社区城市国家世界的宏观，兼容性</li></ul><blockquote><p>实际上，高层次的观点配合中低层次的观点就是循序渐进的。例如：<br>(题目) Foreign visitors should pay more than local visitors for cultural and historical attractions. To what extent do you agree or disagree?<br>(High Level) As far as national cultural influence is considered, foreign tourists should NOT pay more.<br>(Mid Level)  Cultural and historical sites are usually the symbol of a nation and image of a country and we should not discourage foreigners from visiting these sites.<br>(Detail)  Higher price reduces the number of visitors - having foreign visitors pay more will interfere with the spread of our national culture and global influence.</p></blockquote><p><strong>实际上，一篇文章，需要3个这样的观点。当我们表达立场之后，行文就是依靠这一点来实现。</strong></p><h3 id="联系高层次的观点和语料"><a href="#联系高层次的观点和语料" class="headerlink" title="联系高层次的观点和语料"></a>联系高层次的观点和语料</h3><p>假如说我准备了 effectiveness and efficiency 这个高级观点，这意味着我们所持有的观点拥有着更高效的运作模式，那么它就可以拥有令xx更方便，效率更高。那么我们可以事先准备以下语料：</p><p>First of all, () is an extraordinarily efficient tool of () as it enables smooth and effective () in modern time.<br>For instance, (), as compared to traditional (), offers convenience in our daily lives. It allows us to () simply with () (wherever we are, whenever we want, and however we would like to).<br>In addition, we are able to can reduce workload and facilitate more efficient completion of tasks – (), thereby streamlining workflows and eliminating unnecessary steps or delays.<br>Compared with the (), () has totally transformed our ways of living a life or working style.</p><p>以上分别讲述了有关于 effectiveness and efficiency 这个高级观点其中的两个子观点——首先它可以便捷我们的生活。其次，它可以增加我们完成任务的效率。一般来说，这两个观点涉及到了工作和生活，但是关于便捷和高效的事物，并不一定作用于工作（例如基础建设，如高铁），所以这里如果想完美的使用 effectiveness and efficiency，尽量多积累一些有关于生活方面的好处。</p><blockquote><p>When we say that something has the characteristics of effectiveness and efficiency, it can bring several benefits and conveniences to our lives:<br>Time-saving: Effective and efficient processes or tools help us accomplish tasks in less time. By streamlining workflows and eliminating unnecessary steps or delays, we can complete tasks more quickly and have more time for other activities.<br>Cost reduction: Efficiency often leads to cost savings. When processes are optimized and resources are utilized effectively, it can result in lower expenses. This can apply to various aspects of life, such as energy consumption, transportation costs, or even personal budgeting.<br>Improved productivity: Effectiveness and efficiency go hand in hand with increased productivity. When we can accomplish more in less time, it allows us to achieve our goals more effectively and accomplish more in our personal and professional lives.<br>Simplified decision-making: When we have effective and efficient systems in place, it becomes easier to make decisions. With clear metrics and measurable outcomes, we can evaluate options and choose the most suitable course of action based on data and evidence.<br>Enhanced quality: Effectiveness and efficiency often result in improved quality. By focusing on what truly matters and optimizing processes, we can deliver better results, whether it’s in terms of products, services, or personal achievements.<br>Reduced stress: When we have effective and efficient systems in place, it reduces stress and frustration. We have more confidence in our ability to accomplish tasks, and we can rely on streamlined processes to support us, leading to a more relaxed and balanced life.</p></blockquote><p>我们下面来以 email 为例子，阐述这段，到底应该怎么写：</p><p>First of all, (email) is an extraordinarily efficient tool of (communication) as it enables smooth and effective (social and professional communication) in modern time.<br>For instance, (sending email), as compared to traditional (communication ways), offers convenience in our daily lives. It allows us to (reach our beloved ones or colleagues) simply with (a few clicks on the keyboard or a mobile device ) (wherever we are, whenever we want, and however we would like to).<br>In addition, we are able to can reduce workload and facilitate more efficient completion of tasks – (emails enable instant message delivery, file sharing, and collaborative work, reducing time and geographical constraints), thereby streamlining workflows and eliminating unnecessary steps or delays.<br>Compared with the (phone calls and paper mails), (email) has totally transformed our ways of living a life or working style.</p><p>所以我们可以看到，我们需要真正去积累的部分应该是，如何优雅的使用常见的论述主体的表现，以及它如何发挥作用——因为这是关联论述主体和结论的纽带。举个例子，刚刚上面的 <code>emails enable instant message delivery, file sharing, and collaborative work, reducing time and geographical constraints</code> 这一段实际上说的就是 email 的作用，它可以直接发送消息，可以共享文件，可以合作工作，超越地理上的限制。这些正好可以论证「减少工作压力、增加工作效率」的论点。</p><p>实际上，当积累进行到了一定程度，我们可以进一步按照素材去进行素材的总结归类。例如 <code>enable instant message delivery, file sharing, and collaborative work, reducing time and geographical constraints</code> 很显然这不是电子邮件的专利——那么只要是互联网相关的内容，这一个语料都可以用上。</p><h3 id="Opinion-题型变种思路"><a href="#Opinion-题型变种思路" class="headerlink" title="Opinion 题型变种思路"></a>Opinion 题型变种思路</h3><p>首先让我们来回顾下五段式写作：</p><ol><li>The Beginning</li><li>Point 1 + Reasoning</li><li>Point 2 + Exemplification</li><li>Point 3 + Concession</li><li>The End</li></ol><p>关于 Opinion 的四种题型都可以映射到这套思路上。例如：</p><blockquote><p>母题 agree or disagree<br>Foreign visitors should pay more than local visitors for cultural and historical attractions. To what extent do you agree or disagree?</p></blockquote><ul><li>变种1 (discuss both views and give your opinion)<br>Some people believe that studying at university or college is the best route to a successful career, while others believe that it is better to get a job straight after school. Discuss both views and give your opinion.</li></ul><p>在这种题型中，both views（它们通常是相反的）可以类比与母题的 agree 和 disagree。正好也同时对应两种观点。</p><ul><li>变种2 (positive or negative development)<br>There are a higher proportion of older people than younger people. Do you think it is a positive or negative development?</li></ul><p>positive or negative 类比与母题的 agree 和 disagree。正好也同时对应两种观点。</p><ul><li>变种4 (advantages outweigh disadvantages)</li></ul><p>E-mail has had a huge impact on professional and social communication, but this impact has been negative as well as positive. Do the disadvantages of using e-mail outweigh the advantages?</p><p>advantages or disadvantages 类比与母题的 agree 和 disagree。正好也同时对应两种观点。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/29/ielts-writing-1/2.jpeg"></div><h2 id="关于观点生成-Idea-Generation"><a href="#关于观点生成-Idea-Generation" class="headerlink" title="关于观点生成 Idea Generation"></a>关于观点生成 Idea Generation</h2><h3 id="Agree-or-disagree"><a href="#Agree-or-disagree" class="headerlink" title="Agree or disagree"></a>Agree or disagree</h3><p>之前的例题：</p><p>Foreign visitors should pay more than local visitors for cultural and historical attractions. To what extent do you agree or disagree?</p><table><thead><tr><th>Your Response</th><th>High-level Points</th></tr></thead><tbody><tr><td>should pay more</td><td>Culture: encourage citizens to visit<br>Economy: support local communities<br>Feasibility: tourists will not quit if reasonable</td></tr><tr><td>should NOT pay more</td><td>Economy: hurt local economy<br>Culture: national symbol and global influence<br>Euality: Cultural heritage shared by all mankind</td></tr></tbody></table><p>结论：很多 high level 的观点都是通用的，那么只需要几个通用的观点就可以了。</p><h3 id="Discuss-both-views-and-give-opinion"><a href="#Discuss-both-views-and-give-opinion" class="headerlink" title="Discuss both views and give opinion"></a>Discuss both views and give opinion</h3><p>Some people believe that studying at university or college is the best route to a successful career, while others believe that it is better to get a job straight after school. Discuss both views and give your opinion.</p><table><thead><tr><th>Your Response</th><th>High-level Points</th></tr></thead><tbody><tr><td>College!</td><td>Effectiveness: long-term career growth<br>Economy: better-paying jobs<br>Social relationship: friends and circles</td></tr><tr><td>Job!</td><td>Economy: Financial burden<br>Effectiveness: hands-on experience<br>Tech learn fast and free through internet</td></tr></tbody></table><h3 id="Positive-or-negative-development"><a href="#Positive-or-negative-development" class="headerlink" title="Positive or negative development"></a>Positive or negative development</h3><p>There are a higher proportion of older people than younger people. Do you think it is a positive or negative development?</p><table><thead><tr><th>Your Response</th><th>High-level Points</th></tr></thead><tbody><tr><td>More older people<br>positive development</td><td>Economy: experienced and skilled workforce<br>Health: better healthcare and productivity<br>Tech: high-tech reduces the need for manual labor</td></tr><tr><td>More older people<br>negative development</td><td>Economy: heavy financial burden on society<br>Culture: lack of passion and innovation in society<br>Social stability: issues caused by young immigrants</td></tr></tbody></table><h3 id="Advantages-outweigh-disadvantages"><a href="#Advantages-outweigh-disadvantages" class="headerlink" title="Advantages outweigh disadvantages"></a>Advantages outweigh disadvantages</h3><p>E-mail has had a huge impact on professional and social communication, but this impact has been negative as well as positive. Do the disadvantages of using e-mail outweigh the advantages?</p><table><thead><tr><th>Your Response</th><th>High-level Points</th></tr></thead><tbody><tr><td>Email has more advantages</td><td>Efficient: fast and easy<br>Economy: free or low cost<br>Social relationship: reduces unneeded social</td></tr><tr><td>Email has more disadvantages</td><td>Culture: text cannot convey diversity in common<br>Social relationship: keep people distant<br>Economy: hardware needed, not necessarily cheap</td></tr></tbody></table><h2 id="开场-Opening"><a href="#开场-Opening" class="headerlink" title="开场 Opening"></a>开场 Opening</h2><h3 id="综述-Intro"><a href="#综述-Intro" class="headerlink" title="综述 Intro"></a>综述 Intro</h3><p>开场的时候，我们应该写什么？</p><p>首先，在首段的开头，简洁明了地介绍你要讨论的主题。例如，如果你要写有关环境保护的话题，可以直接提及环境问题或者具体的环境挑战。<br>接下来，接下来，提供一些背景信息，以便读者了解该主题的重要性和相关性。这可以是一两个简短的句子，涵盖主题的基本概念或者普遍认同的事实。例如，你可以提到全球变暖对地球造成的影响或者日益增长的塑料污染问题。<br>最后做出观点陈述：在首段的结尾，明确陈述你的观点或者立场。这应该是简洁明了的一句话，直接表达你对该主题的态度。例如，如果你支持环境保护，可以明确表示你认为环境问题需要紧急解决。</p><p>一般来说，需要写好开头，需要做到以下几点，才可以有一个比较好的发挥：</p><ul><li>不能照搬原文，需要带有一定的解释；</li><li>需要有连贯的逻辑性，例如可以善用过渡；</li><li>需要清晰明了。</li></ul><p>关于细节，我们可以使用这些技巧：</p><ul><li>Use prompt analysis from previous, sessions for practice.</li><li>Build your own adaption of the formula; feel free to add more complexity.</li><li>Pick an opposite detail that you will be able to fight back later in concession.</li></ul><p>在接下来，我们看到的 formula，就囊括了这些内容。</p><h3 id="写作思路提炼-Mindset-formula-derivation"><a href="#写作思路提炼-Mindset-formula-derivation" class="headerlink" title="写作思路提炼 Mindset formula derivation"></a>写作思路提炼 Mindset formula derivation</h3><p>It is hard to deny that (opposite detail). Such a fact leads impressionable people to generate the opinion that (opposite response).<br>However, such a statement suffers from both logical and factual fallacies, and it should be examined meticulously.<br>As far as (Pont 1), (Point 2), and (Point 3) are concerned, I strongly hold that (our response).</p><p>It is hard to deny that <strong>historical and cultural sites are the symbols of a nation, and we should encourage visiting to promote our national influence.</strong> Such a fact leads impressionable people to generate the opinion that <strong>we should not charge foreign visitors more to visit these sites, as higher fees discourage visiting and hinder the influence of our culture.</strong> However, such a statement suffers from both logical and factual fallacies, and it should be examined meticulously. As far as <strong>culture, economy, and feasibility are concerned, I strongly hold that we ought to have foreign visitors pay more for visiting the sites.</strong></p><p>It is hard to deny that <strong>text is not always able to convey the subtlety and diversity in communication,</strong> and such a fact leads impressionable people to generate the opinion that <strong>email has more disadvantages in professional and social communication simply as emails are usually composed in pure text, causing confusion and misunderstanding.</strong> However, such a statement suffers from both logical and factual fallacies, and it should be examined meticulously. As far as <strong>effectiveness, economy, and social relationship are concerned, I strongly hold that email has brought more advantages.</strong></p><p>总结：文章的开头包括引入部分、过渡和自己的立场。引入部分需要引人入胜，提供新信息；过渡部分需要流畅有逻辑；自己的立场需要明确，最好有一个引人入胜的引入和有逻辑的过渡。</p><p>关于写作思路，首先这里使用了 confession 的手法，之后通过 confession 的转折引入我们需要谈论的主题。很显然，这其中还有不够好的地方，需要自己再进行润色，以便于达到独树一格的水平。</p><p>从逻辑考虑出发，<code>As far as (Pont 1), (Point 2), and (Point 3) are concerned</code> 这一句话虽然有它的好处，和下面的段落遥相呼应，但是特征也十分明显，<code>As far as</code> 用在这里也略显拖沓了。所以有必要将它精简。除此之外，首段和尾段因为更加好准备，所以我们可以适当使用一些与众不同但是比较贴合的词汇来增加我们的词汇丰富度。例如：</p><p>There is an undeniable difficulty in refuting the prevailing notion that (<code>anti-notion</code>). Such a fact leads susceptible individuals to form the belief that (<code>anti-point</code> <code>simply as</code> <code>anti-reason connecting anti-notion and anti-point</code>), causing confusion and misunderstanding. However, it is imperative to scrutinize this statement meticulously due to its logical and factual fallacies. When considering (<code>hight-point1</code>), (<code>hight-point2</code>), and (<code>hight-point3</code>), I staunchly maintain that (<code>point</code> <code>has brought more advantages</code>).</p><p>对于观点的描述，可以使用更为书面化的，也足够精确的词语进行描述，例如：</p><p>text is often inadequate in conveying the subtlety and diversity of communication. (这句话使用了 <code>inadequate</code> 表明使用的工具是不充分的，<code>is not able</code> 一个是因为太常见，另外一个是因为它的含义没有 <code>inadequate</code> 范围狭窄和精确)</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/29/ielts-writing-1/3.jpeg"></div><h2 id="第一个正文论理-Reasoning"><a href="#第一个正文论理-Reasoning" class="headerlink" title="第一个正文论理 Reasoning"></a>第一个正文论理 Reasoning</h2><h3 id="例子和讲解-Example1"><a href="#例子和讲解-Example1" class="headerlink" title="例子和讲解 Example1"></a>例子和讲解 Example1</h3><p>论理段的结构和要求，包括 coherent、consistent 和 adequate, 以及一个模板。<strong>充分注意细节</strong>，不能写<br>偏题。</p><p>要注意的是，从这个部分开始，可以用模板的部分就比较少了，其余的绝大部分只能靠自己去积累一些说法，当然这些说法还是可以通用的。</p><p>我们从上面讲到的 high-level 到 detail 的说法循序渐进：</p><table><thead><tr><th>段落层次</th><th>示例</th></tr></thead><tbody><tr><td>high</td><td><strong>First and foremost,</strong> having foreign visitors pay more can he promote national culture, as such an act encourages local citizens to visit the sites.</td></tr><tr><td>mid</td><td><strong>To be more specific,</strong> the money charged from foreign visitors can be used to subsidize citizens to visit with cheap or free entry;</td></tr><tr><td>detail</td><td><strong>Furthermore,</strong> citizens will not only find a free entry inviting, but be attracted with a stronger sense of cultural belonging due to fewer entry barrier.</td></tr><tr><td>optional filler</td><td><strong>Therefore,</strong> the benefit of charging foreign visitors more is ‘clear even to the layman’s eyes, and our government should impose such policy.</td></tr></tbody></table><p>Detail 可以替换成其它形式。我们可以看到，示例中的 Detail 是跟随原有的论点进一步分析。如果当我们不好进一步分析的时候，我们可以进行（承接上文的观点的）对立观点的驳斥。例如：</p><p>On the other hand, foreign visitors might take up the limited accommodation capacity of the sites, so they needed to be reasonably discouraged from visiting.</p><p>当然，也可以既承接观点，又驳斥，此类情况需要使用一个转折。难点在于这样的观点应该如何构思出来：</p><p>in addition, having foreign visitors pay more could not only save available, seats” for citizens, but collect a fund of restoration for a more appealing attraction to all visitors.</p><p>示例中的原文，最后一段表示总结 Conclusion。除了总结，还可以表示成假设 What if 用于增强语气：</p><p>If we do not have foreign visitors pay more, we will not only lose a great opportunity in showing national culture to citizens, but one in promoting patriotism as well.</p><p>值得注意的是，最后一段一般还是用于应急的场景，有三段式由浅入深就已经足够。</p><h3 id="注重连贯性和说服性-Example2"><a href="#注重连贯性和说服性-Example2" class="headerlink" title="注重连贯性和说服性 Example2"></a>注重连贯性和说服性 Example2</h3><p>First and foremost, studying at university or college <strong>is more economical (not using better)</strong> as students will be able to find jobs that <strong>are more financially rewarding</strong>.<br>To be more specific, the world today <strong>runs at an unprecedentedly fast</strong> speed and <strong>various industries require talents with both excellent technical and soft</strong> skills.<br><strong>Elite</strong> universities are the places that <strong>provide an education that best meets</strong> such needs - <strong>a depth into a specific field with an atmosphere for communication and collaboration</strong>.<br><strong>Such a fact is further substantiated by studies worldwide including one conducted by NPR (National Public Radio) in 2017 - the only thing that is more expensive than attending college is NOT attending.</strong></p><h3 id="避免偏题（与分论点不匹配）"><a href="#避免偏题（与分论点不匹配）" class="headerlink" title="避免偏题（与分论点不匹配）"></a>避免偏题（与分论点不匹配）</h3><p>Moreover, students who study hard will be able to pay off their tuition quickly with a better paying job.<br>Take my friend Diana as an example - she studies hard in college and was able to find a job that pays really well. She paid off her loan, completely changed her life with the job, and helped her family as well. Today she is the role model of my home school.</p><p>写作的时候，不要用 Listing 方式的写作。这个地方写到最后就变成了，因为努力找到了好工作，而不是好学校找到好工作，学校到最后举例的意义就可有可无了。使用身边人的例子不够具有说服力。</p><h3 id="最后再来看一篇例子"><a href="#最后再来看一篇例子" class="headerlink" title="最后再来看一篇例子"></a>最后再来看一篇例子</h3><p>First of all, email is an <strong>extraordinarily efficient tool of communication</strong> as it <strong>enables smooth and effective social and professional communication</strong> in modern time.<br>For instance, we can <strong>reach our beloved ones or colleagues simply with a few clicks on the keyboard or a mobile device wherever we are</strong>, whenever we want, and however we would like to.<br>In addition, we are able to communicate at our own pace - <strong>build strong emotional connection with our family on the other hemisphere with a couple emails over the week</strong>, or have a continuous discussion with a team of colleagues within the same building all day long.<br><strong>Compared with the age of phone calls and paper mails, email has totally transformed our ways of living a life or conducting business</strong>.</p><p>加油，看到这儿了，好棒！坚持看下去 ₍ᐢ •͈ ༝ •͈ ᐢ₎♡</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/29/ielts-writing-1/6.jpeg"></div><h2 id="Examplification"><a href="#Examplification" class="headerlink" title="Examplification"></a>Examplification</h2><p>examplification 和 example 之间的区别：example 只是用来举例，而 examplification 是将举例实例化。前者可能只使用一个通用的论证过程，后者必须有一个现实世界的对照。</p><p>这是一个 example：</p><blockquote><p>For example, if you work hard, you will be able to get good results - tests, career, relationships …etc.</p></blockquote><p>这是一个 examplification：</p><blockquote><p>Take my friend Colin as an example: in the two months before his test, he reviewed three reading passages each day, worked on one new mock test; in addition, he finished 20 writing part twos in the week before his test and had them reviewed by Vince. He was eventually able to get an overall 7.5 in his first IELTS trial.</p></blockquote><p>Examplification 同样有自己的写作常用 mindset：</p><p><strong>Furthermore, the fact that</strong> income generated from historical sites promotes local economy <strong>indicates that</strong> foreign visitors, who <em>usually are able to afford a higher admission, should be reasonably charged more</em>.<br><strong>Take the case of</strong> the well-known Cotta site located in the Terra town, which charges foreign visitors 75% more and uses the extra income on infrastructure such as roads, restaurants, and hotels. <strong>As a result</strong>, <em><strong>not only</strong> the life of local citizens is greatly improved, <strong>but</strong> such act <strong>also</strong> creates more jobs in town and attracts more domestic and international visitors with easier access and better facility.</em><br><strong>Had it not been for the extra</strong> income from the site, the Terra town would <strong>never have been able to significantly <em>improve</em></strong> <em>the life of its residents and form a virtuous cycle in tourism.</em></p><p>一般来说，examplification 需要同时具备三要素：Generality Adequate Coherent. 最重要的是需要具有普适性 Generality.</p><p>例如，当我们的举例，不是世界上的典型例子，而是身边的人举例（这种时候因为考官无从认证真实性，所以更为好写），因为缺乏普适性，所以这部分内容需要我们自行补充背景，确保举的例子可被复制，普适性足够强。同样，关于这部分的补充同样也是增强逻辑严密性的一种手段。</p><p>Take the case of my friend Alex, <strong>a typical college student among thousands</strong>, who once was a diligent student at TS College, <strong>a well-known college for its expertise in science and engineering</strong>. Alex honed both his academic and communication skills at TS. As a result, he received offers from multiple <strong>Fortune 500 firms</strong> upon his graduation. Today, he is in a high-paying job which he likes a lot.</p><p>接下来看另外一个例子，从 AB 面论证了「是否使用电子邮件」带来的诸多好处。</p><p>A 面</p><p><strong>Furthermore, the fact that</strong> <em>email facilitates effective communication for free or low-cost</em> <strong>indicates that</strong> <strong>it has brought great benefits to</strong> <strong>both our personal and professional life.</strong><br><strong>Take the case of the changes we all witnessed in the past decades</strong> - in many cases email has replaced expensive international phone calls, and enabled us to nail a deal across the globe or keep a close connection with family members home and abroad. <strong>As a result</strong>, email not only improved our life but accelerated globalization, and has its role in the growth of international trade.<br><strong>Had it not been for</strong> email, we would never have been able to get so close to each other.</p><p>B 面</p><p><strong>Furthermore, the fact that</strong> <em>email brings convenience at the cost of social relationship</em> <strong>indicates that it hurts both our personal and professional life greatly.<br>Take the case of</strong> Tendollar, the company I work for and one of the biggest IT firm in the world: coworkers in the same building or even the same office rarely talk to each other face-to-face and almost always communicate via email or its upgraded version - instant message applications. <strong>As a result,</strong> a lot of times people do not even know how to properly talk at an official meeting or after work with their friends and beloved ones.<br><strong>Had it not been for</strong> email, we would never have become so distant from each other while we are so close to each other.</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/29/ielts-writing-1/5.jpeg"></div><h2 id="让步段和结束-Concession-and-Ending"><a href="#让步段和结束-Concession-and-Ending" class="headerlink" title="让步段和结束 Concession and Ending"></a>让步段和结束 Concession and Ending</h2><p>Concession: A literary device used in argumentative writing, where one acknowledges a point made by one’s opponent.</p><p>让步，也就是说需要攻击对面比较 confirm 的观点。例如，在 cat or dog? 的问题上，我们选择了 cat。这个时候对面抛出了「狗可以保护人类」的观点，我们就可以论证「狗不能强力的保护人类，况且保护人类的一般是警察」。</p><p>让步自然段中，我们同样可以有自己的 mindset.</p><p><strong>Nevertheless, a voice arises that</strong> since historical sites are the symbols of a nation, charging foreign visitors more is not feasible as <em>higher prices discourage visiting and hinder the spread of our national influence</em>.<br><strong>Ironically</strong>, site admission is usually a small part of traveling expenses compared with plane tickets and accommodation, and <em>tourists usually travel to a foreign country with a sizeable budget</em>; in addition, tourists travel long and far with the aim of exploring and understanding a new culture, <em>so something as trivial as a few extra dollars on a ticket will not be enough to discourage them</em>.<br><strong>Therefore,</strong> charging foreign visitors more <strong>is a feasible approach</strong>.</p><p>接下来我们再看一篇例子：</p><p>Nevertheless, a voice arises that text in email cannot convey the subtlety and diversity in communication - it creates confusion and misleading information, damaging our social relationship.<br>Ironically, a hammer can hurt a person badly while millions are using it everyday. Email is simply a tool and not the only vehicle of information, we can use it mostly directly or to complement various other ways of communication. For instance, we can respond a simple “YES” to an address confirmation, or inform our coworkers of the progress of the business trip while keep the very details for a later face-to-face meeting.<br>Therefore, as long as we use our tools (email in this case) properly, we will be able to significantly enhance both our personal and professional relationships.</p><p>关于结束段落，我们一般只是起到一个总结的作用，来直接看看 mindset：</p><p><strong>In a nutshell, I maintain that</strong> foreign visitors should pay more as such policy is feasible to implement, and benefits our national culture and economy.<br><strong>Admittedly, as my favorite quote from James Madison goes, as long as the reason of man continues fallible, different opinions will be formed, and some people may oppose me.</strong><br><strong>However, I believe they will compromise after being exposed to my article.</strong></p><p>这里我们可以看到，因为我们有在写作的时候进行不断的总结，所以我们在 Ending 段落持续重复文中观点显得十分重复。所以我们可以放一些较为通用的语言包上去。例如，我们想体现我们的包容性，批判性，就可以使用这种通用的名人名言。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/29/ielts-writing-1/4.jpeg"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="英语学习" scheme="https://blog.pengdonglai.com/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="English" scheme="https://blog.pengdonglai.com/tags/English/"/>
    
    <category term="作文" scheme="https://blog.pengdonglai.com/tags/%E4%BD%9C%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>部分剑桥雅思的做题记录和沉淀（2）</title>
    <link href="https://blog.pengdonglai.com/2023/10/24/ielts-reading-2/"/>
    <id>https://blog.pengdonglai.com/2023/10/24/ielts-reading-2/</id>
    <published>2023-10-23T16:15:28.000Z</published>
    <updated>2024-06-03T17:04:59.377Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="剑7-TEST4-1"><a href="#剑7-TEST4-1" class="headerlink" title="剑7-TEST4.1"></a>剑7-TEST4.1</h2><p><strong>Pulling strings to build pyramids</strong></p><p>No one knows exactly how the pyramids were built. Marcus Chown reckons the answer could be hanging in the air.</p><p>The pyramids of Egypt were built more than three thousand years ago, and no one knows how. The conventional picture is that tens of thousands of slaves dragged stones on sledges. But there is no evidence to back this up. Now a Californian software consultant called Maureen Clemmons has suggested that kites might have been involved. While perusing a book on the monuments of Egypt, she noticed a hieroglyph that showed a row of men standing in odd postures. They were holding what looked like ropes that led, via some kind of mechanical system, to a giant bird in the sky. She wondered if perhaps the bird was actually a giant kite, and the men were using it to lift a heavy object.</p><details>  <summary>点我查看解析</summary>  <div>be hanging in the air: 悬而未决</div>  <div>sledges: 雪橇，拖车</div>  <div>hieroglyph: 象形文字</div>  <div>这段主要是描述了部分学者对于埃及金字塔建造的刻板印象——万计的奴隶用用拖车拖着石头，但是莫琳·克莱蒙斯从埃及古迹的书中发现那时候的人们使用了类似于风筝的道具。</div></details><br><p>Intrigued, Clemmons contacted Morteza Gharib, aeronautics professor at the California Institute of Technology. He was fascinated by the idea. Coming from Iran, I have a keen interest in Middle Eastern science, he says. He too was puzzled by the picture that had sparked Clemmonss interest. The object in the sky apparently had wings far too short and wide for a bird. The possibility certainly existed that it was a kite, he says. And since he needed a summer project for his student Emilio Graff, investigating the possibility of using kites as heavy lifters seemed like a good idea.</p><p>Gharib and Graff set themselves the task of <strong>raising a 4.5-metre stone column from horizontal to vertical</strong>, using no source of energy except the wind. Their <strong>initial calculations</strong> and scale-model wind-tunnel experiments <strong>convinced them they wouldn’t need a strong wind to lift the 33.5-tonne column.</strong> Even a modest force, if sustained over a long time, would do. <strong>The key was to use a pulley system that would magnify the applied force.</strong> So they rigged up a tent-shaped scaffold directly above the tip of the horizontal column, with pulleys suspended from the scaffolds apex. The idea was that as one end of the column rose, the base would roll across the ground on a trolley.</p><details>  <summary>点我查看解析</summary>  <div>Intrigue, Intrigued: 感兴趣，出于兴趣。</div>  <div>aeronautics: 航天学。</div>  <div>column: 石柱。</div>  <div>modest: 适度，谦逊。</div>  <div>pulley system that would magnify the applied force: pulley 滑轮，magnify 放大，applied force 施加的力。</div>  <div>rigged up: rig 操控，操纵。rigged up 操作，安装。rigged 被操控的。</div>  <div>scaffold: 脚手架。</div>  <div>tip: 表示方位的时候「尖端」。</div>  <div>with pulleys suspended from the scaffolds apex: suspended 悬挂/被悬挂，apex 尖端。</div>  <div>trolley: 手推车。</div>  <div>这段主要是描述了莫尔特扎·加里布对这个实验非常好奇，以及派自己学生做实验的细节。得到了结论是：不需要强风也可以举起33.5吨的柱子。这两段的末尾描述了实验的过程细节。</div></details><br><p>Earlier this year, the team put Clemmons’s unlikely theory to the test, using a 40-square-metre rectangular nylon sail. The kite lifted the column clean off the ground. We were absolutely stunned, Gharib says. The instant the sail opened into the wind, a huge force was generated and the column was raised to the vertical in a mere 40 seconds.</p><p>The wind was blowing at a gentle 16 to 20 kilometres an hour, little more than half what they thought would be needed. What they had failed to reckon with was what happened when the kite was opened. There was a huge initial force five times larger than the steady state force, Gharib says. This jerk meant that kites could lift huge weights, Gharib realised. Even a 300-tonne column could have been lifted to the vertical with 40 or so men and four or five sails. <strong>So Clemmons was right: the pyramid builders could have used kites to lift massive stones into place. Whether they actually did is another matter, Gharib says.</strong> There are no pictures showing the construction of the pyramids, so there is no way to tell what really happened. The evidence for using kites to move large stones is no better or worse than the evidence for the brute force method, Gharib says.</p><details>  <summary>点我查看解析</summary>  <div>nylon sail: 尼龙帆。</div>  <div>The kite lifted the column clean off the ground: clean 在这里类似于副词，表示「完全的」意思。=fully</div>  <div>stun, stunned: 惊呆了。</div>  <div>reckon: 推测，推想。</div>  <div>steady state: 稳态。</div>  <div>jerk: 猛烈拉动，颠簸。</div>  <div>brute force: 蛮力。brute 野蛮的，暴掠的。</div>  <div>这段主要是描述了今年早些时候克莱蒙斯团队验证这一理论的过程，结果使团队惊呆了，帆布打开的时候产生了惊人的猛烈扯动力量，很快就将巨大的石柱送上了垂直上空。所以至少可以得出结论：金字塔建造者可以使用风筝将巨大的石头举起来就位，即便是他们具体实施的过程无从考证。</div></details><br><p>Indeed, the experiments have left many specialists unconvinced. The evidence for kite-lifting is non-existent, says Willeke Wendrich, an associate professor of Egyptology at the University of California, Los Angeles.</p><p><strong>Others feel there is more of a case for the theory.</strong> Harnessing the wind would not have been a problem for accomplished sailors like the Egyptians. And they are known to have used wooden pulleys, which could have been made strong enough to bear the weight of massive blocks of stone. In addition, there is some physical evidence that the ancient Egyptians were interested in flight. A wooden artifact found on the step pyramid at Saqqara looks uncannily like a modern glider. Although it dates from several hundred years after the building of the pyramids, its sophistication suggests that the Egyptians might have been developing ideas of flight for a long time. And other ancient civilisations certainly knew about kites; as early as 1250 BC, the Chinese were using them to deliver messages and dump flaming debris on their foes.</p><details>  <summary>点我查看解析</summary>  <div>more of a case for the theory: 这个理论还有更多的理由。表示这个理论可以更充分。</div>  <div>harness: 原本的意思是给马套上鞍具。在这里表示驾驭的意思。</div>  <div>accomplished: 熟练的，才华横溢的。</div>  <div>glider: 滑翔机。</div>  <div>dump flaming debris on their foes: dump 投递，投掷，倾倒；flaming 燃烧；foes 敌人。</div>  <div>jerk: 猛烈拉动，颠簸。</div>  <div>brute force: 蛮力。brute 野蛮的，暴掠的。</div>  <div>这段主要是描述了一些人不是很认可之前提到的理论，认为古埃及人没有这样的能力。但实际上，有更多的证据可以证明这个理论——埃及人会的东西实际上比我们想象的多。举的例子就包括了很难被压坏的木制滑轮，还有飞行器。</div></details><br><p>The experiments might even have practical uses nowadays. There are plenty of places around the globe where people have no access to heavy machinery, but do know how to deal with wind, sailing and basic mechanical principles. Gharib has already been contacted by a civil engineer in Nicaragua, who wants to put up buildings with adobe roofs supported by concrete arches on a site that heavy equipment can’t reach. His idea is to build the arches horizontally, then lift them into place using kites. We’ve given him some design hints, says Gharib. Were just waiting for him to report back. So whether they were actually used to build the pyramids or not, it seems that kites may make sensible construction tools in the 21st century AD.</p><details>  <summary>点我查看解析</summary>  <div>sailing: 同之前的 sail 词缀，表示航行。</div>  <div>adobe: 土的，土胚，砖胚。</div>  <div>civil engineer: 土木工程师。</div>  <div>sensible: 明智的，有意义的。</div>  <div>最后一段主要描述了本文所描述的实验对于现代的意义——尤其是对于无法接触现代大型工业的落后地区来说。</div></details><br><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/24/ielts-reading-2/1.jpeg"></div><h2 id="剑7-TEST3-2"><a href="#剑7-TEST3-2" class="headerlink" title="剑7-TEST3.2"></a>剑7-TEST3.2</h2><p><strong>Population movements and genetics</strong></p><p><strong>A</strong></p><p>Study of the origins and distribution of human populations used to be based on archaeological and fossil evidence. A number of techniques developed since the 1950s, however, have placed the study of these subjects on a sounder and more objective footing. The best information on early population movements is now being obtained from the ‘archaeology of the living body’, the clues to be found in genetic material.</p><p><strong>B</strong></p><p><strong>Recent work on the problem of when people first entered the Americas is an example of the value of these new techniques.</strong> North-east Asia and Siberia have long been accepted as the launching ground for the first human colonizers of the New World. But was there one major wave of migration across the Bering Strait into the Americas, or several? And when did this event, or events, take place? <strong>In recent years, new clues have come from research into genetics</strong>, including the distribution of genetic markers in modern Native Americans.</p><p><strong>C</strong></p><p>An important project, led by the biological anthropologist <strong>Robert Williams</strong>, focused on the <strong>variants (called Gm allotypes) of</strong> <strong>one particular protein</strong> - immunoglobin G- found in the <strong>fluid portion of human blood</strong>. All proteins ‘drift’, or produce variants, over the generations, and members of an interbreeding human population will share a set of such variants. Thus, by comparing the Gm allotypes of two different populations (e.g. two Indian tribes), one can establish their genetic ‘distance’, <strong>which itself can be calibrated to give an indication of the length of time since these populations last interbred</strong>.</p><p><strong>D</strong></p><p>Williams and his colleagues sampled the blood of over 5,000 American Indians in western North America during a twenty-year period. They found that their Gm allotypes could be divided into two groups, one of which also corresponded to the genetic typing of Central and South American Indians. <strong>Other tests showed that the Inuit (or Eskimo) and Aleut formed a third group</strong>. <strong>From this evidence it was deduced that there had been three major waves of migration across the Bering Strait.</strong> <strong>The first, Paleo-Indian, wave more than 15,000 years ago was ancestral to all Central and South American Indians.</strong> The second wave, about 14,000 12,000 years ago, brought Na-Dene hunters, ancestors of the Navajo and Apache (who only migrated south from Canada about 600 or 700 years ago). The third wave, perhaps 10,000 or 9,000 years ago, saw the migration from North-east Asia of groups ancestral to the modern Eskimo and Aleut.</p><p><strong>E</strong></p><p><strong>How far does other research support these conclusions</strong> Geneticist Douglas Wallace has studied mitochondrial DNA in blood samples from three widely separated Native American groups: <strong>Pima-Papago Indians in Arizona, Maya Indians on the Yucatanpeninsula, Mexico,</strong> and <strong>Ticuna Indians in the Upper Amazon region of Brazil.</strong> As would have been predicted by Robert Williams’s work, <strong>all three groups appear to be descended from the same ancestral (Paleo-Indian) population</strong>.</p><p><strong>F</strong></p><p><strong>There are two other kinds of research that have thrown some light on the origins of the Native American population;</strong> they involve the study of teeth and of languages. The biological anthropologist Christy Turner is an expert in the analysis of changing physical characteristics in human teeth. He argues that tooth crowns and roots have a high genetic component, minimally affected by environmental and other factors Studies carried out by <strong>Turner of many thousands of New and Old World specimens</strong>, both ancient and modern, suggest that the majority of prehistoric Americans <strong>are linked to Northern Asian populations by crown and root traits such as incisor shoveling</strong> (a scooping out on one or both surfaces of the tooth), <strong>single-rooted upper first premolars6 and triple-rooted lower first molars</strong>.</p><p>According to Turner, this ties in with the idea of a single Paleo-Indian migration out of North Asia, which he sets at before 14,000 years ago by calibrating rates of dental micro-evolution. <strong>Tooth analyses also suggest that there were two later migrations of Na-Denes and Eskimo-Aleut</strong>.</p><p><strong>G</strong></p><p>The linguist Joseph Greenberg has, since the 1950s, <strong>argued that all Native American languages belong to a single ‘Amerind’ family, except for Na-Dene and Eskimo-Aleut</strong> - a view that gives credence to the idea of three main migrations. Greenberg is in a minority among fellow linguists, most of whom favour the notion of a great many waves of migration to account for the more than 1,000 languages spoken at one time by American Indians. <strong>But there is no doubt that the new genetic and dental evidence provides strong backing for Greenberg’s view.</strong> Dates given for the migrations should nevertheless be treated with caution, except where supported by hard archaeological evidence.</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/24/ielts-reading-2/2.jpeg"></div><h2 id="剑6-TEST1-1"><a href="#剑6-TEST1-1" class="headerlink" title="剑6-TEST1.1"></a>剑6-TEST1.1</h2><p><strong>AUSTRALIA’S SPORTING SUCCESS</strong></p><p>A  They play hard, they play often, and they play to win. Australian sports teams win more than their fair share of titles, demolishing rivals with seeming ease. How do they do it? A big part of the secret is an extensive and expensive network of sporting academies underpinned by science and medicine. At the Australian Institute of Sport (AIS), hundreds of youngsters and pros live and train under the eyes of coaches. Another body, the Australian Sports Commission (ASC), finances programmes of excellence in a total of 96 sports for thousands of sportsmen and women. Both provide intensive coaching, training facilities and nutritional advice.</p><details>  <summary>点我查看解析</summary>  <div>fair share of titles: fair 除了公平，还有「应有」的意思。titles 表示头衔，这里引申为「荣誉」。</div>  <div>demolishing rivals with seeming ease: demolish 是摧残，破坏的意思，这里表示「摧枯拉朽地击败对手」。</div>  <div>underpinned: =based on 基于</div>  <div>intensive coaching: 加强版的训练。强化指导。</div>  <div>这段主要是综述了澳大利亚的运动员可以在国际赛事中取的辉煌成绩的背后原因——这个秘密的一个重要部分是一个以科学和医学为基础的广泛而昂贵的体育学院网络。</div></details><br><p>B  Inside the academies, science takes centre stage. The AIS employs more than 100 sports scientists and doctors, and collaborates with scores of others in universities and research centres. AIS scientists work across a number of sports, applying skills learned in one - such as building muscle strength in golfers - to others, such as swimming and squash. They are backed up by technicians who design instruments to collect data from athletes. They all focus on one aim: winning. ‘We can’t waste our time looking at ethereal scientific questions that don’t help the coach work with an athlete and improve performance,’ says Peter Fricker, chief of science at AIS.</p><details>  <summary>点我查看解析</summary>  <div>collaborates with scores of others in universities: scores 在这里表示人员的意思。</div>  <div>squash: 壁球。</div>  <div>ethereal: 空洞的、空灵的。</div>  <div>chief: 主管。</div>  <div>这段主要是讲述了，AIS招聘科学家的用处——只有一个目标，为了帮助运动员称为冠军。为此，没有必要去研究空洞的科学问题。</div></details><br><p>C  A lot of their work comes down to measurement - everything from the exact angle of a swimmer’s dive to the second-by-second power output of a cyclist. This data is used to wring improvements out of athletes. The focus is on individuals, tweaking performances to squeeze an extra hundredth of a second here, an extra millimetre there. No gain is too slight to bother with. It’s the tiny, gradual improvements that add up to world-beating results. To demonstrate how the system works, Bruce Mason at AIS shows off the prototype of a 3D analysis tool for studying swimmers. A wire-frame model of a champion swimmer slices through the water, her arms moving in slow motion. Looking side-on, Mason measures the distance between strokes. From above, he analyses how her spine swivels. When fully developed, this system will enable him to build a biomechanical profile for coaches to use to help budding swimmers. Mason’s contribution to sport also includes the development of the SWAN (SWimming ANalysis)system now used in Australian national competitions. It collects images from digital cameras running at 50 frames a second and breaks down each part of a swimmer’s performance into factors that can be analysed individually - stroke length, stroke frequency, average duration of each stroke, velocity, start, lap and finish times, and so on. At the end of each race, SWAN spits out data on each swimmer.</p><details>  <summary>点我查看解析</summary>  <div>comes down to: 归结于，归因于。</div>  <div>wring improvements out of athletes: 直译：榨取运动员的进步。=促进运动员的进步（一种更为激烈的口吻）。和后文的 squeeze an extra hundredth of a second 相呼应。</div>  <div>tweaking: 拧，调整。</div>  <div>too slight to bother with: 微不足道的。</div>  <div>world-beating results: 举世瞩目的成果。</div>  <div>wire-frame model: 线框模型，广泛用于建模领域，属于现实事物的抽象、简化版。</div>  <div>Looking side-on: 从一旁看着。</div>  <div>swivel: 旋转。</div>  <div>help budding swimmers: budding 是发育，一般用于种子发育。这里表示运动员的成长。</div>  <div>stroke: 区分于 strike，strike 一般用于击打动作，stroke 用于划动作。stroke 还有中风、轻抚、举动的意思。表示击打一般只用于敲击键盘和击球。</div>  <div>spit out: 输出。</div>  <div>这段主要是讲述了「测量」在帮助运动员的过程中是怎么做的——AIS 的 Bruce Mason 展示了用于研究游泳运动员的 3D 分析工具原型，以及澳大利亚国家比赛中使用的 SWAN（游泳分析）系统。</div></details><br><p>D  ‘Take a look,’ says Mason, pulling out a sheet of data. He points out the data on the swimmers in second and third place, which shows that the one who finished third actually swam faster. So why did he finish 35 hundredths of a second down? ‘His turn times were 44 hundredths of a second behind the other guy,’ says Mason. ‘If he can improve on his turns, he can do much better’ This is the kind of accuracy that AIS scientists’ research is bringing to a range of sports.</p><p>With the Cooperative Research Centre for Micro Technology in Melbourne, they are developing unobtrusive sensors that will be embedded in an athlete’s clothes or running shoes to monitor heart rate, sweating, heat production or any other factor that might have an impact on an athlete’s ability to run. There’s more to it than simply measuring performance. Fricker gives the example of athletes who may be down with coughs and colds 11 or 12 times a year. After years of experimentation, AlS and the University of Newcastle in New South Wales developed a test that measures how much of the immune-system protein immunoglobulin A is present in athletes’ saliva. If IgA levels suddenly fall below a certain level, training is eased or dropped altogether. Soon, IgA levels start rising again, and the danger passes. Since the tests were introduced, AIS athletes in all sports have been remarkably successful at staying healthy.</p><details>  <summary>点我查看解析</summary>  <div>pulling out: 拿出了...</div>  <div>in second and third place: 第二名和第三名。</div>  <div>finish 35 hundredths of a second down: down 在这里表示落后的意思，还要注意下百分之三十五的表达，关键词是 hundredths，这里并没有使用普通的 percent 表达。</div>  <div>is the kind of accuracy: 这里等同于 a series of 表示一系列。</div>  <div>Melbourne: 墨尔本。</div>  <div>unobtrusive: 不引人注目的，不招摇的。</div>  <div>University of Newcastle in New South Wales: 纽卡斯尔大学（新南威尔士）。</div>  <div>immunoglobulin: 免疫球蛋白，一般看到的 lgA 就表示免疫球蛋白A。</div>  <div>saliva: 唾液，olivia 有表示橄榄的意思。</div>  <div>remarkably: 显著的。</div>  <div>第一段主要讲述了（在上一段中）拿到的分析数据，的使用例子。分析了为什么一个运动员明明游的更快，却落后的原因——是因为转弯的时候落后了。</div>  <div>第二段主要讲述了传感器开发，不仅仅是为了监测心率、出汗、产热或任何其他可能影响运动员能力的因素（比赛性能），还进一步守护健康，让运动员不至于在免疫力低下的时候训练。</div></details><br><p>E  Using data is a complex business. Well before a championship, sports scientists and coaches start to prepare the athlete by developing a ‘competition model’, based on what they expect will be the winning times. ‘You design the model to make that time,’ says Mason. ‘A start of this much, each free-swimming period has to be this fast, with a certain stroke frequency and stroke length, with turns done in these times.’ All the training is then geared towards making the athlete hit those targets, both overall and for each segment of the race. Techniques like these have transformed Australia into arguably the world’s most successful sporting nation.</p><p>F  Of course, there’s nothing to stop other countries copying—and many have tried. Some years ago, the AIS unveiled coolant-lined jackets for endurance athletes. At the Atlanta Olympic Games in 1996, these sliced as much as two percent off cyclists’ and rowers’ times. Now everyone uses them. The same has happened to the ‘altitude tent’, developed by AIS to replicate the effect of altitude training at sea level. But Australia’s success story is about more than easily copied technological fixes, and up to now no nation has replicated its all-encompassing system.</p><details>  <summary>点我查看解析</summary>  <div>championship: 锦标赛。</div>  <div>be geared towards: be aimed to 目标是，旨在</div>  <div>slice: 切片，但是它可以被借用为缩短的意思（因为切断了和缩短有引申义）。</div>  <div>replicate: 复制，复刻。同 reproduce。</div>  <div>encompassing: 无所不包的，包罗万象的。</div>  <div>第一段主要讲述了，使用科学方法获得的数据的使用。打个比方，通过数据设计出来的比赛模型下，需要多少秒才可以赢得比赛，那么，训练就要按照这个时间去做。诸如此类的措施已经让澳大利亚变成了最成功的体育国家。</div>  <div>这段主要是讲述了，AIS招聘科学家的用处——只有一个目标，为了帮助运动员称为冠军。为此，没有必要去研究空洞的科学问题。</div></details><br><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/24/ielts-reading-2/3.jpeg"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="英语学习" scheme="https://blog.pengdonglai.com/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="English" scheme="https://blog.pengdonglai.com/tags/English/"/>
    
    <category term="阅读" scheme="https://blog.pengdonglai.com/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>通过一些句子增加雅思听力词汇（4）</title>
    <link href="https://blog.pengdonglai.com/2023/10/21/ielts-listening-words-4/"/>
    <id>https://blog.pengdonglai.com/2023/10/21/ielts-listening-words-4/</id>
    <published>2023-10-21T04:30:21.000Z</published>
    <updated>2024-06-03T17:04:59.352Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><audio src="audio.mp3" controls loop preload="metadata">  你的浏览器不支持 audio 标签。</audio><p>No.145  And there is an increased need to resolve social problems as people begin to compete for resources.</p><p>由于人们为资源相互竞争，越来越多的社会问题也需要解决。</p><p>No.146  The third strategy is to avoid the <strong>drought</strong> conditions.</p><p>第三种策略是避免干旱。</p><p>No.147  Surveys indicate that almost everybody cares about the environment.</p><p>调查表明几乎所有人都对环境表示关心。</p><p>No.148  Individuals, people, could govern themselves, without the need for kings and queens.</p><p>个体、人民能够管理自己，不需要国王和王后。</p><p>No.149  Some of them <strong>utilized</strong> stone structures called “stone canoes”</p><p>有些人用石制结构，叫做石舟。</p><p>No.150  The geocentric theory continued to <strong>prevail</strong> in Western thought for almost 2, 000 years.</p><p>地心说理论在西方国家持续流行了两千多年。</p><p>No.151  The phones <strong>interfere</strong> with the radio communication at the airport.</p><p>电话引号干扰了机场的无线电通信。</p><p>No.152  Light hits the water <strong>droplets</strong> and is <strong>scattered</strong> in random directions.</p><p>光照到小水珠上，并向随机的方向分散。</p><p>No.153  There are a lot of <strong>marine</strong> plants that survive, grow, and <strong>reproduce</strong> in surface waters.</p><p>有很多的海洋生物在水域表面生存、长大、繁殖。</p><p>No.154  So, the assignment is to reproduce one of the animal <strong>camouflage</strong> experiments.</p><p>我们的作业是复制一个动物伪装的实验。</p><p>No.155  The rooms were arranged around a <strong>chimney</strong> in the center of the house.</p><p>房间被安排在房屋中心的烟囱周围。</p><p>No.156  Wind and water are constantly <strong>crashing</strong> into these plants.</p><p>风和潮水会持续地冲刷撞击这些植物（海边的植物）。</p><p>No.157  And different colors appeal to or inspire different emotions in different people.</p><p>不同的颜色会吸引不同人，或者激发不同的情感。</p><p>No.158  Maybe there was some kind of a climate <strong>shift</strong>?</p><p>也许曾经有一些气候变化？</p><p>No.159  Operas quit being <strong>presented</strong> in Latin and started being presented in Italian.</p><p>歌剧不再用拉丁文，而开始用意大利语了。</p><p>No.160  This relatively low <strong>compact</strong> structure helps the house <strong>withstand</strong> the strong winds <strong>blowing off</strong> the ocean.</p><p>这种相对低矮结实的房屋结构会有助于房屋承受海洋刮来的强风。</p><p>No.161  It was <strong>customary</strong> to <strong>scrape</strong> <strong>away</strong> the surface of the <strong>parchment</strong> with an <strong>abrasive</strong>.</p><p>用研磨料来刮掉羊皮纸表面（的字迹）是很习惯的（做法）。</p><p>No.162  The characters <strong>resemble</strong> real people.</p><p>这些角色像真人。</p><p>No.163  Memory tests were never performed on young children.</p><p>记忆力实验从来没在小孩子身上做（进行）过。</p><p>No.164  The <strong>optic</strong> nerve connects the back of the eye to the brain.</p><p>视觉神经把眼睛的背面和大脑连接起来。</p><p>No.165  Professors want to notify you of changes to class schedules.</p><p>教授想通知你关于课程表的变动。</p><p>No.166  Organic farms don’t use chemical <strong>pesticides</strong> or anything that can pollute the soil or the water.</p><p>有机农场不会使用化学杀虫剂这种会污染水或土壤的东西。</p><p>No.167  Then classify them based on <strong>similarities</strong> and <strong>differences</strong>.</p><p>然后根据相同点和不同点来分类他们。</p><p>No.168  <strong>Sulfuric</strong> acid <strong>dissolves</strong> <strong>limestone</strong>, right?</p><p>硫酸能溶解石灰岩，对吧？</p><p>No.169  New standards for sculpture, standards that <strong>emphasized</strong> form rather than color.</p><p>新的雕塑标准，重视形式而非颜色。</p><p>No.170  Andrew Carnegie was particularly admired for his <strong>generosity</strong>.</p><p>安德鲁 · 卡耐基因他的慷慨而受到敬仰。</p><p>No.171  We don’t have time to start <strong>from scratch</strong>.</p><p>我们没时间从头再来。</p><p>No.172  He divided all living things into two groups.</p><p>他把生物分成两组。</p><p>No.173  Scientists can identify the type of plant from <strong>ancient remains</strong>.</p><p>科学家可以从远古残骸中鉴别出植物的类型。</p><p>No.174  The population <strong>soared</strong> in the early 1800s.</p><p>十九世纪初，人口激增。</p><p>No.175  Large heavy <strong>mortars</strong>, the sort of thing that would have been used for grinding grain.</p><p>大的研钵，这种东西可以用来研磨食物。</p><p>No.176  So when water <strong>evaporates</strong> from the ocean, it takes energy to convert that water into a <strong>gaseous</strong> <strong>form</strong>, into water <strong>vapor</strong>.</p><p>所以当水从海洋蒸发时，需要能量来把水转换成气态形式成水蒸气。</p><p>No.177  About 30 years ago, a <strong>geologist</strong> named Edward Cotter, published a paper that contained a very interesting hypothesis.</p><p>三十年前，一个叫科特的地质学家，发表了一篇论文，包含了一个很有趣的假说。</p><p>No.178  There are elephants, which <strong>descended from</strong> <strong>mastodons</strong>.</p><p>大象起源于乳齿象（是乳齿象的后代）。</p><p>No.179  Color film hadn’t even been <strong>invented</strong> yet.</p><p>那时彩色胶片还没有发明。</p><p>No.180  Different types of <strong>atoms</strong> <strong>glow</strong> in different colors.</p><p>不同类型的原子发出不同颜色的光。</p><p>No.181  Such forces could actually <strong>alter</strong> a moon’s orbit.</p><p>这种力量实际上可以改变月球的轨道。</p><p>No.182  As you know, <strong>microbes</strong> are <strong>microorganisms</strong> like bacteria that help to <strong>digest</strong> or <strong>break down</strong> food.</p><p>细菌帮助去消化或者分解食物。</p><p>No.183  Features such as color, <strong>scent</strong>, and shape attract <strong>pollinators</strong>.</p><p>像是颜色、气味和形状之类的特征会吸引传粉者。</p><p>No.184  Soon, the text began to be more widely <strong>circulated</strong> through the Middle East.</p><p>很快这篇文章开始更为广泛第在中东流传。</p><p>No.185  And these <strong>spots</strong> are so important because many animals rely on <strong>microclimate</strong> to <strong>regulate</strong> their body temperature.</p><p>而这些地区很是重要，因为很多动物就是依靠小气候来调节其身体温度的。</p><p>No.186  To get that <strong>perfection</strong>, the engineer must have had to measure it repeatedly during construction.</p><p>要达到那个完美程度，工程师必须在建造过程中重复地测量。</p><p>No.187  I get it, so it’s mainly for people who decide to <strong>withdraw</strong> from to change to new courses early on.</p><p>我懂了，这个主要是为那些想要退课、早点换新课。</p><p>No.188  Well, the internship requires me to have a <strong>scuba</strong> diving <strong>certification</strong>.</p><p>这个实习要求我有潜水证。</p><p>No.189  They swallow stones, <strong>smashing</strong> food up, just as we do when we chew.</p><p>他们吞下石头，碾碎食物，就像我们咀嚼的时候一样。</p><p>No.190  But two of our <strong>faculty</strong> accompany each group and also give <strong>seminars</strong>.</p><p>但是教职员工的其中两人会分别配每个组，讲研讨课。</p><p>No.191  The same species are <strong>isolated</strong> from each other and then develop into two different directions and end up as two <strong>distinct</strong> species.</p><p>相同的物种彼此隔离，然后他们向两个不同的方向发展最终成了两个不同的物种。</p><p>No.192  Researchers have long been interested in whether animals <strong>possess</strong> this capability.</p><p>研究人员一直都对动物是否具有这样的能力感兴趣。</p><p>No.193  Two stars that arise at the same time.</p><p>两颗星星同时出现。</p><p>No.194  His <strong>proposition</strong> was rejected based on other scientific beliefs I held at the time.</p><p>他的提议被当时的科学观点所反对。</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/21/ielts-listening-words-4/1.webp"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="英语学习" scheme="https://blog.pengdonglai.com/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="English" scheme="https://blog.pengdonglai.com/tags/English/"/>
    
    <category term="单词" scheme="https://blog.pengdonglai.com/tags/%E5%8D%95%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>部分剑桥雅思的做题记录和沉淀（1）</title>
    <link href="https://blog.pengdonglai.com/2023/10/19/ielts-reading-1/"/>
    <id>https://blog.pengdonglai.com/2023/10/19/ielts-reading-1/</id>
    <published>2023-10-19T14:19:25.000Z</published>
    <updated>2024-06-03T17:04:59.368Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="剑7-TEST2-3"><a href="#剑7-TEST2-3" class="headerlink" title="剑7-TEST2.3"></a>剑7-TEST2.3</h2><p><strong>Makete Integrated Rural Transport Project</strong></p><p><strong>Section A</strong></p><p>The disappointing results of many conventional road transport projects in Africa led some experts to rethink the strategy by which rural transport problems were to be tackled at the beginning of the 1980s. A request for help in improving the availability of transport within the remote Makete District of south-western Tanzania presented the opportunity to try a new approach.</p><p>The concept of ‘integrated rural transport’ was adopted in the task of examining the transport needs of the rural households in the district. The objective was to reduce the time and effort needed to obtain access to essential goods and services through an improved rural transport system. The underlying assumption was that the time saved would be used instead for activities that would improve the social and economic development of the communities. The Makete Integrated Rural Transport Project (MIRTP) started in 1985 with financial support from the Swiss Development Corporation and was coordinated with the help of the Tanzanian government.</p><details>  <summary>点我查看解析</summary>  <div>integrated: 综合的（完整统一的、密切协调的）</div>  <div>underlying: 基本的（潜在的）</div>  <div>households: 家庭的</div>  <div>Section A 主要讲了 MIRTP 的背景。第一段主要是讲了坦桑尼亚西南部的交通困难，第二段主要是讲了“农村综合交通”的概念的目标，以及（为了这个目标）MIRTP 被提出的背景。</div></details><br><p><strong>Section B</strong></p><p>When the project began, Makete District was virtually totally isolated during the rainy season. The regional road was in such bad shape that access to the main towns was impossible for about three months of the year. Road traffic was extremely rare within the district, and alternative means of transport were restricted to donkeys in the north of the district. People relied primarily on the paths, which were slippery and dangerous during the rains.</p><p>Before solutions could be proposed, the problems had to be understood. Little was known about the transport demands of the rural households, so Phase I, between December 1985 and December 1987, focused on research. The socio-economic survey of more than 400 households in the district indicated that a household in Makete spent, on average, seven hours a day on transporting themselves and their goods, a figure which seemed extreme but which has also been obtained in surveys in other rural areas in Africa. Interesting facts regarding transport were found: 95% was on foot; 80% was within the locality; and 70% was related to the collection of water and firewood and traveling to grinding mills.</p><details>  <summary>点我查看解析</summary>  <div>socio-economic: 社会经济的</div>  <div>grinding mills: 磨坊</div>  <div>Section B 主要讲了项目的第一阶段，刚开始的时候，交通极为不便。想解决问题必须得了解问题，在调查中发现大部分人每天花很长时间在交通上</div></details><br><p><strong>Section C</strong></p><p>Having determined the main transport needs, possible solutions were identified which might reduce the time and burden. During Phase II, from January to February 1991, a number of approaches were implemented in an effort to improve mobility and access to transport. An improvement of the road network was considered necessary to ensure the import and export of goods to the district. These improvements were carried out using methods that were heavily dependent on labour.</p><p>In addition to the improvement of roads, these methods provided training in the operation of a mechanical workshop and bus and truck services. However, the difference from the conventional approach was that this time consideration was given to local transport needs outside the road network.</p><p>Most goods were transported along the paths that provide short-cuts up and down the hillsides, but the paths were a real safety risk and made the journey on foot even more arduous. It made sense to improve the paths by building steps, handrails and footbridges.</p><p>It was uncommon to find means of transport that were more efficient than walking but less technologically advanced than motor vehicles. The use of bicycles was constrained by their high cost and the lack of available spare parts. Oxen were not used at all but donkeys were used by a few households in the northern part of the district. MIRTP focused on what would be most appropriate for the inhabitants of Makete in terms of what was available, how much they could afford and what they were willing to accept. After careful consideration, the project chose the promotion of donkeys - a donkey costs less than a bicycle - and the introduction of a locally manufacturable wheelbarrow.</p><details>  <summary>点我查看解析</summary>  <div>arduous: 艰辛的</div>  <div>wheelbarrow、barrow: 独轮车</div>  <div>Section C 主要讲了项目的二阶段，用于增加流动性和交通的便利性。除了成本道路之外，考虑到了该地区的环境让徒步变的不容易，但是又很难找到比徒步更好的交通方式——因此选择了驴。</div></details><br><p><strong>Section D</strong></p><p>At the end of Phase II, it was clear that the selected approaches to Makete’s transport problems had different degrees of success. Phase III, from March 1991 to March 1993, focused on the refinement and institutionalisation of these activities.</p><p>The road improvements and accompanying maintenance system had helped make the district centre accessible throughout the year. Essential goods from outside the district had become more readily available at the market, and prices did not fluctuate as much as they had done before.</p><p>Paths and secondary roads were improved only at the request of communities who were willing to participate in construction and maintenance. However, the improved paths impressed the inhabitants, and request for assistance greatly increased soon after only a few improvements had been completed.</p><p>The efforts to improve the efficiency of the existing transport services were not very successful because most of the motorised vehicles in the district broke down and there were no resources to repair them. Even the introduction of low-cost means of transport was difficult because of the general poverty of the district. The locally manufactured wheelbarrows were still too expensive for all but a few of the households. Modifications to the original design by local carpenters cut production time and costs. Other local carpenters have been trained in the new design so that they can respond to requests. Nevertheless, a locally produced wooden wheelbarrow which costs around 5000 Tanzanian shillings (less than US$20) in Makete, and is about one quarter the cost of a metal wheelbarrow, is still too expensive for most people.</p><p>Donkeys, which were imported to the district, have become more common and contribute, in particular, to the transportation of crops and goods to market. Those who have bought donkeys are mainly from richer households but, with an increased supply through local breeding, donkeys should become more affordable. Meanwhile, local initiatives are promoting the renting out of the existing donkeys.</p><p>It should be noted, however, that a donkey, which at 20,000 Tanzanian shillings costs less than a bicycle, is still an investment equal to an average household’s income over half a year. This clearly illustrates the need for supplementary measures if one wants to assist the rural poor.</p><details>  <summary>点我查看解析</summary>  <div>institutionalisation、institutionalization: 制度化</div>  <div>refinement: 细致化、精致化</div>  <div>readily: 乐意的、爽快的、容易的</div>  <div>Section D 主要讲了项目的三阶段，项目进入 refinement 阶段——理由是，即便有不少措施在实施，还是有不少困难之处在。这里举例了独轮车和驴，仍然太贵来做举例——如果真的想帮到他们，那么 supplementary measures should be done.</div></details><br><p><strong>Section E</strong></p><p>It would have been easy to criticise the MIRTP for using in the early phases a’top-down’ approach, in which decisions were made by experts and officials before being handed down to communities, but it was necessary to start the process from the level of the governmental authorities of the district. It would have been difficult to respond to the requests of villagers and other rural inhabitants without the support and understanding of district authorities.</p><p><strong>Section F</strong></p><p>Today, nobody in the district argues about the importance of improved paths and inexpensive means of transport. But this is the result of dedicated work over a long period, particularly from the officers in charge of community development. They played an essential role in raising awareness and interest among the rural communities.</p><p>The concept of integrated rural transport is now well established in Tanzania, where a major program of rural transport is just about to start. The experiences from Makete will help in this initiative, and Makete District will act as a reference for future work.</p><details>  <summary>点我查看解析</summary>  <div>Section E 主要说明了当地政府力量在这个项目中的协作。MIRTP 自顶向下可以被批评，但是在 response the requests of rural inhabitants 的时候政府力量帮忙做了 support 和 understanding。</div>  <div>Section F 主要讲了 MIRTP 对坦桑尼亚其它地区有借鉴意义，说的是未来影响。will act as a reference for future work.</div></details><br><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/19/ielts-reading-1/1.png"></div><h2 id="剑7-TEST3-3"><a href="#剑7-TEST3-3" class="headerlink" title="剑7-TEST3.3"></a>剑7-TEST3.3</h2><p>Forests are one of the main elements of our natural heritage. The decline of Europe’s forests over the last decade and a half has led to an increasing awareness and understanding of the serious imbalances which threaten them. European countries are becoming increasingly concerned by major threats to European forests, threats which know no frontiers other than those of geography or climate: air pollution, soil deterioration, the increasing number of forest fires and sometimes even the mismanagement of our woodland and forest heritage. There has been a growing awareness of the need for countries to get together to co-ordinate their policies. In December 1990, Strasbourg hosted the first Ministerial Conference on the protection of Europe’s forests. The conference brought together 31 countries from both Western and Eastern Europe. The topics discussed included the <strong>coordinated study of the destruction of forests, as well as how to combat forest fires and the extension of European research programs on the forest ecosystem</strong>. The preparatory work for the conference had been undertaken at two meetings of experts. Their initial task was to decide which of the many forest problems of concern to Europe involved the largest number of countries and might be the subject of joint action. Those confined to particular geographical areas, such as countries bordering the Mediterranean or the Nordic countries therefore had to be discarded. However, this does not mean that in future they will be ignored.</p><details>  <summary>点我查看解析</summary>  <div>deterioration: 恶化</div>  <div>heritage: 遗产，财产</div>  <div>Ministerial: 部长的，大臣的</div>  <div>combat: 扑灭</div>  <div>preparatory: 准备性的，prepare 的形容词</div>  <div>joint action: 联合行动</div>  <div>Nordic countries: 北欧国家</div>  <div>第一段为大概的概述段，首先引出欧洲的森林急剧减少的问题，为了应对这些问题，欧洲各国需要联合起来。1990年，斯特拉斯堡主办了第一届保护欧洲森林部长级会议，需要看看在欧洲关心的问题之中，哪些国家涉及到的最多。</div></details><br><p>As a whole, European countries see forests as <strong>performing a triple function</strong>: biological, economic and recreational. <strong>The first is to act as a ‘green lung’ for our planet</strong>; by means of photosynthesis, forests produce oxygen through the transformation of solar energy, thus fulfilling what for humans is the essential role of an immense, non-polluting power plant. <strong>At the same time, forests provide raw materials for human activities through their constantly renewed production of wood</strong>. Finally, they offer those condemned to spend five days a week in an urban environment an unrivalled area of freedom to unwind and take part in a range of leisure activities, such as hunting, riding and hiking. The economic importance of forests has been understood since the dawn of man - wood was the first fuel. The other aspects have been recognised only for a few centuries but they are becoming more and more important. Hence, there is a real concern throughout Europe about the damage to the forest environment which threatens these three basic roles.</p><details>  <summary>点我查看解析</summary>  <div>recreational: 娱乐性</div>  <div>photosynthesis: 光合作用</div>  <div>immense: 巨大的</div>  <div>unrivaled、unrivalled: 无与伦比的</div>  <div>unwind: 放松</div>  <div>dawn: 黎明，诞生，起源</div>  <div>Hence: 因此，同 Therefore</div>  <div>这段主要说明了欧洲人认为森林的三个作用：biological, economic and recreational</div></details><br><p>The myth of the ‘natural’ forest has survived, yet there are effectively no remaining ‘primary’ forests in Europe. All European forests are artificial, having been adapted and exploited by man for thousands of years. This means that a forest policy is vital, <strong>that it must transcend national frontiers and generations of people</strong>, and that it must allow for the inevitable changes that take place in the forests, <strong>in needs, and hence in policy</strong>. The Strasbourg conference was one of the first events on such a scale to reach this conclusion. A general declaration was made that ‘a central place in any ecologically coherent forest policy must be given to <strong>continuity over time</strong> and to the <strong>possible effects of unforeseen events</strong>, to ensure that the full <strong>potential of these forests is maintained</strong>‘.</p><details>  <summary>点我查看解析</summary>  <div>myth: 神话</div>  <div>这段从所有的森林都是人工森林（这意味着所有的森林已经开发了几千年），需要指定超越边界的政策。那么斯特拉斯堡会议是首次达成这一结论的大规模活动之一。强调了做出的政策必须超越时间、具有预见性</div></details><br><p>That general declaration was accompanied by <strong>six detailed resolutions</strong> to assist national policy-making. <strong>The first</strong> proposes the <strong>extension and systematisation of surveillance sites to monitor</strong> <strong>forest decline</strong>. Forest decline is still poorly understood but leads to the loss of a high proportion of a tree’s needles or leaves. The entire continent and the majority of species are now affected: between 30% and 50% of the tree population. The condition appears to result from the cumulative effect of a number of factors, with atmospheric pollutants the principal culprits. Compounds of nitrogen and sulphur dioxide should be particularly closely watched. <strong>However, their effects are probably accentuated by climatic factors</strong>, such as drought and hard winters, or soil imbalances such as soil acidification, which damages the roots. <strong>The second resolution</strong> concentrates on the need to preserve the <strong>genetic diversity of European forests</strong>. The aim is to reverse the decline in the number of tree species or at least to preserve the ‘genetic material’ of all of them. Although forest fires do not affect all of Europe to the same extent, the amount of damage caused the experts to propose as the third resolution that <strong>the Strasbourg conference consider the establishment of a European database on the subject</strong>. All information used in the development of national preventative policies would become generally available. The subject of the fourth resolution discussed by the ministers was <strong>mountain forests</strong>. In Europe, it is undoubtedly the mountain ecosystem which has changed most rapidly and is most at risk. A thinly scattered permanent population and development of leisure activities, particularly skiing, have resulted in significant long-term changes to the local ecosystems. <strong>Proposed developments include preferential research program on mountain forests</strong>. <strong>The fifth resolution relaunched the European research network on the physiology of trees, called Eurosilva</strong>. Eurosilva should support joint European research on tree diseases and their physiological and biochemical aspects. Each country concerned could increase the number of scholarships and other financial support for doctoral theses and research projects in this area. <strong>Finally, the conference established the framework for a European research network on forest ecosystems</strong>. This would also involve harmonising activities in individual countries as well as identifying a number of priority research topics relating to the protection of forests. The Strasbourg conference’s main concern was to provide for the future. This was the initial motivation, one now shared by all 31 participants representing 31 European countries. Their final text commits them to on-going discussion between government representatives with responsibility for forests.</p><details>  <summary>点我查看解析</summary>  <div>systematisation、systematization: 系统化</div>  <div>surveillance: 系统化</div>  <div>cumulative: 积累性的</div>  <div>accentuate: 加剧</div>  <div>thinly scattered: 渐渐零散的（日渐稀疏）</div>  <div>physiology: 生理学</div>  <div>on-going、ongoing: 持续的</div>  <div>这段主要从六个方面的解决方案，来阐述对这些政策制定的帮助。</div></details><br><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/19/ielts-reading-1/2.jpeg"></div><h2 id="剑7-TEST4-3"><a href="#剑7-TEST4-3" class="headerlink" title="剑7-TEST4.3"></a>剑7-TEST4.3</h2><p><strong>EFFECTS OF NOISE</strong></p><p>In general, it is plausible to suppose that we should prefer peace and quiet to noise. And yet most of us have had the experience of having to adjust to sleeping in the mountains or the countryside because it was initially ‘too quiet’, an experience that suggests that humans are capable of adapting to a wide range of noise levels. Research supports this view. For example, Glass and Singer (1972) exposed people to short bursts of very loud noise and then measured their ability to work out problems and their physiological reactions to the noise. <strong>The noise was quite disruptive at first, but after about four minutes the subjects were doing just as well on their tasks as control subjects who were not exposed to noise.</strong> Their physiological arousal also declined quickly to the same levels as those of the control subjects.</p><details>  <summary>点我查看解析</summary>  <div>plausible: 似是而非的</div>  <div>arousal: 唤醒</div>  <div>control subjects: 对照组</div>  <div>这段首先踢出来一个反常识但是符合直觉的观点：虽然大家偏爱安静的环境，但是却也可以忍受喧闹的环境。在 Glass and Singer 1927 年的研究之中，一开始噪音相当具有破坏性，但大约四分钟后，受试者的任务表现与未接触噪音的对照受试者一样好。</div></details><br><p>But there are limits to adaptation and loud noise becomes <strong>more troublesome if the person is required to concentrate on more than one task.</strong> For example, high noise levels interfered with the performance of subjects who were required to monitor three dials at a time, a task not unlike that of an airplane pilot or an air-traffic controller (Broadbent, 1957). <strong>Similarly</strong>, noise did not affect a subject’s ability to track a moving line with a steering wheel, <strong>but it did interfere with the subject’s ability to repeat numbers while tracking</strong> (Finkelman and Glass, 1970).</p><p>Probably the most significant finding from research on noise is that <strong>its predictability is more important than how loud it is.</strong> We are much more able to ‘tune out’ chronic background noise, even if it is quite loud, than to work under circumstances with unexpected intrusions of noise. In the Glass and Singer study, in which subjects were exposed to bursts of noise as they worked on a task, some subjects heard loud bursts and others heard soft bursts. For some subjects, the bursts were spaced exactly one minute apart (predictable noise); others heard the same amount of noise overall, but the bursts occurred at random intervals (unpredictable noise). <strong>Subjects reported finding the predictable and unpredictable noise equally annoying</strong>, and all subjects performed at about the same level during the noise portion of the experiment. <strong>But the different noise conditions had quite different after-effects</strong> when the subjects were required to proofread written material under conditions of no noise. As shown in Table 1 the <strong>unpredictable noise produced more errors in the later proofreading task than predictable noise</strong>; and soft, unpredictable noise actually produced slightly more errors on this task than the loud, predictable noise.</p><details>  <summary>点我查看解析</summary>  <div>proofread: 校对</div>  <div>第一段主要讲述了如果一个人需要专注于一项以上的任务，那么大声的噪音会变得更加麻烦，这个结论分别被两位学者发现。</div>  <div>第二段主要说明了噪音的「可预测性」非常重要，重要性高于「响度」。并且通过一组实验举例，虽然对照组和实验组的表现差不多，但是在实验后测试的工作中，非预测性噪音组的错误明显更多。</div></details><br><p>Unpredictable Noise Predictable Noise Average</p><table><thead><tr><th>Loud noise</th><th>40.1</th><th>31.8</th><th>35.9</th></tr></thead><tbody><tr><td>Soft noise</td><td>36.7</td><td>27.4</td><td>32.1</td></tr><tr><td>Average</td><td>38.4</td><td>29.6</td><td></td></tr></tbody></table><p> Table 1: Proofreading Errors and Noise</p><p>Apparently, unpredictable noise produces more fatigue than predictable noise, but it takes a while for this fatigue to take its toll on performance. <strong>Predictability is not the only variable that reduces or eliminates the negative effects of noise</strong>. <strong>Another is control</strong>. If the individual knows that he or she can control the noise, this seems to eliminate <strong>both its negative effects at the time and its after-effects</strong>. This is true even if the individual never actually exercises his or her option to turn the noise off (Glass and Singer, 1972). Just the knowledge that one has control is sufficient.</p><p>The studies discussed so far exposed people to noise for <strong>only short periods and only transient effects</strong> were studied. <strong>But the major worry about noisy environments is that living day after day with chronic noise may produce serious, lasting effects</strong>. One study, suggesting that this worry is a realistic one, compared elementary school pupils who attended schools near Los Angeles’s busiest airport with students who attended schools in quiet neighbourhoods (Cohen et al., 1980). It was found that children <strong>from the noisy schools had higher blood pressure and were more easily distracted</strong> than those who attended the quiet schools. Moreover, there was no evidence of adaptability to the noise. In fact, <strong>the longer</strong> the children had attended the noisy schools, <strong>the more</strong> distractible they became. The effects also seem to be long-lasting. A follow-up study showed that children who were moved to less noisy classrooms still showed greater distractibility one year later than students who had always been in the quiet schools (Cohen et al, 1981). It should be noted that the two groups of children had been carefully matched by the investigators so that they were comparable in age, ethnicity, race, and social class.</p><details>  <summary>点我查看解析</summary>  <div>ethnicity: 民族</div>  <div>race: 种族</div>  <div>comparable: 种族</div>  <div>第一段主要讲述了上一段结论的展开，说明了只要知晓有噪声的「控制权」，就可以减轻受到的影响。</div>  <div>第二段主要讲述了本文迄今为止，对噪音讨论的局限性——那就是讨论的时间尺度太短，事实上，噪音带来的更大的影响是慢性的，长期的。最后引述了 Cohen 等人的长期实验，来论证这个观点。</div></details><br><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/19/ielts-reading-1/3.jpeg"></div><h2 id="剑7-TEST4-2"><a href="#剑7-TEST4-2" class="headerlink" title="剑7-TEST4.2"></a>剑7-TEST4.2</h2><p><strong>Endless Harvest</strong></p><p>More than two hundred years ago, Russian explorers and fur hunters landed on the Aleutian Islands, a volcanic archipelago in the North Pacific, and learned of a land mass that lay farther to the north. The islands’ native inhabitants called this land mass Aleyska, the ‘Great Land’; today, we know it as Alaska.</p><p>The forty-ninth state to join the United States of America (in 1959), Alaska is fully one-fifth the size of the mainland 48 states combined. It shares, with Canada, <strong>the second longest river system in North America and has over half the coastline of the United States</strong>. The rivers feed into the Bering Sea and Gulf of Alaska - cold, nutrient-rich waters which support tens of millions of seabirds, and over 400 species of fish, shellfish, crustaceans, and mollusks. Taking advantage of this rich bounty, Alaska’s commercial fisheries have developed into some of the largest in the world.</p><details>  <summary>点我查看解析</summary>  <div>archipelago: 群岛</div>  <div>land mass: 约等于 land，就是表示一块大陆</div>  <div>shellfish, crustaceans, and mollusks: 贝类、甲壳类动物和软体动物</div>  <div>bounty: 恩惠</div>  <div>fishery、fisheries: 渔业</div>  <div>这两段主要说明了阿拉斯加的来历，历史，以及拥有丰富的资源。为下文做铺垫。</div></details><br><p>According to the Alaska Department of Fish and Game (ADF&amp;G), Alaska’s commercial fisheries landed hundreds of thousands of tonnes of shellfish and herring, and well over a million tonnes of groundfish (cod, sole, perch and pollock) in 2000. <strong>The true cultural heart and soul of Alaska’s fisheries, however, is salmon.</strong> ‘Salmon,’ notes writer Susan Ewing in The Great Alaska Nature Factbook, ‘pump through Alaska like blood through a heart, bringing rhythmic, circulating nourishment to land, animals and people.’ The ‘predictable abundance of salmon allowed some native cultures to flourish,’ and ‘dying spawners* feed bears, eagles, other animals, and ultimately the soil itself.’ All five species of Pacific salmon - chinook, or king; chum, or dog; coho, or silver; sockeye, or red; and pink, or humpback - spawn** in Alaskan waters, and 90% of all Pacific salmon commercially caught in North America are produced there. Indeed, <strong>if Alaska was an independent nation, it would be the largest producer of wild salmon in the world</strong>. During 2000, commercial catches of Pacific salmon in Alaska exceeded 320,000 tonnes, with an ex-vessel value of over US260 million.</p><details>  <summary>点我查看解析</summary>  <div>Game: ADF&G 这里的 G 表示狩猎的意思。和渔业紧密相关。</div>  <div>land: 这里的 land 除了有陆地的意思，还有捕捞的意思。</div>  <div>herring、groundfish, cod, sole, perch and pollock: 鲱鱼、底层鱼类（鳕鱼、鳎目鱼、鲈鱼和狭鳕）</div>  <div>spawn、spawners: 产卵、产卵者</div>  <div>vessel: 船舶、血管</div>  <div>这一段承上启下，说明了阿拉斯加的鲑鱼数量之多，足足有 90% 占比的鲑鱼是阿拉斯加出产的，举例（例如 The Great Alaska Nature Factbook）说明了鲑鱼对于阿拉斯加的重要性。强化了「阿拉斯加非常依靠鲑鱼」这一结论。</div></details><br><p>Catches have not always been so healthy. <strong>Between 1940 and 1959, overfishing led to crashes in salmon populations so severe</strong> that <strong>in 1953 Alaska was declared a federal disaster area</strong>. With the onset of statehood, however, the State of Alaska took over management of its own fisheries, guided by a state constitution which mandates that Alaska’s natural resources be managed on a sustainable basis. At that time, statewide harvests totaled around 25 million salmon. <strong>Over the next few decades average catches steadily increased as a result of this policy of sustainable management, until, during the 1990s</strong>, annual harvests were well in excess of 100 million, and on several occasions over 200 million fish.</p><details>  <summary>点我查看解析</summary>  <div>onset: 建立。</div>  <div>mandate: 要求, =ask.</div>  <div>herring、groundfish, cod, sole, perch and pollock: 鲱鱼、底层鱼类（鳕鱼、鳎目鱼、鲈鱼和狭鳕）</div>  <div>several occasions: 有的时候, =sometimes</div>  <div>这一段主要说明了阿拉斯加州政府成立后要求当地可持续发展的需要，之后捕捞的数量稳定的增长，到了 1990 年代，年产量远远超过 1 亿条，有时甚至超过 2 亿条。</div></details><br><p>The primary reason for such increases is what is known as ‘In-Season Abundance-Based Management’. There are biologists throughout the state constantly, <strong>monitoring adult fish as they show up to spawn</strong>. The biologists sit in streamside counting towers, study sonar, watch from aeroplanes, and talk to fishermen. The salmon season in Alaska is not pre-set. The fishermen know the approximate time of year when they will be allowed to fish, but on any given day, one or more field biologists in a particular area can put a halt to fishing. Even sport fishing can be brought to a halt. It is this management mechanism that has allowed salmon stocks - and, accordingly, Alaska salmon fisheries - to prosper, even as salmon populations in the rest of the United States are increasingly considered threatened or even endangered.</p><details>  <summary>点我查看解析</summary>  <div>put a halt to fishing: halt 是阻止，禁止的意思，这里当成名词使用。意思就是：阻止捕捞鱼。</div>  <div>mandate: 要求, =ask.</div>  <div>even as: 这个=however，表示转折。</div>  <div>sport fishing: 游钓，娱乐钓鱼。是一种钓鱼活动，娱乐钓鱼更注重钓鱼过程的乐趣和挑战，而不仅仅关注捕获鱼类的数量或价值。</div>  <div>这一段主要讲述了「基于季节丰度的管理」带来了影响。生物学家通过各种方式查看鲑鱼的排卵期，以便于确定哪些时候不可以捕捞。通过管理，鲑鱼渔业得以繁荣。但是最后也提到了过度捕捞会带来灾害。</div></details><br><p>In 1999, the Marine Stewardship Council (MSC) commissioned a review of the Alaska salmon fishery. <strong>The Council, which was founded in 1996, certifies fisheries that meet high environmental standards, enabling them to use a label that recognises their environmental responsibility.</strong> The MSC has established a set of criteria by which commercial fisheries can be judged. <strong>Recognising the potential benefits of being identified as environmentally responsible, fisheries approach the Council requesting to undergo the certification process.</strong> The MSC then appoints a <strong>certification committee</strong>, composed of a panel of fisheries experts, <strong>which gathers information and opinions</strong> from fishermen, biologists, government officials, industry representatives, non-governmental organisations and others.</p><details>  <summary>点我查看解析</summary>  <div>put a halt to fishing: halt 是阻止，禁止的意思，这里当成名词使用。意思就是：阻止捕捞鱼。</div>  <div>undergo: 经受、接受。在本文里面是接受认证程序。</div>  <div>a panel of fisheries experts: panel 在这里是一组的意思，同 group.</div>  <div>这一段主要讲述了海洋管理委员会制定了一套判断商业渔业的标准。并且渔业向理事会请求接受认证程序的时候，MSC 组件了专门的认证委员会收集意见。</div></details><br><p>Some observers thought the Alaska salmon fisheries would not have any chance of certification when, in the months leading up to MSC’s final decision, salmon runs throughout western Alaska completely collapsed. In the Yukon and Kuskokwim rivers, chinook and chum runs were probably the poorest since statehood; <strong>subsistence communities throughout the region, who normally have priority over commercial fishing, were devastated.</strong></p><p>The crisis was completely unexpected, but researchers believe it had nothing to do with impacts of fisheries. Rather, <strong>they contend, it was almost certainly the result of climatic shifts, prompted in part by cumulative effects of the el El Nino &#x2F; La Nina phenomenon on Pacific Ocean temperatures</strong>, culminating in a harsh winter in which huge numbers of salmon eggs were frozen. <strong>It could have meant the end as far as the certification process was concerned. However, the state reacted quickly, closing down all fisheries, even those necessary for subsistence purposes</strong>.</p><p>In September 2000, MSC announced that the Alaska salmon fisheries qualified for certification. Seven companies producing Alaska salmon were immediately granted permission to display the MSC logo on their products. Certification is for an initial period of five years, with an annual review to ensure that the fishery is continuing to meet the required standards.</p><details>  <summary>点我查看解析</summary>  <div>in the months leading up to MSC's final decision: leading up to 在...之前。</div>  <div>be devastated: 遭到了破坏。</div>  <div>subsistence: 生存</div>  <div>culminating in a harsh winter: 最终造成了严酷的冬季。</div>  <div>这三段主要讲述了，因为生态环境遭到破坏，认证可能会遭遇失败的危机。在一众找借口，逃避的声音中，州政府及时出手直面问题关闭渔场。最终获得了胜利，MSC宣布阿拉斯加鲑鱼渔业获得认证资格，并在之后一直监督他们。</div></details><br><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/19/ielts-reading-1/4.jpeg"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="英语学习" scheme="https://blog.pengdonglai.com/categories/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="English" scheme="https://blog.pengdonglai.com/tags/English/"/>
    
    <category term="阅读" scheme="https://blog.pengdonglai.com/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>一个文字格式化工具</title>
    <link href="https://blog.pengdonglai.com/2023/10/17/format-markdown-app/"/>
    <id>https://blog.pengdonglai.com/2023/10/17/format-markdown-app/</id>
    <published>2023-10-17T14:55:03.000Z</published>
    <updated>2024-06-03T17:04:59.295Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script>function formatText() {  const input = document.getElementById('input');  const output = document.getElementById('output');  const content = input.value;  const formattedContent = updateDocument(content);  output.value = formattedContent;}const updateDocument = (text) => {  let content = text;  content = processPunctuation(content);  content = condenseContent(content);  content = replaceFullNumbers(content);  content = replaceFullChars(content);  // 标记是否位于代码区域内  let isInCodeArea = false;  let existImageOrLinkArea = false;  // 每行操作  content = content    .split("\n")    .map((line) => {      if (line.trim().startsWith("```")) {        isInCodeArea = !isInCodeArea;      }      if (!/!?\[.*?\]\(.+?\)/.test(line)) {        existImageOrLinkArea = true;      }      line = replacePunctuations(line);      line = line.replace(        /([\u4e00-\u9fa5\u3040-\u30FF])([a-zA-Z0-9@&=\[\$\%\^\-\+(\/\\])/g,        "$1 $2"      );      line = line.replace(        /([a-zA-Z0-9!&;=\]\,\.\:\?\$\%\^\-\+\)\/\\])([\u4e00-\u9fa5\u3040-\u30FF])/g,        "$1 $2"      );      // 不在代码区域内才执行此项替换      if (        !/`+[^`]*[『\[]([^』\]]+)[』\]][『\[]([^』\]]+)[』\]][^`]*`+/g.test(          line        ) &&        !isInCodeArea      ) {        line = line.replace(          /[『\[]([^』\]]+)[』\]][『\[]([^』\]]+)[』\]]/g,          "[$1]($2)"        );      }      line = line.replace(        /[『\[]([^』\]]+)[』\]][（(]([^』)]+)[）)]/g,        "[$1]($2)"      );      if (existImageOrLinkArea) {        const imgOrLinks = line.match(/!?\[.*?\]\(.+?\)/g);        imgOrLinks?.forEach((e) => {          line = line.replace(e, e.replace(/ /g, "").replace("。", "."));        });      }      return line;    })    .join("\n")    .trim();  return content;};const condenseContent = (content) => {  content = content.replace(/^(.*)(\r?\n\1)+$/gm, "$1");  return content;};const replacePunctuations = (content) => {  content = content.replace(    /([\u4e00-\u9fa5\u3040-\u30FF])\.($|\s*)/g,    "$1。"  );  content = content.replace(/([\u4e00-\u9fa5\u3040-\u30FF]),\s*/g, "$1，");  content = content.replace(/([\u4e00-\u9fa5\u3040-\u30FF]);\s*/g, "$1；");  content = content.replace(/([\u4e00-\u9fa5\u3040-\u30FF])!\s*/g, "$1！");  content = content.replace(/([\u4e00-\u9fa5\u3040-\u30FF]):\s*/g, "$1：");  content = content.replace(/([\u4e00-\u9fa5\u3040-\u30FF])\?\s*/g, "$1？");  content = content.replace(/([\u4e00-\u9fa5\u3040-\u30FF])\\\s*/g, "$1、");  content = content.replace(/\(([\u4e00-\u9fa5\u3040-\u30FF])/g, "（$1");  content = content.replace(/\[([\u4e00-\u9fa5\u3040-\u30FF])/g, "『$1");  content = content.replace(/([\u4e00-\u9fa5\u3040-\u30FF。！])\]/g, "$1』");  content = content.replace(/<([\u4e00-\u9fa5\u3040-\u30FF])/g, "《$1");  content = content.replace(/([\u4e00-\u9fa5\u3040-\u30FF。！])>/g, "$1》");  content = content.replace(/。{3,}/g, "\u2026\u2026");  content = content.replace(/([！？])$1{3,}/g, "$1$1$1");  content = content.replace(/([。，；：、“”『』〖〗《》])\1{1,}/g, "$1");  return content;};const replaceFullNumbers = (content) => {  // " 全角数字。";  content = content.replace("０", "0");  content = content.replace("１", "1");  content = content.replace("２", "2");  content = content.replace("３", "3");  content = content.replace("４", "4");  content = content.replace("５", "5");  content = content.replace("６", "6");  content = content.replace("７", "7");  content = content.replace("８", "8");  content = content.replace("９", "9");  return content;}const processPunctuation = (text) => {  const punctuationPairs = [    { en: '.', zh: '。' },    { en: ',', zh: '，' },    { en: '?', zh: '？' },    { en: '!', zh: '！' },    { en: ':', zh: '：' },    { en: ';', zh: '；' },    { en: '(', zh: '（' },    { en: ')', zh: '）' },    { en: '[', zh: '【' },    { en: ']', zh: '】' },    { en: '{', zh: '｛' },    { en: '}', zh: '｝' },    { en: '"', zh: '“' },    { en: "'", zh: '‘' },    { en: '-', zh: '—' },    { en: '...', zh: '……' },    { en: '-', zh: '–' },    // 添加更多的标点符号对应关系  ];  let processedText = '';  for (let i = 0; i < text.length; i++) {    const currentChar = text[i];    const previousChar = text[i - 1] || '';    const punctuationPair = punctuationPairs.find(      (pair) => pair.en === currentChar || pair.zh === currentChar    );    if (punctuationPair) {      const isEnglishPunctuation = /[a-zA-Z0-9]/.test(previousChar);      const shouldAddSpace = /[a-zA-Z0-9]/.test(text[i + 1]) && isEnglishPunctuation;      processedText += isEnglishPunctuation        ? punctuationPair.en        : punctuationPair.zh;      if (shouldAddSpace) {        processedText += ' ';      }    } else {      processedText += currentChar;    }  }  return processedText;};const replaceFullChars = (content) => {  // " 全角英文和标点。";  content = content.replace("Ａ", "A");  content = content.replace("Ｂ", "B");  content = content.replace("Ｃ", "C");  content = content.replace("Ｄ", "D");  content = content.replace("Ｅ", "E");  content = content.replace("Ｆ", "F");  content = content.replace("Ｇ", "G");  content = content.replace("Ｈ", "H");  content = content.replace("Ｉ", "I");  content = content.replace("Ｊ", "J");  content = content.replace("Ｋ", "K");  content = content.replace("Ｌ", "L");  content = content.replace("Ｍ", "M");  content = content.replace("Ｎ", "N");  content = content.replace("Ｏ", "O");  content = content.replace("Ｐ", "P");  content = content.replace("Ｑ", "Q");  content = content.replace("Ｒ", "R");  content = content.replace("Ｓ", "S");  content = content.replace("Ｔ", "T");  content = content.replace("Ｕ", "U");  content = content.replace("Ｖ", "V");  content = content.replace("Ｗ", "W");  content = content.replace("Ｘ", "X");  content = content.replace("Ｙ", "Y");  content = content.replace("Ｚ", "Z");  content = content.replace("ａ", "a");  content = content.replace("ｂ", "b");  content = content.replace("ｃ", "c");  content = content.replace("ｄ", "d");  content = content.replace("ｅ", "e");  content = content.replace("ｆ", "f");  content = content.replace("ｇ", "g");  content = content.replace("ｈ", "h");  content = content.replace("ｉ", "i");  content = content.replace("ｊ", "j");  content = content.replace("ｋ", "k");  content = content.replace("ｌ", "l");  content = content.replace("ｍ", "m");  content = content.replace("ｎ", "n");  content = content.replace("ｏ", "o");  content = content.replace("ｐ", "p");  content = content.replace("ｑ", "q");  content = content.replace("ｒ", "r");  content = content.replace("ｓ", "s");  content = content.replace("ｔ", "t");  content = content.replace("ｕ", "u");  content = content.replace("ｖ", "v");  content = content.replace("ｗ", "w");  content = content.replace("ｘ", "x");  content = content.replace("ｙ", "y");  content = content.replace("ｚ", "z");  content = content.replace("＠", "@");  return content;}</script><p>使用方法：将文字输入到这个 textarea 里面去，点击格式化后，就可以拿到格式化后的文章。</p><p><strong>注意，本工具配合 markdown 使用更佳，目前只支持了中文和英语两种语言。</strong>本工具在2023年只是一个 MVP 版本，后续会根据自己的需求添加其它的功能，尽量让它变的更好用。</p><textarea placeholder="请在此处输入你的文字" id="input" style="width: 100%; height: 400px; background: rgba(255, 255, 255, 0.3); border-radius: 5px; padding: 8px;"></textarea><br><button class="btn-small bg-color waves-effect waves-light" onclick="formatText()">点我格式化</button><br><br><textarea placeholder="这里展示转换后的文字" id="output" style="width: 100%; height: 400px; background: rgba(255, 255, 255, 0.3); border-radius: 5px; padding: 8px;"></textarea><p>做这个工具的初衷是因为自己可能有强迫症吧，每次希望让自己做出来的东西更加的好看。</p><p>我也不知道哪一天开始我变成了这样…</p><p>最后来张二次元？(ᕑᗢᓫ∗)˒</p><div align="center">  <img src="../../../../loading2.svg" data-original="/2023/10/17/format-markdown-app/1.jpeg"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="开箱即用" scheme="https://blog.pengdonglai.com/categories/%E5%BC%80%E7%AE%B1%E5%8D%B3%E7%94%A8/"/>
    
    
    <category term="格式化" scheme="https://blog.pengdonglai.com/tags/%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    
  </entry>
  
</feed>
